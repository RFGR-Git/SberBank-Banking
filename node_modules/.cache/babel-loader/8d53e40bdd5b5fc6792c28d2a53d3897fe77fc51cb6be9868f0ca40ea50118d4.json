{"ast":null,"code":"import React,{useState}from'react';import{doc,updateDoc}from'firebase/firestore';import GlassCard from'./common/GlassCard';import{COLORS}from'../constants';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const BankingServicesLayout=_ref=>{let{userProfile,setUserProfile,db,appId,auth}=_ref;const[transferAmount,setTransferAmount]=useState('');const[recipient,setRecipient]=useState('');const[transferCurrency,setTransferCurrency]=useState('RUB');const[depositAmount,setDepositAmount]=useState('');const[withdrawalAmount,setWithdrawalAmount]=useState('');const[exchangeAmount,setExchangeAmount]=useState('');const[fromCurrency,setFromCurrency]=useState('RUB');const[toCurrency,setToCurrency]=useState('USD');const[exchangeResult,setExchangeResult]=useState(0);const exchangeRates={RUB:{USD:0.011,EUR:0.010},USD:{RUB:90.00,EUR:0.92},EUR:{RUB:100.00,USD:1.08}};const handleTransfer=async e=>{e.preventDefault();const amount=parseFloat(transferAmount);if(isNaN(amount)||amount<=0){alert('Please enter a valid amount.');return;}if(userProfile.balance<amount){alert('Insufficient funds for transfer.');return;}try{const userDocRef=doc(db,`artifacts/${appId}/users`,auth.currentUser.uid);await updateDoc(userDocRef,{balance:userProfile.balance-amount,'accounts.Personal':userProfile.accounts.Personal-amount,// Assume transfer from personal\ntransactions:[...userProfile.transactions,{date:new Date().toLocaleDateString('en-US'),description:`Transfer to ${recipient}`,amount:-amount,status:'Complete'}]});alert(`Transferred ${amount.toFixed(2)} ${transferCurrency} to ${recipient}.`);setTransferAmount('');setRecipient('');}catch(error){console.error(\"Error during transfer:\",error);alert(`Transfer failed: ${error.message}`);}};const handleDeposit=async e=>{e.preventDefault();const amount=parseFloat(depositAmount);if(isNaN(amount)||amount<=0){alert('Please enter a valid amount.');return;}try{const userDocRef=doc(db,`artifacts/${appId}/users`,auth.currentUser.uid);await updateDoc(userDocRef,{balance:userProfile.balance+amount,'accounts.Personal':userProfile.accounts.Personal+amount,// Assume deposit to personal\ntransactions:[...userProfile.transactions,{date:new Date().toLocaleDateString('en-US'),description:'Cash Deposit',amount:amount,status:'Complete'}]});alert(`Deposited ${amount.toFixed(2)} RUB.`);setDepositAmount('');}catch(error){console.error(\"Error during deposit:\",error);alert(`Deposit failed: ${error.message}`);}};const handleWithdrawal=async e=>{e.preventDefault();const amount=parseFloat(withdrawalAmount);if(isNaN(amount)||amount<=0){alert('Please enter a valid amount.');return;}if(userProfile.balance<amount){alert('Insufficient funds for withdrawal.');return;}try{const userDocRef=doc(db,`artifacts/${appId}/users`,auth.currentUser.uid);await updateDoc(userDocRef,{balance:userProfile.balance-amount,'accounts.Personal':userProfile.accounts.Personal-amount,// Assume withdrawal from personal\ntransactions:[...userProfile.transactions,{date:new Date().toLocaleDateString('en-US'),description:'Cash Withdrawal',amount:-amount,status:'Complete'}]});alert(`Withdrew ${amount.toFixed(2)} RUB.`);setWithdrawalAmount('');}catch(error){console.error(\"Error during withdrawal:\",error);alert(`Withdrawal failed: ${error.message}`);}};const handleExchange=async e=>{var _exchangeRates$fromCu;e.preventDefault();const amount=parseFloat(exchangeAmount);if(isNaN(amount)||amount<=0){alert('Please enter a valid amount.');return;}if(fromCurrency===toCurrency){alert('Cannot exchange to the same currency.');return;}const rate=(_exchangeRates$fromCu=exchangeRates[fromCurrency])===null||_exchangeRates$fromCu===void 0?void 0:_exchangeRates$fromCu[toCurrency];if(!rate){alert('Exchange rate not available for selected currencies.');return;}if(userProfile.balance<amount){// Simplified: assume all exchanges from main balance\nalert(`Insufficient RUB balance for exchange.`);return;}const convertedAmount=amount*rate;setExchangeResult(convertedAmount);try{const userDocRef=doc(db,`artifacts/${appId}/users`,auth.currentUser.uid);await updateDoc(userDocRef,{balance:userProfile.balance-amount,// Deduct from main balance\n'accounts.Personal':userProfile.accounts.Personal-amount,// Update personal account with new RUB balance\ntransactions:[...userProfile.transactions,{date:new Date().toLocaleDateString('en-US'),description:`Currency Exchange: ${amount.toFixed(2)} ${fromCurrency} to ${convertedAmount.toFixed(2)} ${toCurrency}`,amount:-amount,// Show original currency deduction\nstatus:'Complete'}]});alert(`Exchanged ${amount.toFixed(2)} ${fromCurrency} to ${convertedAmount.toFixed(2)} ${toCurrency}.`);}catch(error){console.error(\"Error during exchange:\",error);alert(`Exchange failed: ${error.message}`);}};return/*#__PURE__*/_jsxs(\"div\",{className:\"container mx-auto px-4 py-8\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-4xl font-extrabold mb-8 text-center drop-shadow-sm\",style:{color:COLORS.primaryAccent},children:\"\\uD83D\\uDCB5 Banking Services\"}),/*#__PURE__*/_jsxs(\"section\",{className:\"mb-12\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-3xl font-bold mb-6\",style:{color:COLORS.typography},children:\"Money Transfers\"}),/*#__PURE__*/_jsx(GlassCard,{className:\"p-8\",children:/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleTransfer,className:\"space-y-4\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Recipient Account Number / Bank ID\",value:recipient,onChange:e=>setRecipient(e.target.value),className:\"w-full p-3 border border-gray-600 rounded-lg\",style:{backgroundColor:COLORS.secondaryAccent,color:COLORS.typography},required:true}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",placeholder:\"Amount\",value:transferAmount,onChange:e=>setTransferAmount(e.target.value),className:\"w-full p-3 border border-gray-600 rounded-lg\",style:{backgroundColor:COLORS.secondaryAccent,color:COLORS.typography},required:true}),/*#__PURE__*/_jsxs(\"select\",{value:transferCurrency,onChange:e=>setTransferCurrency(e.target.value),className:\"w-full p-3 border border-gray-600 rounded-lg\",style:{backgroundColor:COLORS.secondaryAccent,color:COLORS.typography},children:[/*#__PURE__*/_jsx(\"option\",{children:\"RUB\"}),/*#__PURE__*/_jsx(\"option\",{children:\"USD\"}),/*#__PURE__*/_jsx(\"option\",{children:\"EUR\"})]}),/*#__PURE__*/_jsx(\"p\",{className:\"text-sm text-gray-400 italic\",children:\"Note: Fees and delays apply for interbank/international transfers.\"}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"w-full font-bold py-3 px-6 rounded-lg shadow-lg transform hover:scale-105 transition-all duration-300\",style:{backgroundColor:COLORS.primaryAccent,color:COLORS.background,boxShadow:`0 0 15px ${COLORS.buttonsGlow}`},children:\"Initiate Transfer\"})]})})]}),/*#__PURE__*/_jsxs(\"section\",{className:\"mb-12\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-3xl font-bold mb-6\",style:{color:COLORS.typography},children:\"Deposit & Withdrawal\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"grid grid-cols-1 md:grid-cols-2 gap-8\",children:[/*#__PURE__*/_jsxs(GlassCard,{className:\"p-6\",children:[/*#__PURE__*/_jsx(\"h4\",{className:\"text-2xl font-semibold mb-4\",style:{color:COLORS.primaryAccent},children:\"Deposit Funds\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleDeposit,className:\"space-y-4\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"number\",placeholder:\"Amount\",value:depositAmount,onChange:e=>setDepositAmount(e.target.value),className:\"w-full p-3 border border-gray-600 rounded-lg mb-4\",style:{backgroundColor:COLORS.secondaryAccent,color:COLORS.typography},required:true}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"w-full font-bold py-3 px-6 rounded-lg shadow-md transition-all duration-200\",style:{backgroundColor:COLORS.primaryAccent,color:COLORS.background,boxShadow:`0 0 10px ${COLORS.buttonsGlow}`},children:\"Deposit (Manual Approval)\"})]})]}),/*#__PURE__*/_jsxs(GlassCard,{className:\"p-6\",children:[/*#__PURE__*/_jsx(\"h4\",{className:\"text-2xl font-semibold mb-4\",style:{color:COLORS.primaryAccent},children:\"Withdraw Funds\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleWithdrawal,className:\"space-y-4\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"number\",placeholder:\"Amount\",value:withdrawalAmount,onChange:e=>setWithdrawalAmount(e.target.value),className:\"w-full p-3 border border-gray-600 rounded-lg mb-4\",style:{backgroundColor:COLORS.secondaryAccent,color:COLORS.typography},required:true}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"w-full font-bold py-3 px-6 rounded-lg shadow-md transition-all duration-200\",style:{backgroundColor:COLORS.primaryAccent,color:COLORS.background,boxShadow:`0 0 10px ${COLORS.buttonsGlow}`},children:\"Withdraw to Cash/Digital Wallet\"})]})]})]})]}),/*#__PURE__*/_jsxs(\"section\",{className:\"mb-12\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-3xl font-bold mb-6\",style:{color:COLORS.typography},children:\"Currency Exchange\"}),/*#__PURE__*/_jsx(GlassCard,{className:\"p-8\",children:/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleExchange,className:\"space-y-4\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"number\",placeholder:\"Amount to Exchange\",value:exchangeAmount,onChange:e=>setExchangeAmount(e.target.value),className:\"w-full p-3 border border-gray-600 rounded-lg\",style:{backgroundColor:COLORS.secondaryAccent,color:COLORS.typography},required:true}),/*#__PURE__*/_jsxs(\"div\",{className:\"grid grid-cols-2 gap-4\",children:[/*#__PURE__*/_jsxs(\"select\",{value:fromCurrency,onChange:e=>setFromCurrency(e.target.value),className:\"w-full p-3 border border-gray-600 rounded-lg\",style:{backgroundColor:COLORS.secondaryAccent,color:COLORS.typography},children:[/*#__PURE__*/_jsx(\"option\",{children:\"RUB\"}),/*#__PURE__*/_jsx(\"option\",{children:\"USD\"}),/*#__PURE__*/_jsx(\"option\",{children:\"EUR\"})]}),/*#__PURE__*/_jsxs(\"select\",{value:toCurrency,onChange:e=>setToCurrency(e.target.value),className:\"w-full p-3 border border-gray-600 rounded-lg\",style:{backgroundColor:COLORS.secondaryAccent,color:COLORS.typography},children:[/*#__PURE__*/_jsx(\"option\",{children:\"USD\"}),/*#__PURE__*/_jsx(\"option\",{children:\"RUB\"}),/*#__PURE__*/_jsx(\"option\",{children:\"EUR\"})]})]}),/*#__PURE__*/_jsxs(\"p\",{className:\"text-xl font-semibold text-center\",style:{color:COLORS.primaryAccent},children:[\"Result: \",exchangeResult.toFixed(2),\" \",toCurrency]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"w-full font-bold py-3 px-6 rounded-lg shadow-lg transform hover:scale-105 transition-all duration-300\",style:{backgroundColor:COLORS.primaryAccent,color:COLORS.background,boxShadow:`0 0 15px ${COLORS.buttonsGlow}`},children:\"Calculate & Exchange\"})]})})]})]});};export default BankingServicesLayout;","map":{"version":3,"names":["React","useState","doc","updateDoc","GlassCard","COLORS","jsx","_jsx","jsxs","_jsxs","BankingServicesLayout","_ref","userProfile","setUserProfile","db","appId","auth","transferAmount","setTransferAmount","recipient","setRecipient","transferCurrency","setTransferCurrency","depositAmount","setDepositAmount","withdrawalAmount","setWithdrawalAmount","exchangeAmount","setExchangeAmount","fromCurrency","setFromCurrency","toCurrency","setToCurrency","exchangeResult","setExchangeResult","exchangeRates","RUB","USD","EUR","handleTransfer","e","preventDefault","amount","parseFloat","isNaN","alert","balance","userDocRef","currentUser","uid","accounts","Personal","transactions","date","Date","toLocaleDateString","description","status","toFixed","error","console","message","handleDeposit","handleWithdrawal","handleExchange","_exchangeRates$fromCu","rate","convertedAmount","className","children","style","color","primaryAccent","typography","onSubmit","type","placeholder","value","onChange","target","backgroundColor","secondaryAccent","required","background","boxShadow","buttonsGlow"],"sources":["C:/Users/trent/OneDrive/Desktop/SberBank Website/src/components/BankingServicesLayout.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { doc, updateDoc } from 'firebase/firestore';\r\nimport GlassCard from './common/GlassCard';\r\nimport { COLORS } from '../constants';\r\n\r\nconst BankingServicesLayout = ({ userProfile, setUserProfile, db, appId, auth }) => {\r\n    const [transferAmount, setTransferAmount] = useState('');\r\n    const [recipient, setRecipient] = useState('');\r\n    const [transferCurrency, setTransferCurrency] = useState('RUB');\r\n    const [depositAmount, setDepositAmount] = useState('');\r\n    const [withdrawalAmount, setWithdrawalAmount] = useState('');\r\n    const [exchangeAmount, setExchangeAmount] = useState('');\r\n    const [fromCurrency, setFromCurrency] = useState('RUB');\r\n    const [toCurrency, setToCurrency] = useState('USD');\r\n    const [exchangeResult, setExchangeResult] = useState(0);\r\n\r\n    const exchangeRates = {\r\n        RUB: { USD: 0.011, EUR: 0.010 },\r\n        USD: { RUB: 90.00, EUR: 0.92 },\r\n        EUR: { RUB: 100.00, USD: 1.08 },\r\n    };\r\n\r\n    const handleTransfer = async (e) => {\r\n        e.preventDefault();\r\n        const amount = parseFloat(transferAmount);\r\n        if (isNaN(amount) || amount <= 0) {\r\n            alert('Please enter a valid amount.');\r\n            return;\r\n        }\r\n        if (userProfile.balance < amount) {\r\n            alert('Insufficient funds for transfer.');\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const userDocRef = doc(db, `artifacts/${appId}/users`, auth.currentUser.uid);\r\n            await updateDoc(userDocRef, {\r\n                balance: userProfile.balance - amount,\r\n                'accounts.Personal': userProfile.accounts.Personal - amount, // Assume transfer from personal\r\n                transactions: [...userProfile.transactions, {\r\n                    date: new Date().toLocaleDateString('en-US'),\r\n                    description: `Transfer to ${recipient}`,\r\n                    amount: -amount,\r\n                    status: 'Complete'\r\n                }]\r\n            });\r\n            alert(`Transferred ${amount.toFixed(2)} ${transferCurrency} to ${recipient}.`);\r\n            setTransferAmount('');\r\n            setRecipient('');\r\n        } catch (error) {\r\n            console.error(\"Error during transfer:\", error);\r\n            alert(`Transfer failed: ${error.message}`);\r\n        }\r\n    };\r\n\r\n    const handleDeposit = async (e) => {\r\n        e.preventDefault();\r\n        const amount = parseFloat(depositAmount);\r\n        if (isNaN(amount) || amount <= 0) {\r\n            alert('Please enter a valid amount.');\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const userDocRef = doc(db, `artifacts/${appId}/users`, auth.currentUser.uid);\r\n            await updateDoc(userDocRef, {\r\n                balance: userProfile.balance + amount,\r\n                'accounts.Personal': userProfile.accounts.Personal + amount, // Assume deposit to personal\r\n                transactions: [...userProfile.transactions, {\r\n                    date: new Date().toLocaleDateString('en-US'),\r\n                    description: 'Cash Deposit',\r\n                    amount: amount,\r\n                    status: 'Complete'\r\n                }]\r\n            });\r\n            alert(`Deposited ${amount.toFixed(2)} RUB.`);\r\n            setDepositAmount('');\r\n        } catch (error) {\r\n            console.error(\"Error during deposit:\", error);\r\n            alert(`Deposit failed: ${error.message}`);\r\n        }\r\n    };\r\n\r\n    const handleWithdrawal = async (e) => {\r\n        e.preventDefault();\r\n        const amount = parseFloat(withdrawalAmount);\r\n        if (isNaN(amount) || amount <= 0) {\r\n            alert('Please enter a valid amount.');\r\n            return;\r\n        }\r\n        if (userProfile.balance < amount) {\r\n            alert('Insufficient funds for withdrawal.');\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const userDocRef = doc(db, `artifacts/${appId}/users`, auth.currentUser.uid);\r\n            await updateDoc(userDocRef, {\r\n                balance: userProfile.balance - amount,\r\n                'accounts.Personal': userProfile.accounts.Personal - amount, // Assume withdrawal from personal\r\n                transactions: [...userProfile.transactions, {\r\n                    date: new Date().toLocaleDateString('en-US'),\r\n                    description: 'Cash Withdrawal',\r\n                    amount: -amount,\r\n                    status: 'Complete'\r\n                }]\r\n            });\r\n            alert(`Withdrew ${amount.toFixed(2)} RUB.`);\r\n            setWithdrawalAmount('');\r\n        } catch (error) {\r\n            console.error(\"Error during withdrawal:\", error);\r\n            alert(`Withdrawal failed: ${error.message}`);\r\n        }\r\n    };\r\n\r\n    const handleExchange = async (e) => {\r\n        e.preventDefault();\r\n        const amount = parseFloat(exchangeAmount);\r\n        if (isNaN(amount) || amount <= 0) {\r\n            alert('Please enter a valid amount.');\r\n            return;\r\n        }\r\n        if (fromCurrency === toCurrency) {\r\n            alert('Cannot exchange to the same currency.');\r\n            return;\r\n        }\r\n\r\n        const rate = exchangeRates[fromCurrency]?.[toCurrency];\r\n        if (!rate) {\r\n            alert('Exchange rate not available for selected currencies.');\r\n            return;\r\n        }\r\n\r\n        if (userProfile.balance < amount) { // Simplified: assume all exchanges from main balance\r\n            alert(`Insufficient RUB balance for exchange.`);\r\n            return;\r\n        }\r\n\r\n        const convertedAmount = amount * rate;\r\n        setExchangeResult(convertedAmount);\r\n\r\n        try {\r\n            const userDocRef = doc(db, `artifacts/${appId}/users`, auth.currentUser.uid);\r\n            await updateDoc(userDocRef, {\r\n                balance: userProfile.balance - amount, // Deduct from main balance\r\n                'accounts.Personal': userProfile.accounts.Personal - amount, // Update personal account with new RUB balance\r\n                transactions: [...userProfile.transactions, {\r\n                    date: new Date().toLocaleDateString('en-US'),\r\n                    description: `Currency Exchange: ${amount.toFixed(2)} ${fromCurrency} to ${convertedAmount.toFixed(2)} ${toCurrency}`,\r\n                    amount: -amount, // Show original currency deduction\r\n                    status: 'Complete'\r\n                }]\r\n            });\r\n            alert(`Exchanged ${amount.toFixed(2)} ${fromCurrency} to ${convertedAmount.toFixed(2)} ${toCurrency}.`);\r\n        } catch (error) {\r\n            console.error(\"Error during exchange:\", error);\r\n            alert(`Exchange failed: ${error.message}`);\r\n        }\r\n    };\r\n\r\n\r\n    return (\r\n        <div className=\"container mx-auto px-4 py-8\">\r\n            <h2 className=\"text-4xl font-extrabold mb-8 text-center drop-shadow-sm\" style={{ color: COLORS.primaryAccent }}>💵 Banking Services</h2>\r\n\r\n            {/* Money Transfers */}\r\n            <section className=\"mb-12\">\r\n                <h3 className=\"text-3xl font-bold mb-6\" style={{ color: COLORS.typography }}>Money Transfers</h3>\r\n                <GlassCard className=\"p-8\">\r\n                    <form onSubmit={handleTransfer} className=\"space-y-4\">\r\n                        <input type=\"text\" placeholder=\"Recipient Account Number / Bank ID\" value={recipient} onChange={(e) => setRecipient(e.target.value)} className=\"w-full p-3 border border-gray-600 rounded-lg\" style={{ backgroundColor: COLORS.secondaryAccent, color: COLORS.typography }} required />\r\n                        <input type=\"number\" placeholder=\"Amount\" value={transferAmount} onChange={(e) => setTransferAmount(e.target.value)} className=\"w-full p-3 border border-gray-600 rounded-lg\" style={{ backgroundColor: COLORS.secondaryAccent, color: COLORS.typography }} required />\r\n                        <select value={transferCurrency} onChange={(e) => setTransferCurrency(e.target.value)} className=\"w-full p-3 border border-gray-600 rounded-lg\" style={{ backgroundColor: COLORS.secondaryAccent, color: COLORS.typography }}>\r\n                            <option>RUB</option><option>USD</option><option>EUR</option>\r\n                        </select>\r\n                        <p className=\"text-sm text-gray-400 italic\">Note: Fees and delays apply for interbank/international transfers.</p>\r\n                        <button type=\"submit\" className=\"w-full font-bold py-3 px-6 rounded-lg shadow-lg transform hover:scale-105 transition-all duration-300\" style={{ backgroundColor: COLORS.primaryAccent, color: COLORS.background, boxShadow: `0 0 15px ${COLORS.buttonsGlow}` }}>Initiate Transfer</button>\r\n                    </form>\r\n                </GlassCard>\r\n            </section>\r\n\r\n            {/* Deposit & Withdrawal Options */}\r\n            <section className=\"mb-12\">\r\n                <h3 className=\"text-3xl font-bold mb-6\" style={{ color: COLORS.typography }}>Deposit & Withdrawal</h3>\r\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-8\">\r\n                    <GlassCard className=\"p-6\">\r\n                        <h4 className=\"text-2xl font-semibold mb-4\" style={{ color: COLORS.primaryAccent }}>Deposit Funds</h4>\r\n                        <form onSubmit={handleDeposit} className=\"space-y-4\">\r\n                            <input type=\"number\" placeholder=\"Amount\" value={depositAmount} onChange={(e) => setDepositAmount(e.target.value)} className=\"w-full p-3 border border-gray-600 rounded-lg mb-4\" style={{ backgroundColor: COLORS.secondaryAccent, color: COLORS.typography }} required />\r\n                            <button type=\"submit\" className=\"w-full font-bold py-3 px-6 rounded-lg shadow-md transition-all duration-200\" style={{ backgroundColor: COLORS.primaryAccent, color: COLORS.background, boxShadow: `0 0 10px ${COLORS.buttonsGlow}` }}>Deposit (Manual Approval)</button>\r\n                        </form>\r\n                    </GlassCard>\r\n                    <GlassCard className=\"p-6\">\r\n                        <h4 className=\"text-2xl font-semibold mb-4\" style={{ color: COLORS.primaryAccent }}>Withdraw Funds</h4>\r\n                        <form onSubmit={handleWithdrawal} className=\"space-y-4\">\r\n                            <input type=\"number\" placeholder=\"Amount\" value={withdrawalAmount} onChange={(e) => setWithdrawalAmount(e.target.value)} className=\"w-full p-3 border border-gray-600 rounded-lg mb-4\" style={{ backgroundColor: COLORS.secondaryAccent, color: COLORS.typography }} required />\r\n                            <button type=\"submit\" className=\"w-full font-bold py-3 px-6 rounded-lg shadow-md transition-all duration-200\" style={{ backgroundColor: COLORS.primaryAccent, color: COLORS.background, boxShadow: `0 0 10px ${COLORS.buttonsGlow}` }}>Withdraw to Cash/Digital Wallet</button>\r\n                        </form>\r\n                    </GlassCard>\r\n                </div>\r\n            </section>\r\n\r\n            {/* Currency Exchange */}\r\n            <section className=\"mb-12\">\r\n                <h3 className=\"text-3xl font-bold mb-6\" style={{ color: COLORS.typography }}>Currency Exchange</h3>\r\n                <GlassCard className=\"p-8\">\r\n                    <form onSubmit={handleExchange} className=\"space-y-4\">\r\n                        <input type=\"number\" placeholder=\"Amount to Exchange\" value={exchangeAmount} onChange={(e) => setExchangeAmount(e.target.value)} className=\"w-full p-3 border border-gray-600 rounded-lg\" style={{ backgroundColor: COLORS.secondaryAccent, color: COLORS.typography }} required />\r\n                        <div className=\"grid grid-cols-2 gap-4\">\r\n                            <select value={fromCurrency} onChange={(e) => setFromCurrency(e.target.value)} className=\"w-full p-3 border border-gray-600 rounded-lg\" style={{ backgroundColor: COLORS.secondaryAccent, color: COLORS.typography }}>\r\n                                <option>RUB</option><option>USD</option><option>EUR</option>\r\n                            </select>\r\n                            <select value={toCurrency} onChange={(e) => setToCurrency(e.target.value)} className=\"w-full p-3 border border-gray-600 rounded-lg\" style={{ backgroundColor: COLORS.secondaryAccent, color: COLORS.typography }}>\r\n                                <option>USD</option><option>RUB</option><option>EUR</option>\r\n                            </select>\r\n                        </div>\r\n                        <p className=\"text-xl font-semibold text-center\" style={{ color: COLORS.primaryAccent }}>Result: {exchangeResult.toFixed(2)} {toCurrency}</p>\r\n                        <button type=\"submit\" className=\"w-full font-bold py-3 px-6 rounded-lg shadow-lg transform hover:scale-105 transition-all duration-300\" style={{ backgroundColor: COLORS.primaryAccent, color: COLORS.background, boxShadow: `0 0 15px ${COLORS.buttonsGlow}` }}>Calculate & Exchange</button>\r\n                    </form>\r\n                </GlassCard>\r\n            </section>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default BankingServicesLayout;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}