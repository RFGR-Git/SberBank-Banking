{"ast":null,"code":"import React,{useState}from'react';import GlassCard from'../common/GlassCard';import{COLORS}from'../../constants';import{Landmark,Building,FileBadge}from'lucide-react';import{doc,updateDoc,getDoc}from'firebase/firestore';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const AdminGovernmentTools=_ref=>{let{db,appId,findUserByDiscordOrBankId}=_ref;const[govAccountId,setGovAccountId]=useState('');const[govAmount,setGovAmount]=useState('');const[ministryName,setMinistryName]=useState('');const[businessLinkUserId,setBusinessLinkUserId]=useState('');const[businessRegId,setBusinessRegId]=useState('');const handleGovTransaction=async type=>{const amount=parseFloat(govAmount);if(isNaN(amount)||amount<=0||!govAccountId){alert('Please enter a valid amount and Government Account ID.');return;}try{const foundUser=await findUserByDiscordOrBankId(govAccountId);if(!foundUser){alert('Government Account not found.');return;}const userDocRef=doc(db,`artifacts/${appId}/users`,foundUser.id);const currentGovBalance=foundUser.data.accounts.Government||0;const currentBalance=foundUser.data.balance||0;let newGovBalance=currentGovBalance;let newOverallBalance=currentBalance;let description='';if(type==='deposit'){newGovBalance+=amount;newOverallBalance+=amount;description=`Government Deposit by Admin`;}else{if(currentGovBalance<amount){alert('Insufficient funds in Government Account.');return;}newGovBalance-=amount;newOverallBalance-=amount;description=`Government Withdrawal by Admin`;}await updateDoc(userDocRef,{'accounts.Government':newGovBalance,balance:newOverallBalance,transactions:[...(foundUser.data.transactions||[]),{date:new Date().toLocaleDateString('en-US'),description:description,amount:type==='deposit'?amount:-amount,status:'Complete'}]});alert(`${type==='deposit'?'Deposited':'Withdrew'} ${amount.toFixed(2)} RUB for Government Account ${govAccountId}.`);setGovAccountId('');setGovAmount('');}catch(error){console.error(`Error during Government ${type}:`,error);alert(`Failed to perform Government ${type}: ${error.message}`);}};const handleSetupMinistryAccount=()=>{if(!ministryName){alert('Please enter a Ministry/Agency Name.');return;}alert(`Simulating setup for Ministry/Agency Account: ${ministryName}. (Actual setup handled via Account Requests Queue).`);setMinistryName('');};const handleLinkBusiness=async()=>{if(!businessLinkUserId||!businessRegId){alert('Please enter both User ID and Business Registration ID.');return;}try{const foundUser=await findUserByDiscordOrBankId(businessLinkUserId);if(foundUser){const userDocRef=doc(db,`artifacts/${appId}/users`,foundUser.id);// Ensure the user has a business account or it's implicitly created/linked\n// For simplicity, we'll just link the ID and set isBusinessOwner\nawait updateDoc(userDocRef,{businessRegistrationId:businessRegId,isBusinessOwner:true// Optionally, you could also update a specific business account balance here\n// 'accounts.Business': (foundUser.data.accounts?.Business || 0) // No change to balance on link\n});alert(`Business Registration ID ${businessRegId} linked to user ${businessLinkUserId}.`);setBusinessLinkUserId('');setBusinessRegId('');}else{alert('User not found.');}}catch(error){console.error(\"Error linking business:\",error);alert(`Failed to link business: ${error.message}`);}};return/*#__PURE__*/_jsxs(\"div\",{className:\"p-8 w-full\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-3xl font-bold mb-6\",style:{color:COLORS.typography},children:\"Government Tools\"}),/*#__PURE__*/_jsxs(\"section\",{className:\"mb-8\",children:[/*#__PURE__*/_jsxs(\"h4\",{className:\"text-2xl font-semibold mb-4 flex items-center\",style:{color:COLORS.primaryAccent},children:[/*#__PURE__*/_jsx(Landmark,{size:24,className:\"mr-2\"}),\" Deposit / Withdraw (Gov)\"]}),/*#__PURE__*/_jsxs(GlassCard,{className:\"p-6\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Government Account ID\",value:govAccountId,onChange:e=>setGovAccountId(e.target.value),className:\"w-full p-3 border border-gray-600 rounded-lg mb-4\",style:{backgroundColor:COLORS.secondaryAccent,color:COLORS.typography}}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",placeholder:\"Amount\",value:govAmount,onChange:e=>setGovAmount(e.target.value),className:\"w-full p-3 border border-gray-600 rounded-lg mb-4\",style:{backgroundColor:COLORS.secondaryAccent,color:COLORS.typography}}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex space-x-4\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleGovTransaction('deposit'),className:\"w-1/2 font-bold py-2 px-6 rounded-lg shadow-md transition-all duration-200\",style:{backgroundColor:COLORS.primaryAccent,color:COLORS.background,boxShadow:`0 0 10px ${COLORS.buttonsGlow}`},children:\"Deposit\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleGovTransaction('withdraw'),className:\"w-1/2 font-bold py-2 px-6 rounded-lg shadow-md transition-all duration-200 bg-orange-600 hover:bg-orange-500\",style:{boxShadow:`0 0 10px rgba(255,165,0,0.5)`},children:\"Withdraw\"})]})]})]}),/*#__PURE__*/_jsxs(\"section\",{className:\"mb-8\",children:[/*#__PURE__*/_jsxs(\"h4\",{className:\"text-2xl font-semibold mb-4 flex items-center\",style:{color:COLORS.primaryAccent},children:[/*#__PURE__*/_jsx(Building,{size:24,className:\"mr-2\"}),\" Setup Ministry / Agency Account\"]}),/*#__PURE__*/_jsxs(GlassCard,{className:\"p-6\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Ministry/Agency Name\",value:ministryName,onChange:e=>setMinistryName(e.target.value),className:\"w-full p-3 border border-gray-600 rounded-lg mb-4\",style:{backgroundColor:COLORS.secondaryAccent,color:COLORS.typography}}),/*#__PURE__*/_jsx(\"button\",{onClick:handleSetupMinistryAccount,className:\"w-full font-bold py-2 px-6 rounded-lg shadow-md transition-all duration-200\",style:{backgroundColor:COLORS.primaryAccent,color:COLORS.background,boxShadow:`0 0 10px ${COLORS.buttonsGlow}`},children:\"Setup Gov Account (Simulated)\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-sm text-gray-400 italic mt-2\",children:\"Actual account creation is handled via the \\\"Account Requests Queue\\\".\"})]})]}),/*#__PURE__*/_jsxs(\"section\",{className:\"mb-8\",children:[/*#__PURE__*/_jsxs(\"h4\",{className:\"text-2xl font-semibold mb-4 flex items-center\",style:{color:COLORS.primaryAccent},children:[/*#__PURE__*/_jsx(FileBadge,{size:24,className:\"mr-2\"}),\" Link Business to User\"]}),/*#__PURE__*/_jsxs(GlassCard,{className:\"p-6\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"User Discord ID or Bank ID\",value:businessLinkUserId,onChange:e=>setBusinessLinkUserId(e.target.value),className:\"w-full p-3 border border-gray-600 rounded-lg mb-4\",style:{backgroundColor:COLORS.secondaryAccent,color:COLORS.typography}}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Business Reg. ID\",value:businessRegId,onChange:e=>setBusinessRegId(e.target.value),className:\"w-full p-3 border border-gray-600 rounded-lg mb-4\",style:{backgroundColor:COLORS.secondaryAccent,color:COLORS.typography}}),/*#__PURE__*/_jsx(\"button\",{onClick:handleLinkBusiness,className:\"w-full font-bold py-2 px-6 rounded-lg shadow-md transition-all duration-200\",style:{backgroundColor:COLORS.primaryAccent,color:COLORS.background,boxShadow:`0 0 10px ${COLORS.buttonsGlow}`},children:\"Link Business\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-sm text-gray-400 italic mt-2\",children:\"Links a business registration ID to a user, marking them as a business owner.\"})]})]})]});};export default AdminGovernmentTools;","map":{"version":3,"names":["React","useState","GlassCard","COLORS","Landmark","Building","FileBadge","doc","updateDoc","getDoc","jsx","_jsx","jsxs","_jsxs","AdminGovernmentTools","_ref","db","appId","findUserByDiscordOrBankId","govAccountId","setGovAccountId","govAmount","setGovAmount","ministryName","setMinistryName","businessLinkUserId","setBusinessLinkUserId","businessRegId","setBusinessRegId","handleGovTransaction","type","amount","parseFloat","isNaN","alert","foundUser","userDocRef","id","currentGovBalance","data","accounts","Government","currentBalance","balance","newGovBalance","newOverallBalance","description","transactions","date","Date","toLocaleDateString","status","toFixed","error","console","message","handleSetupMinistryAccount","handleLinkBusiness","businessRegistrationId","isBusinessOwner","className","children","style","color","typography","primaryAccent","size","placeholder","value","onChange","e","target","backgroundColor","secondaryAccent","onClick","background","boxShadow","buttonsGlow"],"sources":["C:/Users/trent/OneDrive/Desktop/SberBank Website/src/components/admin/AdminGovernmentTools.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport GlassCard from '../common/GlassCard';\r\nimport { COLORS } from '../../constants';\r\nimport { Landmark, Building, FileBadge } from 'lucide-react';\r\nimport { doc, updateDoc, getDoc } from 'firebase/firestore';\r\n\r\nconst AdminGovernmentTools = ({ db, appId, findUserByDiscordOrBankId }) => {\r\n    const [govAccountId, setGovAccountId] = useState('');\r\n    const [govAmount, setGovAmount] = useState('');\r\n    const [ministryName, setMinistryName] = useState('');\r\n    const [businessLinkUserId, setBusinessLinkUserId] = useState('');\r\n    const [businessRegId, setBusinessRegId] = useState('');\r\n\r\n    const handleGovTransaction = async (type) => {\r\n        const amount = parseFloat(govAmount);\r\n        if (isNaN(amount) || amount <= 0 || !govAccountId) {\r\n            alert('Please enter a valid amount and Government Account ID.');\r\n            return;\r\n        }\r\n        try {\r\n            const foundUser = await findUserByDiscordOrBankId(govAccountId);\r\n            if (!foundUser) {\r\n                alert('Government Account not found.');\r\n                return;\r\n            }\r\n            const userDocRef = doc(db, `artifacts/${appId}/users`, foundUser.id);\r\n            const currentGovBalance = foundUser.data.accounts.Government || 0;\r\n            const currentBalance = foundUser.data.balance || 0;\r\n\r\n            let newGovBalance = currentGovBalance;\r\n            let newOverallBalance = currentBalance;\r\n            let description = '';\r\n\r\n            if (type === 'deposit') {\r\n                newGovBalance += amount;\r\n                newOverallBalance += amount;\r\n                description = `Government Deposit by Admin`;\r\n            } else {\r\n                if (currentGovBalance < amount) {\r\n                    alert('Insufficient funds in Government Account.');\r\n                    return;\r\n                }\r\n                newGovBalance -= amount;\r\n                newOverallBalance -= amount;\r\n                description = `Government Withdrawal by Admin`;\r\n            }\r\n\r\n            await updateDoc(userDocRef, {\r\n                'accounts.Government': newGovBalance,\r\n                balance: newOverallBalance,\r\n                transactions: [...(foundUser.data.transactions || []), {\r\n                    date: new Date().toLocaleDateString('en-US'),\r\n                    description: description,\r\n                    amount: type === 'deposit' ? amount : -amount,\r\n                    status: 'Complete'\r\n                }]\r\n            });\r\n            alert(`${type === 'deposit' ? 'Deposited' : 'Withdrew'} ${amount.toFixed(2)} RUB for Government Account ${govAccountId}.`);\r\n            setGovAccountId('');\r\n            setGovAmount('');\r\n        } catch (error) {\r\n            console.error(`Error during Government ${type}:`, error);\r\n            alert(`Failed to perform Government ${type}: ${error.message}`);\r\n        }\r\n    };\r\n\r\n    const handleSetupMinistryAccount = () => {\r\n        if (!ministryName) {\r\n            alert('Please enter a Ministry/Agency Name.');\r\n            return;\r\n        }\r\n        alert(`Simulating setup for Ministry/Agency Account: ${ministryName}. (Actual setup handled via Account Requests Queue).`);\r\n        setMinistryName('');\r\n    };\r\n\r\n    const handleLinkBusiness = async () => {\r\n        if (!businessLinkUserId || !businessRegId) {\r\n            alert('Please enter both User ID and Business Registration ID.');\r\n            return;\r\n        }\r\n        try {\r\n            const foundUser = await findUserByDiscordOrBankId(businessLinkUserId);\r\n            if (foundUser) {\r\n                const userDocRef = doc(db, `artifacts/${appId}/users`, foundUser.id);\r\n                // Ensure the user has a business account or it's implicitly created/linked\r\n                // For simplicity, we'll just link the ID and set isBusinessOwner\r\n                await updateDoc(userDocRef, {\r\n                    businessRegistrationId: businessRegId,\r\n                    isBusinessOwner: true,\r\n                    // Optionally, you could also update a specific business account balance here\r\n                    // 'accounts.Business': (foundUser.data.accounts?.Business || 0) // No change to balance on link\r\n                });\r\n                alert(`Business Registration ID ${businessRegId} linked to user ${businessLinkUserId}.`);\r\n                setBusinessLinkUserId('');\r\n                setBusinessRegId('');\r\n            } else {\r\n                alert('User not found.');\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Error linking business:\", error);\r\n            alert(`Failed to link business: ${error.message}`);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"p-8 w-full\">\r\n            <h3 className=\"text-3xl font-bold mb-6\" style={{ color: COLORS.typography }}>Government Tools</h3>\r\n\r\n            {/* Deposit / Withdraw (Gov) */}\r\n            <section className=\"mb-8\">\r\n                <h4 className=\"text-2xl font-semibold mb-4 flex items-center\" style={{ color: COLORS.primaryAccent }}><Landmark size={24} className=\"mr-2\" /> Deposit / Withdraw (Gov)</h4>\r\n                <GlassCard className=\"p-6\">\r\n                    <input type=\"text\" placeholder=\"Government Account ID\" value={govAccountId} onChange={(e) => setGovAccountId(e.target.value)} className=\"w-full p-3 border border-gray-600 rounded-lg mb-4\" style={{ backgroundColor: COLORS.secondaryAccent, color: COLORS.typography }} />\r\n                    <input type=\"number\" placeholder=\"Amount\" value={govAmount} onChange={(e) => setGovAmount(e.target.value)} className=\"w-full p-3 border border-gray-600 rounded-lg mb-4\" style={{ backgroundColor: COLORS.secondaryAccent, color: COLORS.typography }} />\r\n                    <div className=\"flex space-x-4\">\r\n                        <button onClick={() => handleGovTransaction('deposit')} className=\"w-1/2 font-bold py-2 px-6 rounded-lg shadow-md transition-all duration-200\" style={{ backgroundColor: COLORS.primaryAccent, color: COLORS.background, boxShadow: `0 0 10px ${COLORS.buttonsGlow}` }}>Deposit</button>\r\n                        <button onClick={() => handleGovTransaction('withdraw')} className=\"w-1/2 font-bold py-2 px-6 rounded-lg shadow-md transition-all duration-200 bg-orange-600 hover:bg-orange-500\" style={{ boxShadow: `0 0 10px rgba(255,165,0,0.5)` }}>Withdraw</button>\r\n                    </div>\r\n                </GlassCard>\r\n            </section>\r\n\r\n            {/* Setup Ministry / Agency Account */}\r\n            <section className=\"mb-8\">\r\n                <h4 className=\"text-2xl font-semibold mb-4 flex items-center\" style={{ color: COLORS.primaryAccent }}><Building size={24} className=\"mr-2\" /> Setup Ministry / Agency Account</h4>\r\n                <GlassCard className=\"p-6\">\r\n                    <input type=\"text\" placeholder=\"Ministry/Agency Name\" value={ministryName} onChange={(e) => setMinistryName(e.target.value)} className=\"w-full p-3 border border-gray-600 rounded-lg mb-4\" style={{ backgroundColor: COLORS.secondaryAccent, color: COLORS.typography }} />\r\n                    <button onClick={handleSetupMinistryAccount} className=\"w-full font-bold py-2 px-6 rounded-lg shadow-md transition-all duration-200\" style={{ backgroundColor: COLORS.primaryAccent, color: COLORS.background, boxShadow: `0 0 10px ${COLORS.buttonsGlow}` }}>Setup Gov Account (Simulated)</button>\r\n                    <p className=\"text-sm text-gray-400 italic mt-2\">Actual account creation is handled via the \"Account Requests Queue\".</p>\r\n                </GlassCard>\r\n            </section>\r\n\r\n            {/* Link Business to User */}\r\n            <section className=\"mb-8\">\r\n                <h4 className=\"text-2xl font-semibold mb-4 flex items-center\" style={{ color: COLORS.primaryAccent }}><FileBadge size={24} className=\"mr-2\" /> Link Business to User</h4>\r\n                <GlassCard className=\"p-6\">\r\n                    <input type=\"text\" placeholder=\"User Discord ID or Bank ID\" value={businessLinkUserId} onChange={(e) => setBusinessLinkUserId(e.target.value)} className=\"w-full p-3 border border-gray-600 rounded-lg mb-4\" style={{ backgroundColor: COLORS.secondaryAccent, color: COLORS.typography }} />\r\n                    <input type=\"text\" placeholder=\"Business Reg. ID\" value={businessRegId} onChange={(e) => setBusinessRegId(e.target.value)} className=\"w-full p-3 border border-gray-600 rounded-lg mb-4\" style={{ backgroundColor: COLORS.secondaryAccent, color: COLORS.typography }} />\r\n                    <button onClick={handleLinkBusiness} className=\"w-full font-bold py-2 px-6 rounded-lg shadow-md transition-all duration-200\" style={{ backgroundColor: COLORS.primaryAccent, color: COLORS.background, boxShadow: `0 0 10px ${COLORS.buttonsGlow}` }}>Link Business</button>\r\n                    <p className=\"text-sm text-gray-400 italic mt-2\">Links a business registration ID to a user, marking them as a business owner.</p>\r\n                </GlassCard>\r\n            </section>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AdminGovernmentTools;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}