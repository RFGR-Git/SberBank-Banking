{"ast":null,"code":"import React,{useState}from'react';import{createUserWithEmailAndPassword,signInWithEmailAndPassword,signOut}from'firebase/auth';import{doc,setDoc,getDoc}from'firebase/firestore';import GlassCard from'./common/GlassCard';import{COLORS,REGION_CODES}from'../constants';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const HomePage=_ref=>{let{setIsLoggedIn,setIsAdminLoggedIn,setUserProfile,setCurrentView,auth,db,appId}=_ref;const[rpName,setRpName]=useState('');const[dob,setDob]=useState('');const[placeOfBirth,setPlaceOfBirth]=useState('');const[region,setRegion]=useState('');const[gender,setGender]=useState('');const[discordId,setDiscordId]=useState('');const[password,setPassword]=useState('');const[confirmPassword,setConfirmPassword]=useState('');const[occupation,setOccupation]=useState('');const[citizenshipStatus,setCitizenshipStatus]=useState('');const[rpIdNumber,setRpIdNumber]=useState('');const[isRegistering,setIsRegistering]=useState(true);const[isAdminLogin,setIsAdminLogin]=useState(false);// Function to generate a KYC code based on selected region and a unique ID\nconst generateKycCode=selectedRegion=>{const uniqueId=Math.floor(1000+Math.random()*9000);// 4-digit ID\nconst regionCode=REGION_CODES[selectedRegion]||'UNK';// Use region code or 'UNK' for unknown\nconst year=new Date().getFullYear();return`KYC-${uniqueId}-${regionCode}-${year}`;};// Function to generate a unique 8-digit bank ID\nconst generateBankId=()=>{return Math.floor(10000000+Math.random()*90000000).toString();};// Handle user registration\nconst handleUserRegister=async e=>{e.preventDefault();// Prevent default form submission\nif(password!==confirmPassword){alert('Passwords do not match.');return;}if(password.length<6){// Basic password complexity check\nalert('Password must be at least 6 characters long.');return;}try{// Firebase Auth requires an email format. Convert Discord ID to an email-like string.\nconst email=discordId.replace(/[^a-zA-Z0-9]/g,'')+\"@sberbank.com\";const userCredential=await createUserWithEmailAndPassword(auth,email,password);const user=userCredential.user;const newKycCode=generateKycCode(region);const newBankId=generateBankId();// Generate new bank ID\nconst currentDate=new Date().toLocaleDateString('en-US');// Get current date in consistent format\n// Create new user profile object with initial data\nconst newUserProfile={uid:user.uid,name:rpName,discordId,bankId:newBankId,// Store the generated bank ID\ndob,placeOfBirth,region,gender,occupation,citizenshipStatus,rpIdNumber,kycCode:newKycCode,dateJoined:currentDate,balance:0.00,// Initial balance\ncreditScore:360,// All new users start at 360\nhasCreditCard:false,debitCard:null,accounts:{// Initialize all account types to 0\nPersonal:0.00,Savings:0.00,Business:0.00,Government:0.00,Investment:0.00,CreditCard:0.00,Shadow:0.00},transactions:[],// Empty array for transactions\nbudget:{income:0,expenses:[]},// Initial budget\ninvestments:[],// Empty array for investments\nisVIP:false,// Not VIP by default\nisAdmin:false,// Not admin by default\nloanHistory:[],// New: Track loan history for credit checks\nmissedPayments:0,// New: Track missed payments for credit score\nlastPaymentDate:new Date().toISOString()// New: For tracking payment frequency\n};// Save the new user profile to Firestore\nawait setDoc(doc(db,`artifacts/${appId}/users`,user.uid),newUserProfile);// Update parent component state to reflect login\nsetUserProfile(newUserProfile);setIsLoggedIn(true);setIsAdminLoggedIn(false);setCurrentView('dashboard');// Navigate to dashboard\nalert(`Registration successful! Your Bank ID is: ${newBankId}. You can now open accounts from your dashboard.`);}catch(error){console.error(\"Error during registration:\",error);alert(`Registration failed: ${error.message}`);}};// Handle user login\nconst handleUserLogin=async e=>{e.preventDefault();// Prevent default form submission\nif(!discordId||!password){alert('Please enter Discord ID and Password.');return;}try{// Convert Discord ID back to the email-like format for Firebase Auth\nconst email=discordId.replace(/[^a-zA-Z0-9]/g,'')+\"@sberbank.com\";const userCredential=await signInWithEmailAndPassword(auth,email,password);const user=userCredential.user;// Fetch user profile from Firestore\nconst userDocRef=doc(db,`artifacts/${appId}/users`,user.uid);const userDocSnap=await getDoc(userDocRef);if(userDocSnap.exists()){const userData=userDocSnap.data();setUserProfile(userData);setIsLoggedIn(true);setIsAdminLoggedIn(userData.isAdmin||false);// Set admin status from Firestore data\nsetCurrentView(userData.isAdmin?'admin-dashboard':'dashboard');// Navigate based on admin status\n}else{alert('User profile not found. Please register.');await signOut(auth);// Sign out the user if their profile is missing\n}}catch(error){console.error(\"Error during login:\",error);alert(`Login failed: ${error.message}`);}};// Handle admin login\nconst handleAdminLogin=async e=>{e.preventDefault();// Prevent default form submission\nconst adminEmail=\"admin@sberbank.com\";// Fixed admin email for Firebase Auth\nconst adminPass=\"adminpass\";// Fixed admin password\n// Check if provided credentials match the hardcoded admin credentials\nif(discordId!=='Admin#0000'||password!==adminPass){alert('Invalid admin credentials.');return;}try{let adminUser=null;try{// Attempt to sign in the admin user\nconst userCredential=await signInWithEmailAndPassword(auth,adminEmail,adminPass);adminUser=userCredential.user;}catch(loginError){// If admin user not found (first time setup), create it\nif(loginError.code==='auth/user-not-found'||loginError.code==='auth/wrong-password'){const userCredential=await createUserWithEmailAndPassword(auth,adminEmail,adminPass);adminUser=userCredential.user;// Set admin profile in Firestore upon creation\nawait setDoc(doc(db,`artifacts/${appId}/users`,adminUser.uid),{uid:adminUser.uid,name:'Sberbank Admin',discordId:'Admin#0000',bankId:'00000000',// Fixed bank ID for admin\nkycCode:'KYC-ADMIN-SBR-2025',dateJoined:new Date().toLocaleDateString('en-US'),region:'Headquarters',isVIP:true,// Admins are VIP\nisAdmin:true,// Mark as admin\nbalance:0.00,creditScore:850,hasCreditCard:true,debitCard:null,accounts:{Personal:0.00,Savings:0.00,Business:0.00,Government:0.00,Investment:0.00,CreditCard:0.00,Shadow:0.00},transactions:[],budget:{income:0,expenses:[]},investments:[],loanHistory:[],missedPayments:0,lastPaymentDate:new Date().toISOString()});alert('Admin account created and logged in.');}else{throw loginError;// Re-throw other Firebase errors\n}}// After successful sign-in (or creation), verify admin status from Firestore\nif(adminUser){const adminDocRef=doc(db,`artifacts/${appId}/users`,adminUser.uid);const adminDocSnap=await getDoc(adminDocRef);if(adminDocSnap.exists()&&adminDocSnap.data().isAdmin){setUserProfile(adminDocSnap.data());setIsLoggedIn(true);setIsAdminLoggedIn(true);setCurrentView('admin-dashboard');// Navigate to admin dashboard\n}else{alert('Admin profile not found or not marked as admin. Please ensure correct credentials and admin role.');await signOut(auth);// Sign out if not a valid admin profile\n}}}catch(error){console.error(\"Error during admin login:\",error);alert(`Admin login failed: ${error.message}`);}};return/*#__PURE__*/_jsx(\"div\",{className:\"container mx-auto px-4 py-16 flex items-center justify-center min-h-[calc(100vh-160px)]\",children:/*#__PURE__*/_jsxs(GlassCard,{className:\"p-10 w-full max-w-md text-center\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-4xl font-extrabold mb-8 drop-shadow-sm\",style:{color:COLORS.primaryAccent},children:\"Welcome to Sberbank\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-center mb-6 space-x-4\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>{setIsRegistering(true);setIsAdminLogin(false);},className:`px-6 py-2 rounded-full font-bold transition-all duration-300 ${isRegistering&&!isAdminLogin?'bg-green-700 text-white shadow-lg':'bg-transparent text-gray-400 border border-gray-600'}`,style:isRegistering&&!isAdminLogin?{boxShadow:`0 0 10px ${COLORS.buttonsGlow}`}:{},children:\"Register\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>{setIsRegistering(false);setIsAdminLogin(false);},className:`px-6 py-2 rounded-full font-bold transition-all duration-300 ${!isRegistering&&!isAdminLogin?'bg-green-700 text-white shadow-lg':'bg-transparent text-gray-400 border border-gray-600'}`,style:!isRegistering&&!isAdminLogin?{boxShadow:`0 0 10px ${COLORS.buttonsGlow}`}:{},children:\"Login\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>{setIsAdminLogin(true);setIsRegistering(false);},className:`px-6 py-2 rounded-full font-bold transition-all duration-300 ${isAdminLogin?'bg-red-700 text-white shadow-lg':'bg-transparent text-gray-400 border border-gray-600'}`,style:isAdminLogin?{boxShadow:`0 0 10px rgba(255, 0, 0, 0.5)`}:{},children:\"Admin Login\"})]}),isAdminLogin?/*#__PURE__*/// Admin Login Form\n_jsxs(\"form\",{onSubmit:handleAdminLogin,className:\"space-y-6\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"text-lg mb-2\",style:{color:COLORS.typography},children:\"Admin Login\"}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"adminDiscordId\",className:\"block text-lg font-medium mb-2\",style:{color:COLORS.typography},children:\"Admin Discord ID\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"adminDiscordId\",value:discordId,onChange:e=>setDiscordId(e.target.value),placeholder:\"Admin#0000\",className:\"w-full p-3 border border-gray-600 rounded-lg focus:ring-green-500 focus:border-green-500 transition-all duration-200\",style:{backgroundColor:COLORS.secondaryAccent,color:COLORS.typography},required:true})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"adminPassword\",className:\"block text-lg font-medium mb-2\",style:{color:COLORS.typography},children:\"Password\"}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",id:\"adminPassword\",value:password,onChange:e=>setPassword(e.target.value),placeholder:\"********\",className:\"w-full p-3 border border-gray-600 rounded-lg focus:ring-green-500 focus:border-green-500 transition-all duration-200\",style:{backgroundColor:COLORS.secondaryAccent,color:COLORS.typography},required:true})]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"w-full font-bold py-3 px-6 rounded-lg shadow-lg transform hover:scale-105 transition-all duration-300\",style:{backgroundColor:COLORS.primaryAccent,color:COLORS.background,boxShadow:`0 0 15px ${COLORS.buttonsGlow}`},children:\"Admin Login\"})]}):isRegistering?/*#__PURE__*/// User Registration Form\n_jsxs(\"form\",{onSubmit:handleUserRegister,className:\"space-y-6\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"text-lg mb-2\",style:{color:COLORS.typography},children:\"Create your new Sberbank website account.\"}),/*#__PURE__*/_jsx(\"h3\",{className:\"text-xl font-semibold mt-6\",style:{color:COLORS.primaryAccent},children:\"Basic Roleplay Details\"}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"rpName\",className:\"block text-lg font-medium mb-2\",style:{color:COLORS.typography},children:\"Roleplay Name\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"rpName\",value:rpName,onChange:e=>setRpName(e.target.value),placeholder:\"Comrade Ivanov\",className:\"w-full p-3 border border-gray-600 rounded-lg\",style:{backgroundColor:COLORS.secondaryAccent,color:COLORS.typography},required:true})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"dob\",className:\"block text-lg font-medium mb-2\",style:{color:COLORS.typography},children:\"Date of Birth\"}),/*#__PURE__*/_jsx(\"input\",{type:\"date\",id:\"dob\",value:dob,onChange:e=>setDob(e.target.value),className:\"w-full p-3 border border-gray-600 rounded-lg\",style:{backgroundColor:COLORS.secondaryAccent,color:COLORS.typography},required:true})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"placeOfBirth\",className:\"block text-lg font-medium mb-2\",style:{color:COLORS.typography},children:\"Place of Birth\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"placeOfBirth\",value:placeOfBirth,onChange:e=>setPlaceOfBirth(e.target.value),placeholder:\"Volgograd\",className:\"w-full p-3 border border-gray-600 rounded-lg\",style:{backgroundColor:COLORS.secondaryAccent,color:COLORS.typography},required:true})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"region\",className:\"block text-lg font-medium mb-2\",style:{color:COLORS.typography},children:\"Current Region of Residence\"}),/*#__PURE__*/_jsxs(\"select\",{id:\"region\",value:region,onChange:e=>setRegion(e.target.value),className:\"w-full p-3 border border-gray-600 rounded-lg\",style:{backgroundColor:COLORS.secondaryAccent,color:COLORS.typography},required:true,children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Select Region\"}),Object.keys(REGION_CODES).map(regionName=>/*#__PURE__*/_jsx(\"option\",{value:regionName,children:regionName},regionName))]})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"gender\",className:\"block text-lg font-medium mb-2\",style:{color:COLORS.typography},children:\"Gender (Optional)\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"gender\",value:gender,onChange:e=>setGender(e.target.value),placeholder:\"Male/Female/Other\",className:\"w-full p-3 border border-gray-600 rounded-lg\",style:{backgroundColor:COLORS.secondaryAccent,color:COLORS.typography}})]}),/*#__PURE__*/_jsx(\"h3\",{className:\"text-xl font-semibold mt-6\",style:{color:COLORS.primaryAccent},children:\"Account Credentials\"}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"discordId\",className:\"block text-lg font-medium mb-2\",style:{color:COLORS.typography},children:\"Discord User ID (e.g., YourDiscord#1234)\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"discordId\",value:discordId,onChange:e=>setDiscordId(e.target.value),placeholder:\"YourDiscord#1234\",className:\"w-full p-3 border border-gray-600 rounded-lg\",style:{backgroundColor:COLORS.secondaryAccent,color:COLORS.typography},required:true})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"password\",className:\"block text-lg font-medium mb-2\",style:{color:COLORS.typography},children:\"Create Password\"}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",id:\"password\",value:password,onChange:e=>setPassword(e.target.value),placeholder:\"********\",className:\"w-full p-3 border border-gray-600 rounded-lg\",style:{backgroundColor:COLORS.secondaryAccent,color:COLORS.typography},required:true})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"confirmPassword\",className:\"block text-lg font-medium mb-2\",style:{color:COLORS.typography},children:\"Confirm Password\"}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",id:\"confirmPassword\",value:confirmPassword,onChange:e=>setConfirmPassword(e.target.value),placeholder:\"********\",className:\"w-full p-3 border border-gray-600 rounded-lg\",style:{backgroundColor:COLORS.secondaryAccent,color:COLORS.typography},required:true})]}),/*#__PURE__*/_jsx(\"h3\",{className:\"text-xl font-semibold mt-6\",style:{color:COLORS.primaryAccent},children:\"Additional RP Role Information (Optional)\"}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"occupation\",className:\"block text-lg font-medium mb-2\",style:{color:COLORS.typography},children:\"Occupation or Role in RP\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"occupation\",value:occupation,onChange:e=>setOccupation(e.target.value),placeholder:\"Citizen, Business Owner, etc.\",className:\"w-full p-3 border border-gray-600 rounded-lg\",style:{backgroundColor:COLORS.secondaryAccent,color:COLORS.typography}})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"citizenshipStatus\",className:\"block text-lg font-medium mb-2\",style:{color:COLORS.typography},children:\"Citizenship Status or Immigration Status\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"citizenshipStatus\",value:citizenshipStatus,onChange:e=>setCitizenshipStatus(e.target.value),placeholder:\"Citizen, Immigrant\",className:\"w-full p-3 border border-gray-600 rounded-lg\",style:{backgroundColor:COLORS.secondaryAccent,color:COLORS.typography}})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"rpIdNumber\",className:\"block text-lg font-medium mb-2\",style:{color:COLORS.typography},children:\"RP Identification Number (if applicable)\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"rpIdNumber\",value:rpIdNumber,onChange:e=>setRpIdNumber(e.target.value),placeholder:\"RP-XXXX-YYYY\",className:\"w-full p-3 border border-gray-600 rounded-lg\",style:{backgroundColor:COLORS.secondaryAccent,color:COLORS.typography}})]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"w-full font-bold py-3 px-6 rounded-lg shadow-lg transform hover:scale-105 transition-all duration-300\",style:{backgroundColor:COLORS.primaryAccent,color:COLORS.background,boxShadow:`0 0 15px ${COLORS.buttonsGlow}`},children:\"Register Account\"})]}):/*#__PURE__*/// User Login Form\n_jsxs(\"form\",{onSubmit:handleUserLogin,className:\"space-y-6\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"text-lg mb-2\",style:{color:COLORS.typography},children:\"Log in to your existing account.\"}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"loginDiscordId\",className:\"block text-lg font-medium mb-2\",style:{color:COLORS.typography},children:\"Discord User ID\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"loginDiscordId\",value:discordId,onChange:e=>setDiscordId(e.target.value),placeholder:\"YourDiscord#1234\",className:\"w-full p-3 border border-gray-600 rounded-lg focus:ring-green-500 focus:border-green-500 transition-all duration-200\",style:{backgroundColor:COLORS.secondaryAccent,color:COLORS.typography},required:true})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"loginPassword\",className:\"block text-lg font-medium mb-2\",style:{color:COLORS.typography},children:\"Password\"}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",id:\"loginPassword\",value:password,onChange:e=>setPassword(e.target.value),placeholder:\"********\",className:\"w-full p-3 border border-gray-600 rounded-lg focus:ring-green-500 focus:border-green-500 transition-all duration-200\",style:{backgroundColor:COLORS.secondaryAccent,color:COLORS.typography},required:true})]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"w-full font-bold py-3 px-6 rounded-lg shadow-lg transform hover:scale-105 transition-all duration-300\",style:{backgroundColor:COLORS.primaryAccent,color:COLORS.background,boxShadow:`0 0 15px ${COLORS.buttonsGlow}`},children:\"Login\"})]})]})});};export default HomePage;","map":{"version":3,"names":["React","useState","createUserWithEmailAndPassword","signInWithEmailAndPassword","signOut","doc","setDoc","getDoc","GlassCard","COLORS","REGION_CODES","jsx","_jsx","jsxs","_jsxs","HomePage","_ref","setIsLoggedIn","setIsAdminLoggedIn","setUserProfile","setCurrentView","auth","db","appId","rpName","setRpName","dob","setDob","placeOfBirth","setPlaceOfBirth","region","setRegion","gender","setGender","discordId","setDiscordId","password","setPassword","confirmPassword","setConfirmPassword","occupation","setOccupation","citizenshipStatus","setCitizenshipStatus","rpIdNumber","setRpIdNumber","isRegistering","setIsRegistering","isAdminLogin","setIsAdminLogin","generateKycCode","selectedRegion","uniqueId","Math","floor","random","regionCode","year","Date","getFullYear","generateBankId","toString","handleUserRegister","e","preventDefault","alert","length","email","replace","userCredential","user","newKycCode","newBankId","currentDate","toLocaleDateString","newUserProfile","uid","name","bankId","kycCode","dateJoined","balance","creditScore","hasCreditCard","debitCard","accounts","Personal","Savings","Business","Government","Investment","CreditCard","Shadow","transactions","budget","income","expenses","investments","isVIP","isAdmin","loanHistory","missedPayments","lastPaymentDate","toISOString","error","console","message","handleUserLogin","userDocRef","userDocSnap","exists","userData","data","handleAdminLogin","adminEmail","adminPass","adminUser","loginError","code","adminDocRef","adminDocSnap","className","children","style","color","primaryAccent","onClick","boxShadow","buttonsGlow","onSubmit","typography","htmlFor","type","id","value","onChange","target","placeholder","backgroundColor","secondaryAccent","required","background","Object","keys","map","regionName"],"sources":["C:/Users/trent/OneDrive/Desktop/SberBank Website/src/components/HomePage.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { createUserWithEmailAndPassword, signInWithEmailAndPassword, signOut } from 'firebase/auth';\r\nimport { doc, setDoc, getDoc } from 'firebase/firestore';\r\nimport GlassCard from './common/GlassCard';\r\nimport { COLORS, REGION_CODES } from '../constants';\r\n\r\nconst HomePage = ({ setIsLoggedIn, setIsAdminLoggedIn, setUserProfile, setCurrentView, auth, db, appId }) => {\r\n    const [rpName, setRpName] = useState('');\r\n    const [dob, setDob] = useState('');\r\n    const [placeOfBirth, setPlaceOfBirth] = useState('');\r\n    const [region, setRegion] = useState('');\r\n    const [gender, setGender] = useState('');\r\n    const [discordId, setDiscordId] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [confirmPassword, setConfirmPassword] = useState('');\r\n    const [occupation, setOccupation] = useState('');\r\n    const [citizenshipStatus, setCitizenshipStatus] = useState('');\r\n    const [rpIdNumber, setRpIdNumber] = useState('');\r\n\r\n    const [isRegistering, setIsRegistering] = useState(true);\r\n    const [isAdminLogin, setIsAdminLogin] = useState(false);\r\n\r\n    // Function to generate a KYC code based on selected region and a unique ID\r\n    const generateKycCode = (selectedRegion) => {\r\n        const uniqueId = Math.floor(1000 + Math.random() * 9000); // 4-digit ID\r\n        const regionCode = REGION_CODES[selectedRegion] || 'UNK'; // Use region code or 'UNK' for unknown\r\n        const year = new Date().getFullYear();\r\n        return `KYC-${uniqueId}-${regionCode}-${year}`;\r\n    };\r\n\r\n    // Function to generate a unique 8-digit bank ID\r\n    const generateBankId = () => {\r\n        return Math.floor(10000000 + Math.random() * 90000000).toString();\r\n    };\r\n\r\n    // Handle user registration\r\n    const handleUserRegister = async (e) => {\r\n        e.preventDefault(); // Prevent default form submission\r\n        if (password !== confirmPassword) {\r\n            alert('Passwords do not match.');\r\n            return;\r\n        }\r\n        if (password.length < 6) { // Basic password complexity check\r\n            alert('Password must be at least 6 characters long.');\r\n            return;\r\n        }\r\n\r\n        try {\r\n            // Firebase Auth requires an email format. Convert Discord ID to an email-like string.\r\n            const email = discordId.replace(/[^a-zA-Z0-9]/g, '') + \"@sberbank.com\";\r\n            const userCredential = await createUserWithEmailAndPassword(auth, email, password);\r\n            const user = userCredential.user;\r\n\r\n            const newKycCode = generateKycCode(region);\r\n            const newBankId = generateBankId(); // Generate new bank ID\r\n            const currentDate = new Date().toLocaleDateString('en-US'); // Get current date in consistent format\r\n\r\n            // Create new user profile object with initial data\r\n            const newUserProfile = {\r\n                uid: user.uid,\r\n                name: rpName,\r\n                discordId,\r\n                bankId: newBankId, // Store the generated bank ID\r\n                dob,\r\n                placeOfBirth,\r\n                region,\r\n                gender,\r\n                occupation,\r\n                citizenshipStatus,\r\n                rpIdNumber,\r\n                kycCode: newKycCode,\r\n                dateJoined: currentDate,\r\n                balance: 0.00, // Initial balance\r\n                creditScore: 360, // All new users start at 360\r\n                hasCreditCard: false,\r\n                debitCard: null,\r\n                accounts: { // Initialize all account types to 0\r\n                    Personal: 0.00,\r\n                    Savings: 0.00,\r\n                    Business: 0.00,\r\n                    Government: 0.00,\r\n                    Investment: 0.00,\r\n                    CreditCard: 0.00,\r\n                    Shadow: 0.00,\r\n                },\r\n                transactions: [], // Empty array for transactions\r\n                budget: { income: 0, expenses: [] }, // Initial budget\r\n                investments: [], // Empty array for investments\r\n                isVIP: false, // Not VIP by default\r\n                isAdmin: false, // Not admin by default\r\n                loanHistory: [], // New: Track loan history for credit checks\r\n                missedPayments: 0, // New: Track missed payments for credit score\r\n                lastPaymentDate: new Date().toISOString(), // New: For tracking payment frequency\r\n            };\r\n\r\n            // Save the new user profile to Firestore\r\n            await setDoc(doc(db, `artifacts/${appId}/users`, user.uid), newUserProfile);\r\n\r\n            // Update parent component state to reflect login\r\n            setUserProfile(newUserProfile);\r\n            setIsLoggedIn(true);\r\n            setIsAdminLoggedIn(false);\r\n            setCurrentView('dashboard'); // Navigate to dashboard\r\n            alert(`Registration successful! Your Bank ID is: ${newBankId}. You can now open accounts from your dashboard.`);\r\n        } catch (error) {\r\n            console.error(\"Error during registration:\", error);\r\n            alert(`Registration failed: ${error.message}`);\r\n        }\r\n    };\r\n\r\n    // Handle user login\r\n    const handleUserLogin = async (e) => {\r\n        e.preventDefault(); // Prevent default form submission\r\n        if (!discordId || !password) {\r\n            alert('Please enter Discord ID and Password.');\r\n            return;\r\n        }\r\n\r\n        try {\r\n            // Convert Discord ID back to the email-like format for Firebase Auth\r\n            const email = discordId.replace(/[^a-zA-Z0-9]/g, '') + \"@sberbank.com\";\r\n            const userCredential = await signInWithEmailAndPassword(auth, email, password);\r\n            const user = userCredential.user;\r\n\r\n            // Fetch user profile from Firestore\r\n            const userDocRef = doc(db, `artifacts/${appId}/users`, user.uid);\r\n            const userDocSnap = await getDoc(userDocRef);\r\n\r\n            if (userDocSnap.exists()) {\r\n                const userData = userDocSnap.data();\r\n                setUserProfile(userData);\r\n                setIsLoggedIn(true);\r\n                setIsAdminLoggedIn(userData.isAdmin || false); // Set admin status from Firestore data\r\n                setCurrentView(userData.isAdmin ? 'admin-dashboard' : 'dashboard'); // Navigate based on admin status\r\n            } else {\r\n                alert('User profile not found. Please register.');\r\n                await signOut(auth); // Sign out the user if their profile is missing\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Error during login:\", error);\r\n            alert(`Login failed: ${error.message}`);\r\n        }\r\n    };\r\n\r\n    // Handle admin login\r\n    const handleAdminLogin = async (e) => {\r\n        e.preventDefault(); // Prevent default form submission\r\n        const adminEmail = \"admin@sberbank.com\"; // Fixed admin email for Firebase Auth\r\n        const adminPass = \"adminpass\"; // Fixed admin password\r\n\r\n        // Check if provided credentials match the hardcoded admin credentials\r\n        if (discordId !== 'Admin#0000' || password !== adminPass) {\r\n            alert('Invalid admin credentials.');\r\n            return;\r\n        }\r\n\r\n        try {\r\n            let adminUser = null;\r\n            try {\r\n                // Attempt to sign in the admin user\r\n                const userCredential = await signInWithEmailAndPassword(auth, adminEmail, adminPass);\r\n                adminUser = userCredential.user;\r\n            } catch (loginError) {\r\n                // If admin user not found (first time setup), create it\r\n                if (loginError.code === 'auth/user-not-found' || loginError.code === 'auth/wrong-password') {\r\n                    const userCredential = await createUserWithEmailAndPassword(auth, adminEmail, adminPass);\r\n                    adminUser = userCredential.user;\r\n                    // Set admin profile in Firestore upon creation\r\n                    await setDoc(doc(db, `artifacts/${appId}/users`, adminUser.uid), {\r\n                        uid: adminUser.uid,\r\n                        name: 'Sberbank Admin',\r\n                        discordId: 'Admin#0000',\r\n                        bankId: '00000000', // Fixed bank ID for admin\r\n                        kycCode: 'KYC-ADMIN-SBR-2025',\r\n                        dateJoined: new Date().toLocaleDateString('en-US'),\r\n                        region: 'Headquarters',\r\n                        isVIP: true, // Admins are VIP\r\n                        isAdmin: true, // Mark as admin\r\n                        balance: 0.00,\r\n                        creditScore: 850,\r\n                        hasCreditCard: true,\r\n                        debitCard: null,\r\n                        accounts: {\r\n                            Personal: 0.00, Savings: 0.00, Business: 0.00, Government: 0.00, Investment: 0.00, CreditCard: 0.00, Shadow: 0.00\r\n                        },\r\n                        transactions: [], budget: { income: 0, expenses: [] }, investments: [],\r\n                        loanHistory: [],\r\n                        missedPayments: 0,\r\n                        lastPaymentDate: new Date().toISOString(),\r\n                    });\r\n                    alert('Admin account created and logged in.');\r\n                } else {\r\n                    throw loginError; // Re-throw other Firebase errors\r\n                }\r\n            }\r\n\r\n            // After successful sign-in (or creation), verify admin status from Firestore\r\n            if (adminUser) {\r\n                const adminDocRef = doc(db, `artifacts/${appId}/users`, adminUser.uid);\r\n                const adminDocSnap = await getDoc(adminDocRef);\r\n                if (adminDocSnap.exists() && adminDocSnap.data().isAdmin) {\r\n                    setUserProfile(adminDocSnap.data());\r\n                    setIsLoggedIn(true);\r\n                    setIsAdminLoggedIn(true);\r\n                    setCurrentView('admin-dashboard'); // Navigate to admin dashboard\r\n                } else {\r\n                    alert('Admin profile not found or not marked as admin. Please ensure correct credentials and admin role.');\r\n                    await signOut(auth); // Sign out if not a valid admin profile\r\n                }\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Error during admin login:\", error);\r\n            alert(`Admin login failed: ${error.message}`);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"container mx-auto px-4 py-16 flex items-center justify-center min-h-[calc(100vh-160px)]\">\r\n            <GlassCard className=\"p-10 w-full max-w-md text-center\">\r\n                <h2 className=\"text-4xl font-extrabold mb-8 drop-shadow-sm\" style={{ color: COLORS.primaryAccent }}>Welcome to Sberbank</h2>\r\n\r\n                {/* Toggle buttons for Register, Login, Admin Login */}\r\n                <div className=\"flex justify-center mb-6 space-x-4\">\r\n                    <button\r\n                        onClick={() => { setIsRegistering(true); setIsAdminLogin(false); }}\r\n                        className={`px-6 py-2 rounded-full font-bold transition-all duration-300 ${isRegistering && !isAdminLogin ? 'bg-green-700 text-white shadow-lg' : 'bg-transparent text-gray-400 border border-gray-600'}`}\r\n                        style={isRegistering && !isAdminLogin ? { boxShadow: `0 0 10px ${COLORS.buttonsGlow}` } : {}}\r\n                    >\r\n                        Register\r\n                    </button>\r\n                    <button\r\n                        onClick={() => { setIsRegistering(false); setIsAdminLogin(false); }}\r\n                        className={`px-6 py-2 rounded-full font-bold transition-all duration-300 ${!isRegistering && !isAdminLogin ? 'bg-green-700 text-white shadow-lg' : 'bg-transparent text-gray-400 border border-gray-600'}`}\r\n                        style={!isRegistering && !isAdminLogin ? { boxShadow: `0 0 10px ${COLORS.buttonsGlow}` } : {}}\r\n                    >\r\n                        Login\r\n                    </button>\r\n                    <button\r\n                        onClick={() => { setIsAdminLogin(true); setIsRegistering(false); }}\r\n                        className={`px-6 py-2 rounded-full font-bold transition-all duration-300 ${isAdminLogin ? 'bg-red-700 text-white shadow-lg' : 'bg-transparent text-gray-400 border border-gray-600'}`}\r\n                        style={isAdminLogin ? { boxShadow: `0 0 10px rgba(255, 0, 0, 0.5)` } : {}}\r\n                    >\r\n                        Admin Login\r\n                    </button>\r\n                </div>\r\n\r\n                {/* Conditional rendering of login/registration forms */}\r\n                {isAdminLogin ? (\r\n                    // Admin Login Form\r\n                    <form onSubmit={handleAdminLogin} className=\"space-y-6\">\r\n                        <p className=\"text-lg mb-2\" style={{ color: COLORS.typography }}>Admin Login</p>\r\n                        <div>\r\n                            <label htmlFor=\"adminDiscordId\" className=\"block text-lg font-medium mb-2\" style={{ color: COLORS.typography }}>Admin Discord ID</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                id=\"adminDiscordId\"\r\n                                value={discordId}\r\n                                onChange={(e) => setDiscordId(e.target.value)}\r\n                                placeholder=\"Admin#0000\"\r\n                                className=\"w-full p-3 border border-gray-600 rounded-lg focus:ring-green-500 focus:border-green-500 transition-all duration-200\"\r\n                                style={{ backgroundColor: COLORS.secondaryAccent, color: COLORS.typography }}\r\n                                required\r\n                            />\r\n                        </div>\r\n                        <div>\r\n                            <label htmlFor=\"adminPassword\" className=\"block text-lg font-medium mb-2\" style={{ color: COLORS.typography }}>Password</label>\r\n                            <input\r\n                                type=\"password\"\r\n                                id=\"adminPassword\"\r\n                                value={password}\r\n                                onChange={(e) => setPassword(e.target.value)}\r\n                                placeholder=\"********\"\r\n                                className=\"w-full p-3 border border-gray-600 rounded-lg focus:ring-green-500 focus:border-green-500 transition-all duration-200\"\r\n                                style={{ backgroundColor: COLORS.secondaryAccent, color: COLORS.typography }}\r\n                                required\r\n                            />\r\n                        </div>\r\n                        <button\r\n                            type=\"submit\"\r\n                            className=\"w-full font-bold py-3 px-6 rounded-lg shadow-lg transform hover:scale-105 transition-all duration-300\"\r\n                            style={{ backgroundColor: COLORS.primaryAccent, color: COLORS.background, boxShadow: `0 0 15px ${COLORS.buttonsGlow}` }}\r\n                        >\r\n                            Admin Login\r\n                        </button>\r\n                    </form>\r\n                ) : isRegistering ? (\r\n                    // User Registration Form\r\n                    <form onSubmit={handleUserRegister} className=\"space-y-6\">\r\n                        <p className=\"text-lg mb-2\" style={{ color: COLORS.typography }}>Create your new Sberbank website account.</p>\r\n                        {/* Basic Roleplay Details */}\r\n                        <h3 className=\"text-xl font-semibold mt-6\" style={{ color: COLORS.primaryAccent }}>Basic Roleplay Details</h3>\r\n                        <div>\r\n                            <label htmlFor=\"rpName\" className=\"block text-lg font-medium mb-2\" style={{ color: COLORS.typography }}>Roleplay Name</label>\r\n                            <input type=\"text\" id=\"rpName\" value={rpName} onChange={(e) => setRpName(e.target.value)} placeholder=\"Comrade Ivanov\" className=\"w-full p-3 border border-gray-600 rounded-lg\" style={{ backgroundColor: COLORS.secondaryAccent, color: COLORS.typography }} required />\r\n                        </div>\r\n                        <div>\r\n                            <label htmlFor=\"dob\" className=\"block text-lg font-medium mb-2\" style={{ color: COLORS.typography }}>Date of Birth</label>\r\n                            <input type=\"date\" id=\"dob\" value={dob} onChange={(e) => setDob(e.target.value)} className=\"w-full p-3 border border-gray-600 rounded-lg\" style={{ backgroundColor: COLORS.secondaryAccent, color: COLORS.typography }} required />\r\n                        </div>\r\n                        <div>\r\n                            <label htmlFor=\"placeOfBirth\" className=\"block text-lg font-medium mb-2\" style={{ color: COLORS.typography }}>Place of Birth</label>\r\n                            <input type=\"text\" id=\"placeOfBirth\" value={placeOfBirth} onChange={(e) => setPlaceOfBirth(e.target.value)} placeholder=\"Volgograd\" className=\"w-full p-3 border border-gray-600 rounded-lg\" style={{ backgroundColor: COLORS.secondaryAccent, color: COLORS.typography }} required />\r\n                        </div>\r\n                        <div>\r\n                            <label htmlFor=\"region\" className=\"block text-lg font-medium mb-2\" style={{ color: COLORS.typography }}>Current Region of Residence</label>\r\n                            <select id=\"region\" value={region} onChange={(e) => setRegion(e.target.value)} className=\"w-full p-3 border border-gray-600 rounded-lg\" style={{ backgroundColor: COLORS.secondaryAccent, color: COLORS.typography }} required>\r\n                                <option value=\"\">Select Region</option>\r\n                                {Object.keys(REGION_CODES).map(regionName => (\r\n                                    <option key={regionName} value={regionName}>{regionName}</option>\r\n                                ))}\r\n                            </select>\r\n                        </div>\r\n                        <div>\r\n                            <label htmlFor=\"gender\" className=\"block text-lg font-medium mb-2\" style={{ color: COLORS.typography }}>Gender (Optional)</label>\r\n                            <input type=\"text\" id=\"gender\" value={gender} onChange={(e) => setGender(e.target.value)} placeholder=\"Male/Female/Other\" className=\"w-full p-3 border border-gray-600 rounded-lg\" style={{ backgroundColor: COLORS.secondaryAccent, color: COLORS.typography }} />\r\n                        </div>\r\n\r\n                        {/* Account Credentials */}\r\n                        <h3 className=\"text-xl font-semibold mt-6\" style={{ color: COLORS.primaryAccent }}>Account Credentials</h3>\r\n                        <div>\r\n                            <label htmlFor=\"discordId\" className=\"block text-lg font-medium mb-2\" style={{ color: COLORS.typography }}>Discord User ID (e.g., YourDiscord#1234)</label>\r\n                            <input type=\"text\" id=\"discordId\" value={discordId} onChange={(e) => setDiscordId(e.target.value)} placeholder=\"YourDiscord#1234\" className=\"w-full p-3 border border-gray-600 rounded-lg\" style={{ backgroundColor: COLORS.secondaryAccent, color: COLORS.typography }} required />\r\n                        </div>\r\n                        <div>\r\n                            <label htmlFor=\"password\" className=\"block text-lg font-medium mb-2\" style={{ color: COLORS.typography }}>Create Password</label>\r\n                            <input type=\"password\" id=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} placeholder=\"********\" className=\"w-full p-3 border border-gray-600 rounded-lg\" style={{ backgroundColor: COLORS.secondaryAccent, color: COLORS.typography }} required />\r\n                        </div>\r\n                        <div>\r\n                            <label htmlFor=\"confirmPassword\" className=\"block text-lg font-medium mb-2\" style={{ color: COLORS.typography }}>Confirm Password</label>\r\n                            <input type=\"password\" id=\"confirmPassword\" value={confirmPassword} onChange={(e) => setConfirmPassword(e.target.value)} placeholder=\"********\" className=\"w-full p-3 border border-gray-600 rounded-lg\" style={{ backgroundColor: COLORS.secondaryAccent, color: COLORS.typography }} required />\r\n                        </div>\r\n\r\n                        {/* Additional RP Role Information (Optional) */}\r\n                        <h3 className=\"text-xl font-semibold mt-6\" style={{ color: COLORS.primaryAccent }}>Additional RP Role Information (Optional)</h3>\r\n                        <div>\r\n                            <label htmlFor=\"occupation\" className=\"block text-lg font-medium mb-2\" style={{ color: COLORS.typography }}>Occupation or Role in RP</label>\r\n                            <input type=\"text\" id=\"occupation\" value={occupation} onChange={(e) => setOccupation(e.target.value)} placeholder=\"Citizen, Business Owner, etc.\" className=\"w-full p-3 border border-gray-600 rounded-lg\" style={{ backgroundColor: COLORS.secondaryAccent, color: COLORS.typography }} />\r\n                        </div>\r\n                        <div>\r\n                            <label htmlFor=\"citizenshipStatus\" className=\"block text-lg font-medium mb-2\" style={{ color: COLORS.typography }}>Citizenship Status or Immigration Status</label>\r\n                            <input type=\"text\" id=\"citizenshipStatus\" value={citizenshipStatus} onChange={(e) => setCitizenshipStatus(e.target.value)} placeholder=\"Citizen, Immigrant\" className=\"w-full p-3 border border-gray-600 rounded-lg\" style={{ backgroundColor: COLORS.secondaryAccent, color: COLORS.typography }} />\r\n                        </div>\r\n                        <div>\r\n                            <label htmlFor=\"rpIdNumber\" className=\"block text-lg font-medium mb-2\" style={{ color: COLORS.typography }}>RP Identification Number (if applicable)</label>\r\n                            <input type=\"text\" id=\"rpIdNumber\" value={rpIdNumber} onChange={(e) => setRpIdNumber(e.target.value)} placeholder=\"RP-XXXX-YYYY\" className=\"w-full p-3 border border-gray-600 rounded-lg\" style={{ backgroundColor: COLORS.secondaryAccent, color: COLORS.typography }} />\r\n                        </div>\r\n\r\n                        <button\r\n                            type=\"submit\"\r\n                            className=\"w-full font-bold py-3 px-6 rounded-lg shadow-lg transform hover:scale-105 transition-all duration-300\"\r\n                            style={{ backgroundColor: COLORS.primaryAccent, color: COLORS.background, boxShadow: `0 0 15px ${COLORS.buttonsGlow}` }}\r\n                        >\r\n                            Register Account\r\n                        </button>\r\n                    </form>\r\n                ) : (\r\n                    // User Login Form\r\n                    <form onSubmit={handleUserLogin} className=\"space-y-6\">\r\n                        <p className=\"text-lg mb-2\" style={{ color: COLORS.typography }}>Log in to your existing account.</p>\r\n                        <div>\r\n                            <label htmlFor=\"loginDiscordId\" className=\"block text-lg font-medium mb-2\" style={{ color: COLORS.typography }}>Discord User ID</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                id=\"loginDiscordId\"\r\n                                value={discordId}\r\n                                onChange={(e) => setDiscordId(e.target.value)}\r\n                                placeholder=\"YourDiscord#1234\"\r\n                                className=\"w-full p-3 border border-gray-600 rounded-lg focus:ring-green-500 focus:border-green-500 transition-all duration-200\"\r\n                                style={{ backgroundColor: COLORS.secondaryAccent, color: COLORS.typography }}\r\n                                required\r\n                            />\r\n                        </div>\r\n                        <div>\r\n                            <label htmlFor=\"loginPassword\" className=\"block text-lg font-medium mb-2\" style={{ color: COLORS.typography }}>Password</label>\r\n                            <input\r\n                                type=\"password\"\r\n                                id=\"loginPassword\"\r\n                                value={password}\r\n                                onChange={(e) => setPassword(e.target.value)}\r\n                                placeholder=\"********\"\r\n                                className=\"w-full p-3 border border-gray-600 rounded-lg focus:ring-green-500 focus:border-green-500 transition-all duration-200\"\r\n                                style={{ backgroundColor: COLORS.secondaryAccent, color: COLORS.typography }}\r\n                                required\r\n                            />\r\n                        </div>\r\n                        <button\r\n                            type=\"submit\"\r\n                            className=\"w-full font-bold py-3 px-6 rounded-lg shadow-lg transform hover:scale-105 transition-all duration-300\"\r\n                            style={{ backgroundColor: COLORS.primaryAccent, color: COLORS.background, boxShadow: `0 0 15px ${COLORS.buttonsGlow}` }}\r\n                        >\r\n                            Login\r\n                        </button>\r\n                    </form>\r\n                )}\r\n            </GlassCard>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default HomePage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}