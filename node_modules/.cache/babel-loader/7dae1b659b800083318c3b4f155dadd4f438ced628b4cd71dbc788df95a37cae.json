{"ast":null,"code":"import React,{useState}from'react';import{doc,updateDoc,collection,query,where,getDocs,addDoc}from'firebase/firestore';// Added query, where, getDocs, addDoc\nimport GlassCard from'./common/GlassCard';import{COLORS}from'../constants';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const BankingServicesLayout=_ref=>{let{userProfile,setUserProfile,db,appId,auth}=_ref;const[transferAmount,setTransferAmount]=useState('');const[recipientBankId,setRecipientBankId]=useState('');// Changed to recipientBankId\nconst[transferSourceAccount,setTransferSourceAccount]=useState('Personal');// New: Source account for transfer\nconst[transferCurrency,setTransferCurrency]=useState('RUB');const[depositAmount,setDepositAmount]=useState('');const[depositDiscordLink,setDepositDiscordLink]=useState('');// New: Discord link for deposit proof\nconst[withdrawalAmount,setWithdrawalAmount]=useState('');const[withdrawalSourceAccount,setWithdrawalSourceAccount]=useState('Personal');// New: Source account for withdrawal\nconst[exchangeAmount,setExchangeAmount]=useState('');const[fromCurrency,setFromCurrency]=useState('RUB');const[toCurrency,setToCurrency]=useState('USD');const[exchangeResult,setExchangeResult]=useState(0);// Updated exchange rates\nconst exchangeRates={RUB:{USD:0.43,EUR:0.36},USD:{RUB:2.33,EUR:0.92},// 1 USD = 2.33 RUB (inverse of 0.43)\nEUR:{RUB:2.78,USD:1.08}// 1 EUR = 2.78 RUB\n};// Get available accounts for dropdowns\nconst availableAccounts=Object.keys(userProfile.accounts||{}).filter(accountType=>userProfile.accounts[accountType]>0);// Handle money transfer\nconst handleTransfer=async e=>{e.preventDefault();const amount=parseFloat(transferAmount);if(isNaN(amount)||amount<=0){alert('Please enter a valid amount.');return;}// Check if source account has sufficient funds\nif(userProfile.accounts[transferSourceAccount]<amount){alert(`Insufficient funds in your ${transferSourceAccount} account for transfer.`);return;}if(!recipientBankId){alert('Please enter a recipient Bank ID.');return;}try{// Find recipient by bankId\nconst recipientQuery=query(collection(db,`artifacts/${appId}/users`),where(\"bankId\",\"==\",recipientBankId));const recipientSnapshot=await getDocs(recipientQuery);if(recipientSnapshot.empty){alert('Recipient Bank ID not found.');return;}const recipientDoc=recipientSnapshot.docs[0];const recipientData=recipientDoc.data();const recipientDocRef=doc(db,`artifacts/${appId}/users`,recipientDoc.id);// Deduct from sender's account\nconst senderDocRef=doc(db,`artifacts/${appId}/users`,auth.currentUser.uid);await updateDoc(senderDocRef,{[`accounts.${transferSourceAccount}`]:userProfile.accounts[transferSourceAccount]-amount,balance:userProfile.balance-amount,transactions:[...userProfile.transactions,{date:new Date().toLocaleDateString('en-US'),description:`Transfer to ${recipientData.name} (Bank ID: ${recipientBankId}) from ${transferSourceAccount}`,amount:-amount,status:'Complete'}]});// Add to recipient's personal account (as specified)\nawait updateDoc(recipientDocRef,{'accounts.Personal':recipientData.accounts.Personal+amount,balance:recipientData.balance+amount,transactions:[...recipientData.transactions,{date:new Date().toLocaleDateString('en-US'),description:`Transfer from ${userProfile.name} (Bank ID: ${userProfile.bankId}) to Personal`,amount:amount,status:'Complete'}]});alert(`Transferred ${amount.toFixed(2)} ${transferCurrency} from ${transferSourceAccount} to ${recipientData.name}.`);setTransferAmount('');setRecipientBankId('');}catch(error){console.error(\"Error during transfer:\",error);alert(`Transfer failed: ${error.message}`);}};// Handle deposit request\nconst handleDeposit=async e=>{e.preventDefault();const amount=parseFloat(depositAmount);if(isNaN(amount)||amount<=0){alert('Please enter a valid amount.');return;}if(!depositDiscordLink){alert('Please provide a Discord message link as proof of payment to RFGRFTS.');return;}try{// Submit deposit request for admin approval\nawait addDoc(collection(db,`artifacts/${appId}/public/data/depositRequests`),{userId:auth.currentUser.uid,userName:userProfile.name,amount:amount,discordLink:depositDiscordLink,status:'Pending',timestamp:new Date().toISOString()});alert(`Deposit request for ${amount.toFixed(2)} RUB submitted. Awaiting admin approval.`);setDepositAmount('');setDepositDiscordLink('');}catch(error){console.error(\"Error submitting deposit request:\",error);alert(`Deposit request failed: ${error.message}`);}};// Handle withdrawal request\nconst handleWithdrawal=async e=>{e.preventDefault();const amount=parseFloat(withdrawalAmount);if(isNaN(amount)||amount<=0){alert('Please enter a valid amount.');return;}// Check if source account has sufficient funds (conceptual, admin will verify)\nif(userProfile.accounts[withdrawalSourceAccount]<amount){alert(`Insufficient funds in your ${withdrawalSourceAccount} account for withdrawal. (Admin will verify)`);// Continue to submit request even if client-side check fails, as admin has final say\n}try{// Submit withdrawal request for admin approval\nawait addDoc(collection(db,`artifacts/${appId}/public/data/withdrawalRequests`),{userId:auth.currentUser.uid,userName:userProfile.name,amount:amount,sourceAccount:withdrawalSourceAccount,status:'Pending',timestamp:new Date().toISOString()});alert(`Withdrawal request for ${amount.toFixed(2)} RUB from ${withdrawalSourceAccount} submitted. Awaiting admin approval.`);setWithdrawalAmount('');}catch(error){console.error(\"Error submitting withdrawal request:\",error);alert(`Withdrawal request failed: ${error.message}`);}};// Handle currency exchange\nconst handleExchange=async e=>{var _exchangeRates$fromCu;e.preventDefault();const amount=parseFloat(exchangeAmount);if(isNaN(amount)||amount<=0){alert('Please enter a valid amount.');return;}if(fromCurrency===toCurrency){alert('Cannot exchange to the same currency.');return;}const rate=(_exchangeRates$fromCu=exchangeRates[fromCurrency])===null||_exchangeRates$fromCu===void 0?void 0:_exchangeRates$fromCu[toCurrency];if(!rate){alert('Exchange rate not available for selected currencies.');return;}// Simplified: assume all exchanges affect the main balance (RUB) for now\n// In a real system, you'd manage multi-currency accounts\nif(userProfile.balance<amount){alert(`Insufficient ${fromCurrency} balance for exchange.`);return;}const convertedAmount=amount*rate;setExchangeResult(convertedAmount);// Display converted amount\ntry{const userDocRef=doc(db,`artifacts/${appId}/users`,auth.currentUser.uid);// Deduct from overall balance and personal account (simplified)\nawait updateDoc(userDocRef,{balance:userProfile.balance-amount,'accounts.Personal':userProfile.accounts.Personal-amount,// Update personal account with new RUB balance\ntransactions:[...userProfile.transactions,{// Add transaction record\ndate:new Date().toLocaleDateString('en-US'),description:`Currency Exchange: ${amount.toFixed(2)} ${fromCurrency} to ${convertedAmount.toFixed(2)} ${toCurrency}`,amount:-amount,// Record original currency deduction\nstatus:'Complete'}]});alert(`Exchanged ${amount.toFixed(2)} ${fromCurrency} to ${convertedAmount.toFixed(2)} ${toCurrency}.`);}catch(error){console.error(\"Error during exchange:\",error);alert(`Exchange failed: ${error.message}`);}};return/*#__PURE__*/_jsxs(\"div\",{className:\"container mx-auto px-4 py-8\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-4xl font-extrabold mb-8 text-center drop-shadow-sm\",style:{color:COLORS.primaryAccent},children:\"\\uD83D\\uDCB5 Banking Services\"}),/*#__PURE__*/_jsxs(\"section\",{className:\"mb-12\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-3xl font-bold mb-6\",style:{color:COLORS.typography},children:\"Money Transfers\"}),/*#__PURE__*/_jsx(GlassCard,{className:\"p-8\",children:/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleTransfer,className:\"space-y-4\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"transferSourceAccount\",className:\"block text-lg font-medium mb-2\",style:{color:COLORS.typography},children:\"Source Account\"}),/*#__PURE__*/_jsx(\"select\",{id:\"transferSourceAccount\",value:transferSourceAccount,onChange:e=>setTransferSourceAccount(e.target.value),className:\"w-full p-3 border border-gray-600 rounded-lg\",style:{backgroundColor:COLORS.secondaryAccent,color:COLORS.typography},children:availableAccounts.map(accountType=>/*#__PURE__*/_jsxs(\"option\",{value:accountType,children:[accountType,\" (\\u20BD\",userProfile.accounts[accountType].toFixed(2),\")\"]},accountType))})]}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Recipient Bank ID\",value:recipientBankId,onChange:e=>setRecipientBankId(e.target.value),className:\"w-full p-3 border border-gray-600 rounded-lg\",style:{backgroundColor:COLORS.secondaryAccent,color:COLORS.typography},required:true}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",placeholder:\"Amount\",value:transferAmount,onChange:e=>setTransferAmount(e.target.value),className:\"w-full p-3 border border-gray-600 rounded-lg\",style:{backgroundColor:COLORS.secondaryAccent,color:COLORS.typography},required:true}),/*#__PURE__*/_jsxs(\"select\",{value:transferCurrency,onChange:e=>setTransferCurrency(e.target.value),className:\"w-full p-3 border border-gray-600 rounded-lg\",style:{backgroundColor:COLORS.secondaryAccent,color:COLORS.typography},children:[/*#__PURE__*/_jsx(\"option\",{children:\"RUB\"}),/*#__PURE__*/_jsx(\"option\",{children:\"USD\"}),/*#__PURE__*/_jsx(\"option\",{children:\"EUR\"})]}),/*#__PURE__*/_jsx(\"p\",{className:\"text-sm text-gray-400 italic\",children:\"Note: Funds will be transferred to recipient's Personal Account.\"}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"w-full font-bold py-3 px-6 rounded-lg shadow-lg transform hover:scale-105 transition-all duration-300\",style:{backgroundColor:COLORS.primaryAccent,color:COLORS.background,boxShadow:`0 0 15px ${COLORS.buttonsGlow}`},children:\"Initiate Transfer\"})]})})]}),/*#__PURE__*/_jsxs(\"section\",{className:\"mb-12\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-3xl font-bold mb-6\",style:{color:COLORS.typography},children:\"Deposit & Withdrawal\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"grid grid-cols-1 md:grid-cols-2 gap-8\",children:[/*#__PURE__*/_jsxs(GlassCard,{className:\"p-6\",children:[/*#__PURE__*/_jsx(\"h4\",{className:\"text-2xl font-semibold mb-4\",style:{color:COLORS.primaryAccent},children:\"Deposit Funds (Admin Approval)\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleDeposit,className:\"space-y-4\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"number\",placeholder:\"Amount\",value:depositAmount,onChange:e=>setDepositAmount(e.target.value),className:\"w-full p-3 border border-gray-600 rounded-lg mb-4\",style:{backgroundColor:COLORS.secondaryAccent,color:COLORS.typography},required:true}),/*#__PURE__*/_jsx(\"input\",{type:\"url\",placeholder:\"Discord Message Link (Proof to RFGRFTS)\",value:depositDiscordLink,onChange:e=>setDepositDiscordLink(e.target.value),className:\"w-full p-3 border border-gray-600 rounded-lg mb-4\",style:{backgroundColor:COLORS.secondaryAccent,color:COLORS.typography},required:true}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"w-full font-bold py-3 px-6 rounded-lg shadow-md transition-all duration-200\",style:{backgroundColor:COLORS.primaryAccent,color:COLORS.background,boxShadow:`0 0 10px ${COLORS.buttonsGlow}`},children:\"Request Deposit\"})]})]}),/*#__PURE__*/_jsxs(GlassCard,{className:\"p-6\",children:[/*#__PURE__*/_jsx(\"h4\",{className:\"text-2xl font-semibold mb-4\",style:{color:COLORS.primaryAccent},children:\"Withdraw Funds (Admin Approval)\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleWithdrawal,className:\"space-y-4\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"withdrawalSourceAccount\",className:\"block text-lg font-medium mb-2\",style:{color:COLORS.typography},children:\"Source Account\"}),/*#__PURE__*/_jsx(\"select\",{id:\"withdrawalSourceAccount\",value:withdrawalSourceAccount,onChange:e=>setWithdrawalSourceAccount(e.target.value),className:\"w-full p-3 border border-gray-600 rounded-lg\",style:{backgroundColor:COLORS.secondaryAccent,color:COLORS.typography},children:availableAccounts.map(accountType=>/*#__PURE__*/_jsxs(\"option\",{value:accountType,children:[accountType,\" (\\u20BD\",userProfile.accounts[accountType].toFixed(2),\")\"]},accountType))})]}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",placeholder:\"Amount\",value:withdrawalAmount,onChange:e=>setWithdrawalAmount(e.target.value),className:\"w-full p-3 border border-gray-600 rounded-lg mb-4\",style:{backgroundColor:COLORS.secondaryAccent,color:COLORS.typography},required:true}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"w-full font-bold py-3 px-6 rounded-lg shadow-md transition-all duration-200\",style:{backgroundColor:COLORS.primaryAccent,color:COLORS.background,boxShadow:`0 0 10px ${COLORS.buttonsGlow}`},children:\"Request Withdrawal\"})]})]})]})]}),/*#__PURE__*/_jsxs(\"section\",{className:\"mb-12\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-3xl font-bold mb-6\",style:{color:COLORS.typography},children:\"Currency Exchange\"}),/*#__PURE__*/_jsx(GlassCard,{className:\"p-8\",children:/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleExchange,className:\"space-y-4\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"number\",placeholder:\"Amount to Exchange\",value:exchangeAmount,onChange:e=>setExchangeAmount(e.target.value),className:\"w-full p-3 border border-gray-600 rounded-lg\",style:{backgroundColor:COLORS.secondaryAccent,color:COLORS.typography},required:true}),/*#__PURE__*/_jsxs(\"div\",{className:\"grid grid-cols-2 gap-4\",children:[/*#__PURE__*/_jsxs(\"select\",{value:fromCurrency,onChange:e=>setFromCurrency(e.target.value),className:\"w-full p-3 border border-gray-600 rounded-lg\",style:{backgroundColor:COLORS.secondaryAccent,color:COLORS.typography},children:[/*#__PURE__*/_jsx(\"option\",{children:\"RUB\"}),/*#__PURE__*/_jsx(\"option\",{children:\"USD\"}),/*#__PURE__*/_jsx(\"option\",{children:\"EUR\"})]}),/*#__PURE__*/_jsxs(\"select\",{value:toCurrency,onChange:e=>setToCurrency(e.target.value),className:\"w-full p-3 border border-gray-600 rounded-lg\",style:{backgroundColor:COLORS.secondaryAccent,color:COLORS.typography},children:[/*#__PURE__*/_jsx(\"option\",{children:\"USD\"}),/*#__PURE__*/_jsx(\"option\",{children:\"RUB\"}),/*#__PURE__*/_jsx(\"option\",{children:\"EUR\"})]})]}),/*#__PURE__*/_jsxs(\"p\",{className:\"text-xl font-semibold text-center\",style:{color:COLORS.primaryAccent},children:[\"Result: \",exchangeResult.toFixed(2),\" \",toCurrency]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"w-full font-bold py-3 px-6 rounded-lg shadow-lg transform hover:scale-105 transition-all duration-300\",style:{backgroundColor:COLORS.primaryAccent,color:COLORS.background,boxShadow:`0 0 15px ${COLORS.buttonsGlow}`},children:\"Calculate & Exchange\"})]})})]})]});};export default BankingServicesLayout;","map":{"version":3,"names":["React","useState","doc","updateDoc","collection","query","where","getDocs","addDoc","GlassCard","COLORS","jsx","_jsx","jsxs","_jsxs","BankingServicesLayout","_ref","userProfile","setUserProfile","db","appId","auth","transferAmount","setTransferAmount","recipientBankId","setRecipientBankId","transferSourceAccount","setTransferSourceAccount","transferCurrency","setTransferCurrency","depositAmount","setDepositAmount","depositDiscordLink","setDepositDiscordLink","withdrawalAmount","setWithdrawalAmount","withdrawalSourceAccount","setWithdrawalSourceAccount","exchangeAmount","setExchangeAmount","fromCurrency","setFromCurrency","toCurrency","setToCurrency","exchangeResult","setExchangeResult","exchangeRates","RUB","USD","EUR","availableAccounts","Object","keys","accounts","filter","accountType","handleTransfer","e","preventDefault","amount","parseFloat","isNaN","alert","recipientQuery","recipientSnapshot","empty","recipientDoc","docs","recipientData","data","recipientDocRef","id","senderDocRef","currentUser","uid","balance","transactions","date","Date","toLocaleDateString","description","name","status","Personal","bankId","toFixed","error","console","message","handleDeposit","userId","userName","discordLink","timestamp","toISOString","handleWithdrawal","sourceAccount","handleExchange","_exchangeRates$fromCu","rate","convertedAmount","userDocRef","className","children","style","color","primaryAccent","typography","onSubmit","htmlFor","value","onChange","target","backgroundColor","secondaryAccent","map","type","placeholder","required","background","boxShadow","buttonsGlow"],"sources":["C:/Users/trent/OneDrive/Desktop/SberBank Website/src/components/BankingServicesLayout.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { doc, updateDoc, collection, query, where, getDocs, addDoc } from 'firebase/firestore'; // Added query, where, getDocs, addDoc\r\nimport GlassCard from './common/GlassCard';\r\nimport { COLORS } from '../constants';\r\n\r\nconst BankingServicesLayout = ({ userProfile, setUserProfile, db, appId, auth }) => {\r\n    const [transferAmount, setTransferAmount] = useState('');\r\n    const [recipientBankId, setRecipientBankId] = useState(''); // Changed to recipientBankId\r\n    const [transferSourceAccount, setTransferSourceAccount] = useState('Personal'); // New: Source account for transfer\r\n    const [transferCurrency, setTransferCurrency] = useState('RUB');\r\n    const [depositAmount, setDepositAmount] = useState('');\r\n    const [depositDiscordLink, setDepositDiscordLink] = useState(''); // New: Discord link for deposit proof\r\n    const [withdrawalAmount, setWithdrawalAmount] = useState('');\r\n    const [withdrawalSourceAccount, setWithdrawalSourceAccount] = useState('Personal'); // New: Source account for withdrawal\r\n    const [exchangeAmount, setExchangeAmount] = useState('');\r\n    const [fromCurrency, setFromCurrency] = useState('RUB');\r\n    const [toCurrency, setToCurrency] = useState('USD');\r\n    const [exchangeResult, setExchangeResult] = useState(0);\r\n\r\n    // Updated exchange rates\r\n    const exchangeRates = {\r\n        RUB: { USD: 0.43, EUR: 0.36 },\r\n        USD: { RUB: 2.33, EUR: 0.92 }, // 1 USD = 2.33 RUB (inverse of 0.43)\r\n        EUR: { RUB: 2.78, USD: 1.08 }, // 1 EUR = 2.78 RUB\r\n    };\r\n\r\n    // Get available accounts for dropdowns\r\n    const availableAccounts = Object.keys(userProfile.accounts || {}).filter(accountType => userProfile.accounts[accountType] > 0);\r\n\r\n    // Handle money transfer\r\n    const handleTransfer = async (e) => {\r\n        e.preventDefault();\r\n        const amount = parseFloat(transferAmount);\r\n        if (isNaN(amount) || amount <= 0) {\r\n            alert('Please enter a valid amount.');\r\n            return;\r\n        }\r\n        // Check if source account has sufficient funds\r\n        if (userProfile.accounts[transferSourceAccount] < amount) {\r\n            alert(`Insufficient funds in your ${transferSourceAccount} account for transfer.`);\r\n            return;\r\n        }\r\n        if (!recipientBankId) {\r\n            alert('Please enter a recipient Bank ID.');\r\n            return;\r\n        }\r\n\r\n        try {\r\n            // Find recipient by bankId\r\n            const recipientQuery = query(collection(db, `artifacts/${appId}/users`), where(\"bankId\", \"==\", recipientBankId));\r\n            const recipientSnapshot = await getDocs(recipientQuery);\r\n\r\n            if (recipientSnapshot.empty) {\r\n                alert('Recipient Bank ID not found.');\r\n                return;\r\n            }\r\n\r\n            const recipientDoc = recipientSnapshot.docs[0];\r\n            const recipientData = recipientDoc.data();\r\n            const recipientDocRef = doc(db, `artifacts/${appId}/users`, recipientDoc.id);\r\n\r\n            // Deduct from sender's account\r\n            const senderDocRef = doc(db, `artifacts/${appId}/users`, auth.currentUser.uid);\r\n            await updateDoc(senderDocRef, {\r\n                [`accounts.${transferSourceAccount}`]: userProfile.accounts[transferSourceAccount] - amount,\r\n                balance: userProfile.balance - amount,\r\n                transactions: [...userProfile.transactions, {\r\n                    date: new Date().toLocaleDateString('en-US'),\r\n                    description: `Transfer to ${recipientData.name} (Bank ID: ${recipientBankId}) from ${transferSourceAccount}`,\r\n                    amount: -amount,\r\n                    status: 'Complete'\r\n                }]\r\n            });\r\n\r\n            // Add to recipient's personal account (as specified)\r\n            await updateDoc(recipientDocRef, {\r\n                'accounts.Personal': recipientData.accounts.Personal + amount,\r\n                balance: recipientData.balance + amount,\r\n                transactions: [...recipientData.transactions, {\r\n                    date: new Date().toLocaleDateString('en-US'),\r\n                    description: `Transfer from ${userProfile.name} (Bank ID: ${userProfile.bankId}) to Personal`,\r\n                    amount: amount,\r\n                    status: 'Complete'\r\n                }]\r\n            });\r\n\r\n            alert(`Transferred ${amount.toFixed(2)} ${transferCurrency} from ${transferSourceAccount} to ${recipientData.name}.`);\r\n            setTransferAmount('');\r\n            setRecipientBankId('');\r\n        } catch (error) {\r\n            console.error(\"Error during transfer:\", error);\r\n            alert(`Transfer failed: ${error.message}`);\r\n        }\r\n    };\r\n\r\n    // Handle deposit request\r\n    const handleDeposit = async (e) => {\r\n        e.preventDefault();\r\n        const amount = parseFloat(depositAmount);\r\n        if (isNaN(amount) || amount <= 0) {\r\n            alert('Please enter a valid amount.');\r\n            return;\r\n        }\r\n        if (!depositDiscordLink) {\r\n            alert('Please provide a Discord message link as proof of payment to RFGRFTS.');\r\n            return;\r\n        }\r\n\r\n        try {\r\n            // Submit deposit request for admin approval\r\n            await addDoc(collection(db, `artifacts/${appId}/public/data/depositRequests`), {\r\n                userId: auth.currentUser.uid,\r\n                userName: userProfile.name,\r\n                amount: amount,\r\n                discordLink: depositDiscordLink,\r\n                status: 'Pending',\r\n                timestamp: new Date().toISOString()\r\n            });\r\n            alert(`Deposit request for ${amount.toFixed(2)} RUB submitted. Awaiting admin approval.`);\r\n            setDepositAmount('');\r\n            setDepositDiscordLink('');\r\n        } catch (error) {\r\n            console.error(\"Error submitting deposit request:\", error);\r\n            alert(`Deposit request failed: ${error.message}`);\r\n        }\r\n    };\r\n\r\n    // Handle withdrawal request\r\n    const handleWithdrawal = async (e) => {\r\n        e.preventDefault();\r\n        const amount = parseFloat(withdrawalAmount);\r\n        if (isNaN(amount) || amount <= 0) {\r\n            alert('Please enter a valid amount.');\r\n            return;\r\n        }\r\n        // Check if source account has sufficient funds (conceptual, admin will verify)\r\n        if (userProfile.accounts[withdrawalSourceAccount] < amount) {\r\n            alert(`Insufficient funds in your ${withdrawalSourceAccount} account for withdrawal. (Admin will verify)`);\r\n            // Continue to submit request even if client-side check fails, as admin has final say\r\n        }\r\n\r\n        try {\r\n            // Submit withdrawal request for admin approval\r\n            await addDoc(collection(db, `artifacts/${appId}/public/data/withdrawalRequests`), {\r\n                userId: auth.currentUser.uid,\r\n                userName: userProfile.name,\r\n                amount: amount,\r\n                sourceAccount: withdrawalSourceAccount,\r\n                status: 'Pending',\r\n                timestamp: new Date().toISOString()\r\n            });\r\n            alert(`Withdrawal request for ${amount.toFixed(2)} RUB from ${withdrawalSourceAccount} submitted. Awaiting admin approval.`);\r\n            setWithdrawalAmount('');\r\n        } catch (error) {\r\n            console.error(\"Error submitting withdrawal request:\", error);\r\n            alert(`Withdrawal request failed: ${error.message}`);\r\n        }\r\n    };\r\n\r\n    // Handle currency exchange\r\n    const handleExchange = async (e) => {\r\n        e.preventDefault();\r\n        const amount = parseFloat(exchangeAmount);\r\n        if (isNaN(amount) || amount <= 0) {\r\n            alert('Please enter a valid amount.');\r\n            return;\r\n        }\r\n        if (fromCurrency === toCurrency) {\r\n            alert('Cannot exchange to the same currency.');\r\n            return;\r\n        }\r\n\r\n        const rate = exchangeRates[fromCurrency]?.[toCurrency];\r\n        if (!rate) {\r\n            alert('Exchange rate not available for selected currencies.');\r\n            return;\r\n        }\r\n\r\n        // Simplified: assume all exchanges affect the main balance (RUB) for now\r\n        // In a real system, you'd manage multi-currency accounts\r\n        if (userProfile.balance < amount) {\r\n            alert(`Insufficient ${fromCurrency} balance for exchange.`);\r\n            return;\r\n        }\r\n\r\n        const convertedAmount = amount * rate;\r\n        setExchangeResult(convertedAmount); // Display converted amount\r\n\r\n        try {\r\n            const userDocRef = doc(db, `artifacts/${appId}/users`, auth.currentUser.uid);\r\n            // Deduct from overall balance and personal account (simplified)\r\n            await updateDoc(userDocRef, {\r\n                balance: userProfile.balance - amount,\r\n                'accounts.Personal': userProfile.accounts.Personal - amount, // Update personal account with new RUB balance\r\n                transactions: [...userProfile.transactions, { // Add transaction record\r\n                    date: new Date().toLocaleDateString('en-US'),\r\n                    description: `Currency Exchange: ${amount.toFixed(2)} ${fromCurrency} to ${convertedAmount.toFixed(2)} ${toCurrency}`,\r\n                    amount: -amount, // Record original currency deduction\r\n                    status: 'Complete'\r\n                }]\r\n            });\r\n            alert(`Exchanged ${amount.toFixed(2)} ${fromCurrency} to ${convertedAmount.toFixed(2)} ${toCurrency}.`);\r\n        } catch (error) {\r\n            console.error(\"Error during exchange:\", error);\r\n            alert(`Exchange failed: ${error.message}`);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"container mx-auto px-4 py-8\">\r\n            <h2 className=\"text-4xl font-extrabold mb-8 text-center drop-shadow-sm\" style={{ color: COLORS.primaryAccent }}>💵 Banking Services</h2>\r\n\r\n            {/* Money Transfers */}\r\n            <section className=\"mb-12\">\r\n                <h3 className=\"text-3xl font-bold mb-6\" style={{ color: COLORS.typography }}>Money Transfers</h3>\r\n                <GlassCard className=\"p-8\">\r\n                    <form onSubmit={handleTransfer} className=\"space-y-4\">\r\n                        <div>\r\n                            <label htmlFor=\"transferSourceAccount\" className=\"block text-lg font-medium mb-2\" style={{ color: COLORS.typography }}>Source Account</label>\r\n                            <select id=\"transferSourceAccount\" value={transferSourceAccount} onChange={(e) => setTransferSourceAccount(e.target.value)} className=\"w-full p-3 border border-gray-600 rounded-lg\" style={{ backgroundColor: COLORS.secondaryAccent, color: COLORS.typography }}>\r\n                                {availableAccounts.map(accountType => (\r\n                                    <option key={accountType} value={accountType}>{accountType} (₽{userProfile.accounts[accountType].toFixed(2)})</option>\r\n                                ))}\r\n                            </select>\r\n                        </div>\r\n                        <input type=\"text\" placeholder=\"Recipient Bank ID\" value={recipientBankId} onChange={(e) => setRecipientBankId(e.target.value)} className=\"w-full p-3 border border-gray-600 rounded-lg\" style={{ backgroundColor: COLORS.secondaryAccent, color: COLORS.typography }} required />\r\n                        <input type=\"number\" placeholder=\"Amount\" value={transferAmount} onChange={(e) => setTransferAmount(e.target.value)} className=\"w-full p-3 border border-gray-600 rounded-lg\" style={{ backgroundColor: COLORS.secondaryAccent, color: COLORS.typography }} required />\r\n                        <select value={transferCurrency} onChange={(e) => setTransferCurrency(e.target.value)} className=\"w-full p-3 border border-gray-600 rounded-lg\" style={{ backgroundColor: COLORS.secondaryAccent, color: COLORS.typography }}>\r\n                            <option>RUB</option><option>USD</option><option>EUR</option>\r\n                        </select>\r\n                        <p className=\"text-sm text-gray-400 italic\">Note: Funds will be transferred to recipient's Personal Account.</p>\r\n                        <button type=\"submit\" className=\"w-full font-bold py-3 px-6 rounded-lg shadow-lg transform hover:scale-105 transition-all duration-300\" style={{ backgroundColor: COLORS.primaryAccent, color: COLORS.background, boxShadow: `0 0 15px ${COLORS.buttonsGlow}` }}>Initiate Transfer</button>\r\n                    </form>\r\n                </GlassCard>\r\n            </section>\r\n\r\n            {/* Deposit & Withdrawal Options */}\r\n            <section className=\"mb-12\">\r\n                <h3 className=\"text-3xl font-bold mb-6\" style={{ color: COLORS.typography }}>Deposit & Withdrawal</h3>\r\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-8\">\r\n                    <GlassCard className=\"p-6\">\r\n                        <h4 className=\"text-2xl font-semibold mb-4\" style={{ color: COLORS.primaryAccent }}>Deposit Funds (Admin Approval)</h4>\r\n                        <form onSubmit={handleDeposit} className=\"space-y-4\">\r\n                            <input type=\"number\" placeholder=\"Amount\" value={depositAmount} onChange={(e) => setDepositAmount(e.target.value)} className=\"w-full p-3 border border-gray-600 rounded-lg mb-4\" style={{ backgroundColor: COLORS.secondaryAccent, color: COLORS.typography }} required />\r\n                            <input type=\"url\" placeholder=\"Discord Message Link (Proof to RFGRFTS)\" value={depositDiscordLink} onChange={(e) => setDepositDiscordLink(e.target.value)} className=\"w-full p-3 border border-gray-600 rounded-lg mb-4\" style={{ backgroundColor: COLORS.secondaryAccent, color: COLORS.typography }} required />\r\n                            <button type=\"submit\" className=\"w-full font-bold py-3 px-6 rounded-lg shadow-md transition-all duration-200\" style={{ backgroundColor: COLORS.primaryAccent, color: COLORS.background, boxShadow: `0 0 10px ${COLORS.buttonsGlow}` }}>Request Deposit</button>\r\n                        </form>\r\n                    </GlassCard>\r\n                    <GlassCard className=\"p-6\">\r\n                        <h4 className=\"text-2xl font-semibold mb-4\" style={{ color: COLORS.primaryAccent }}>Withdraw Funds (Admin Approval)</h4>\r\n                        <form onSubmit={handleWithdrawal} className=\"space-y-4\">\r\n                            <div>\r\n                                <label htmlFor=\"withdrawalSourceAccount\" className=\"block text-lg font-medium mb-2\" style={{ color: COLORS.typography }}>Source Account</label>\r\n                                <select id=\"withdrawalSourceAccount\" value={withdrawalSourceAccount} onChange={(e) => setWithdrawalSourceAccount(e.target.value)} className=\"w-full p-3 border border-gray-600 rounded-lg\" style={{ backgroundColor: COLORS.secondaryAccent, color: COLORS.typography }}>\r\n                                    {availableAccounts.map(accountType => (\r\n                                        <option key={accountType} value={accountType}>{accountType} (₽{userProfile.accounts[accountType].toFixed(2)})</option>\r\n                                    ))}\r\n                                </select>\r\n                            </div>\r\n                            <input type=\"number\" placeholder=\"Amount\" value={withdrawalAmount} onChange={(e) => setWithdrawalAmount(e.target.value)} className=\"w-full p-3 border border-gray-600 rounded-lg mb-4\" style={{ backgroundColor: COLORS.secondaryAccent, color: COLORS.typography }} required />\r\n                            <button type=\"submit\" className=\"w-full font-bold py-3 px-6 rounded-lg shadow-md transition-all duration-200\" style={{ backgroundColor: COLORS.primaryAccent, color: COLORS.background, boxShadow: `0 0 10px ${COLORS.buttonsGlow}` }}>Request Withdrawal</button>\r\n                        </form>\r\n                    </GlassCard>\r\n                </div>\r\n            </section>\r\n\r\n            {/* Currency Exchange */}\r\n            <section className=\"mb-12\">\r\n                <h3 className=\"text-3xl font-bold mb-6\" style={{ color: COLORS.typography }}>Currency Exchange</h3>\r\n                <GlassCard className=\"p-8\">\r\n                    <form onSubmit={handleExchange} className=\"space-y-4\">\r\n                        <input type=\"number\" placeholder=\"Amount to Exchange\" value={exchangeAmount} onChange={(e) => setExchangeAmount(e.target.value)} className=\"w-full p-3 border border-gray-600 rounded-lg\" style={{ backgroundColor: COLORS.secondaryAccent, color: COLORS.typography }} required />\r\n                        <div className=\"grid grid-cols-2 gap-4\">\r\n                            <select value={fromCurrency} onChange={(e) => setFromCurrency(e.target.value)} className=\"w-full p-3 border border-gray-600 rounded-lg\" style={{ backgroundColor: COLORS.secondaryAccent, color: COLORS.typography }}>\r\n                                <option>RUB</option><option>USD</option><option>EUR</option>\r\n                            </select>\r\n                            <select value={toCurrency} onChange={(e) => setToCurrency(e.target.value)} className=\"w-full p-3 border border-gray-600 rounded-lg\" style={{ backgroundColor: COLORS.secondaryAccent, color: COLORS.typography }}>\r\n                                <option>USD</option><option>RUB</option><option>EUR</option>\r\n                            </select>\r\n                        </div>\r\n                        <p className=\"text-xl font-semibold text-center\" style={{ color: COLORS.primaryAccent }}>Result: {exchangeResult.toFixed(2)} {toCurrency}</p>\r\n                        <button type=\"submit\" className=\"w-full font-bold py-3 px-6 rounded-lg shadow-lg transform hover:scale-105 transition-all duration-300\" style={{ backgroundColor: COLORS.primaryAccent, color: COLORS.background, boxShadow: `0 0 15px ${COLORS.buttonsGlow}` }}>Calculate & Exchange</button>\r\n                    </form>\r\n                </GlassCard>\r\n            </section>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default BankingServicesLayout;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,OAASC,GAAG,CAAEC,SAAS,CAAEC,UAAU,CAAEC,KAAK,CAAEC,KAAK,CAAEC,OAAO,CAAEC,MAAM,KAAQ,oBAAoB,CAAE;AAChG,MAAO,CAAAC,SAAS,KAAM,oBAAoB,CAC1C,OAASC,MAAM,KAAQ,cAAc,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEtC,KAAM,CAAAC,qBAAqB,CAAGC,IAAA,EAAsD,IAArD,CAAEC,WAAW,CAAEC,cAAc,CAAEC,EAAE,CAAEC,KAAK,CAAEC,IAAK,CAAC,CAAAL,IAAA,CAC3E,KAAM,CAACM,cAAc,CAAEC,iBAAiB,CAAC,CAAGtB,QAAQ,CAAC,EAAE,CAAC,CACxD,KAAM,CAACuB,eAAe,CAAEC,kBAAkB,CAAC,CAAGxB,QAAQ,CAAC,EAAE,CAAC,CAAE;AAC5D,KAAM,CAACyB,qBAAqB,CAAEC,wBAAwB,CAAC,CAAG1B,QAAQ,CAAC,UAAU,CAAC,CAAE;AAChF,KAAM,CAAC2B,gBAAgB,CAAEC,mBAAmB,CAAC,CAAG5B,QAAQ,CAAC,KAAK,CAAC,CAC/D,KAAM,CAAC6B,aAAa,CAAEC,gBAAgB,CAAC,CAAG9B,QAAQ,CAAC,EAAE,CAAC,CACtD,KAAM,CAAC+B,kBAAkB,CAAEC,qBAAqB,CAAC,CAAGhC,QAAQ,CAAC,EAAE,CAAC,CAAE;AAClE,KAAM,CAACiC,gBAAgB,CAAEC,mBAAmB,CAAC,CAAGlC,QAAQ,CAAC,EAAE,CAAC,CAC5D,KAAM,CAACmC,uBAAuB,CAAEC,0BAA0B,CAAC,CAAGpC,QAAQ,CAAC,UAAU,CAAC,CAAE;AACpF,KAAM,CAACqC,cAAc,CAAEC,iBAAiB,CAAC,CAAGtC,QAAQ,CAAC,EAAE,CAAC,CACxD,KAAM,CAACuC,YAAY,CAAEC,eAAe,CAAC,CAAGxC,QAAQ,CAAC,KAAK,CAAC,CACvD,KAAM,CAACyC,UAAU,CAAEC,aAAa,CAAC,CAAG1C,QAAQ,CAAC,KAAK,CAAC,CACnD,KAAM,CAAC2C,cAAc,CAAEC,iBAAiB,CAAC,CAAG5C,QAAQ,CAAC,CAAC,CAAC,CAEvD;AACA,KAAM,CAAA6C,aAAa,CAAG,CAClBC,GAAG,CAAE,CAAEC,GAAG,CAAE,IAAI,CAAEC,GAAG,CAAE,IAAK,CAAC,CAC7BD,GAAG,CAAE,CAAED,GAAG,CAAE,IAAI,CAAEE,GAAG,CAAE,IAAK,CAAC,CAAE;AAC/BA,GAAG,CAAE,CAAEF,GAAG,CAAE,IAAI,CAAEC,GAAG,CAAE,IAAK,CAAG;AACnC,CAAC,CAED;AACA,KAAM,CAAAE,iBAAiB,CAAGC,MAAM,CAACC,IAAI,CAACnC,WAAW,CAACoC,QAAQ,EAAI,CAAC,CAAC,CAAC,CAACC,MAAM,CAACC,WAAW,EAAItC,WAAW,CAACoC,QAAQ,CAACE,WAAW,CAAC,CAAG,CAAC,CAAC,CAE9H;AACA,KAAM,CAAAC,cAAc,CAAG,KAAO,CAAAC,CAAC,EAAK,CAChCA,CAAC,CAACC,cAAc,CAAC,CAAC,CAClB,KAAM,CAAAC,MAAM,CAAGC,UAAU,CAACtC,cAAc,CAAC,CACzC,GAAIuC,KAAK,CAACF,MAAM,CAAC,EAAIA,MAAM,EAAI,CAAC,CAAE,CAC9BG,KAAK,CAAC,8BAA8B,CAAC,CACrC,OACJ,CACA;AACA,GAAI7C,WAAW,CAACoC,QAAQ,CAAC3B,qBAAqB,CAAC,CAAGiC,MAAM,CAAE,CACtDG,KAAK,CAAC,8BAA8BpC,qBAAqB,wBAAwB,CAAC,CAClF,OACJ,CACA,GAAI,CAACF,eAAe,CAAE,CAClBsC,KAAK,CAAC,mCAAmC,CAAC,CAC1C,OACJ,CAEA,GAAI,CACA;AACA,KAAM,CAAAC,cAAc,CAAG1D,KAAK,CAACD,UAAU,CAACe,EAAE,CAAE,aAAaC,KAAK,QAAQ,CAAC,CAAEd,KAAK,CAAC,QAAQ,CAAE,IAAI,CAAEkB,eAAe,CAAC,CAAC,CAChH,KAAM,CAAAwC,iBAAiB,CAAG,KAAM,CAAAzD,OAAO,CAACwD,cAAc,CAAC,CAEvD,GAAIC,iBAAiB,CAACC,KAAK,CAAE,CACzBH,KAAK,CAAC,8BAA8B,CAAC,CACrC,OACJ,CAEA,KAAM,CAAAI,YAAY,CAAGF,iBAAiB,CAACG,IAAI,CAAC,CAAC,CAAC,CAC9C,KAAM,CAAAC,aAAa,CAAGF,YAAY,CAACG,IAAI,CAAC,CAAC,CACzC,KAAM,CAAAC,eAAe,CAAGpE,GAAG,CAACiB,EAAE,CAAE,aAAaC,KAAK,QAAQ,CAAE8C,YAAY,CAACK,EAAE,CAAC,CAE5E;AACA,KAAM,CAAAC,YAAY,CAAGtE,GAAG,CAACiB,EAAE,CAAE,aAAaC,KAAK,QAAQ,CAAEC,IAAI,CAACoD,WAAW,CAACC,GAAG,CAAC,CAC9E,KAAM,CAAAvE,SAAS,CAACqE,YAAY,CAAE,CAC1B,CAAC,YAAY9C,qBAAqB,EAAE,EAAGT,WAAW,CAACoC,QAAQ,CAAC3B,qBAAqB,CAAC,CAAGiC,MAAM,CAC3FgB,OAAO,CAAE1D,WAAW,CAAC0D,OAAO,CAAGhB,MAAM,CACrCiB,YAAY,CAAE,CAAC,GAAG3D,WAAW,CAAC2D,YAAY,CAAE,CACxCC,IAAI,CAAE,GAAI,CAAAC,IAAI,CAAC,CAAC,CAACC,kBAAkB,CAAC,OAAO,CAAC,CAC5CC,WAAW,CAAE,eAAeZ,aAAa,CAACa,IAAI,cAAczD,eAAe,UAAUE,qBAAqB,EAAE,CAC5GiC,MAAM,CAAE,CAACA,MAAM,CACfuB,MAAM,CAAE,UACZ,CAAC,CACL,CAAC,CAAC,CAEF;AACA,KAAM,CAAA/E,SAAS,CAACmE,eAAe,CAAE,CAC7B,mBAAmB,CAAEF,aAAa,CAACf,QAAQ,CAAC8B,QAAQ,CAAGxB,MAAM,CAC7DgB,OAAO,CAAEP,aAAa,CAACO,OAAO,CAAGhB,MAAM,CACvCiB,YAAY,CAAE,CAAC,GAAGR,aAAa,CAACQ,YAAY,CAAE,CAC1CC,IAAI,CAAE,GAAI,CAAAC,IAAI,CAAC,CAAC,CAACC,kBAAkB,CAAC,OAAO,CAAC,CAC5CC,WAAW,CAAE,iBAAiB/D,WAAW,CAACgE,IAAI,cAAchE,WAAW,CAACmE,MAAM,eAAe,CAC7FzB,MAAM,CAAEA,MAAM,CACduB,MAAM,CAAE,UACZ,CAAC,CACL,CAAC,CAAC,CAEFpB,KAAK,CAAC,eAAeH,MAAM,CAAC0B,OAAO,CAAC,CAAC,CAAC,IAAIzD,gBAAgB,SAASF,qBAAqB,OAAO0C,aAAa,CAACa,IAAI,GAAG,CAAC,CACrH1D,iBAAiB,CAAC,EAAE,CAAC,CACrBE,kBAAkB,CAAC,EAAE,CAAC,CAC1B,CAAE,MAAO6D,KAAK,CAAE,CACZC,OAAO,CAACD,KAAK,CAAC,wBAAwB,CAAEA,KAAK,CAAC,CAC9CxB,KAAK,CAAC,oBAAoBwB,KAAK,CAACE,OAAO,EAAE,CAAC,CAC9C,CACJ,CAAC,CAED;AACA,KAAM,CAAAC,aAAa,CAAG,KAAO,CAAAhC,CAAC,EAAK,CAC/BA,CAAC,CAACC,cAAc,CAAC,CAAC,CAClB,KAAM,CAAAC,MAAM,CAAGC,UAAU,CAAC9B,aAAa,CAAC,CACxC,GAAI+B,KAAK,CAACF,MAAM,CAAC,EAAIA,MAAM,EAAI,CAAC,CAAE,CAC9BG,KAAK,CAAC,8BAA8B,CAAC,CACrC,OACJ,CACA,GAAI,CAAC9B,kBAAkB,CAAE,CACrB8B,KAAK,CAAC,uEAAuE,CAAC,CAC9E,OACJ,CAEA,GAAI,CACA;AACA,KAAM,CAAAtD,MAAM,CAACJ,UAAU,CAACe,EAAE,CAAE,aAAaC,KAAK,8BAA8B,CAAC,CAAE,CAC3EsE,MAAM,CAAErE,IAAI,CAACoD,WAAW,CAACC,GAAG,CAC5BiB,QAAQ,CAAE1E,WAAW,CAACgE,IAAI,CAC1BtB,MAAM,CAAEA,MAAM,CACdiC,WAAW,CAAE5D,kBAAkB,CAC/BkD,MAAM,CAAE,SAAS,CACjBW,SAAS,CAAE,GAAI,CAAAf,IAAI,CAAC,CAAC,CAACgB,WAAW,CAAC,CACtC,CAAC,CAAC,CACFhC,KAAK,CAAC,uBAAuBH,MAAM,CAAC0B,OAAO,CAAC,CAAC,CAAC,0CAA0C,CAAC,CACzFtD,gBAAgB,CAAC,EAAE,CAAC,CACpBE,qBAAqB,CAAC,EAAE,CAAC,CAC7B,CAAE,MAAOqD,KAAK,CAAE,CACZC,OAAO,CAACD,KAAK,CAAC,mCAAmC,CAAEA,KAAK,CAAC,CACzDxB,KAAK,CAAC,2BAA2BwB,KAAK,CAACE,OAAO,EAAE,CAAC,CACrD,CACJ,CAAC,CAED;AACA,KAAM,CAAAO,gBAAgB,CAAG,KAAO,CAAAtC,CAAC,EAAK,CAClCA,CAAC,CAACC,cAAc,CAAC,CAAC,CAClB,KAAM,CAAAC,MAAM,CAAGC,UAAU,CAAC1B,gBAAgB,CAAC,CAC3C,GAAI2B,KAAK,CAACF,MAAM,CAAC,EAAIA,MAAM,EAAI,CAAC,CAAE,CAC9BG,KAAK,CAAC,8BAA8B,CAAC,CACrC,OACJ,CACA;AACA,GAAI7C,WAAW,CAACoC,QAAQ,CAACjB,uBAAuB,CAAC,CAAGuB,MAAM,CAAE,CACxDG,KAAK,CAAC,8BAA8B1B,uBAAuB,8CAA8C,CAAC,CAC1G;AACJ,CAEA,GAAI,CACA;AACA,KAAM,CAAA5B,MAAM,CAACJ,UAAU,CAACe,EAAE,CAAE,aAAaC,KAAK,iCAAiC,CAAC,CAAE,CAC9EsE,MAAM,CAAErE,IAAI,CAACoD,WAAW,CAACC,GAAG,CAC5BiB,QAAQ,CAAE1E,WAAW,CAACgE,IAAI,CAC1BtB,MAAM,CAAEA,MAAM,CACdqC,aAAa,CAAE5D,uBAAuB,CACtC8C,MAAM,CAAE,SAAS,CACjBW,SAAS,CAAE,GAAI,CAAAf,IAAI,CAAC,CAAC,CAACgB,WAAW,CAAC,CACtC,CAAC,CAAC,CACFhC,KAAK,CAAC,0BAA0BH,MAAM,CAAC0B,OAAO,CAAC,CAAC,CAAC,aAAajD,uBAAuB,sCAAsC,CAAC,CAC5HD,mBAAmB,CAAC,EAAE,CAAC,CAC3B,CAAE,MAAOmD,KAAK,CAAE,CACZC,OAAO,CAACD,KAAK,CAAC,sCAAsC,CAAEA,KAAK,CAAC,CAC5DxB,KAAK,CAAC,8BAA8BwB,KAAK,CAACE,OAAO,EAAE,CAAC,CACxD,CACJ,CAAC,CAED;AACA,KAAM,CAAAS,cAAc,CAAG,KAAO,CAAAxC,CAAC,EAAK,KAAAyC,qBAAA,CAChCzC,CAAC,CAACC,cAAc,CAAC,CAAC,CAClB,KAAM,CAAAC,MAAM,CAAGC,UAAU,CAACtB,cAAc,CAAC,CACzC,GAAIuB,KAAK,CAACF,MAAM,CAAC,EAAIA,MAAM,EAAI,CAAC,CAAE,CAC9BG,KAAK,CAAC,8BAA8B,CAAC,CACrC,OACJ,CACA,GAAItB,YAAY,GAAKE,UAAU,CAAE,CAC7BoB,KAAK,CAAC,uCAAuC,CAAC,CAC9C,OACJ,CAEA,KAAM,CAAAqC,IAAI,EAAAD,qBAAA,CAAGpD,aAAa,CAACN,YAAY,CAAC,UAAA0D,qBAAA,iBAA3BA,qBAAA,CAA8BxD,UAAU,CAAC,CACtD,GAAI,CAACyD,IAAI,CAAE,CACPrC,KAAK,CAAC,sDAAsD,CAAC,CAC7D,OACJ,CAEA;AACA;AACA,GAAI7C,WAAW,CAAC0D,OAAO,CAAGhB,MAAM,CAAE,CAC9BG,KAAK,CAAC,gBAAgBtB,YAAY,wBAAwB,CAAC,CAC3D,OACJ,CAEA,KAAM,CAAA4D,eAAe,CAAGzC,MAAM,CAAGwC,IAAI,CACrCtD,iBAAiB,CAACuD,eAAe,CAAC,CAAE;AAEpC,GAAI,CACA,KAAM,CAAAC,UAAU,CAAGnG,GAAG,CAACiB,EAAE,CAAE,aAAaC,KAAK,QAAQ,CAAEC,IAAI,CAACoD,WAAW,CAACC,GAAG,CAAC,CAC5E;AACA,KAAM,CAAAvE,SAAS,CAACkG,UAAU,CAAE,CACxB1B,OAAO,CAAE1D,WAAW,CAAC0D,OAAO,CAAGhB,MAAM,CACrC,mBAAmB,CAAE1C,WAAW,CAACoC,QAAQ,CAAC8B,QAAQ,CAAGxB,MAAM,CAAE;AAC7DiB,YAAY,CAAE,CAAC,GAAG3D,WAAW,CAAC2D,YAAY,CAAE,CAAE;AAC1CC,IAAI,CAAE,GAAI,CAAAC,IAAI,CAAC,CAAC,CAACC,kBAAkB,CAAC,OAAO,CAAC,CAC5CC,WAAW,CAAE,sBAAsBrB,MAAM,CAAC0B,OAAO,CAAC,CAAC,CAAC,IAAI7C,YAAY,OAAO4D,eAAe,CAACf,OAAO,CAAC,CAAC,CAAC,IAAI3C,UAAU,EAAE,CACrHiB,MAAM,CAAE,CAACA,MAAM,CAAE;AACjBuB,MAAM,CAAE,UACZ,CAAC,CACL,CAAC,CAAC,CACFpB,KAAK,CAAC,aAAaH,MAAM,CAAC0B,OAAO,CAAC,CAAC,CAAC,IAAI7C,YAAY,OAAO4D,eAAe,CAACf,OAAO,CAAC,CAAC,CAAC,IAAI3C,UAAU,GAAG,CAAC,CAC3G,CAAE,MAAO4C,KAAK,CAAE,CACZC,OAAO,CAACD,KAAK,CAAC,wBAAwB,CAAEA,KAAK,CAAC,CAC9CxB,KAAK,CAAC,oBAAoBwB,KAAK,CAACE,OAAO,EAAE,CAAC,CAC9C,CACJ,CAAC,CAED,mBACI1E,KAAA,QAAKwF,SAAS,CAAC,6BAA6B,CAAAC,QAAA,eACxC3F,IAAA,OAAI0F,SAAS,CAAC,yDAAyD,CAACE,KAAK,CAAE,CAAEC,KAAK,CAAE/F,MAAM,CAACgG,aAAc,CAAE,CAAAH,QAAA,CAAC,+BAAmB,CAAI,CAAC,cAGxIzF,KAAA,YAASwF,SAAS,CAAC,OAAO,CAAAC,QAAA,eACtB3F,IAAA,OAAI0F,SAAS,CAAC,yBAAyB,CAACE,KAAK,CAAE,CAAEC,KAAK,CAAE/F,MAAM,CAACiG,UAAW,CAAE,CAAAJ,QAAA,CAAC,iBAAe,CAAI,CAAC,cACjG3F,IAAA,CAACH,SAAS,EAAC6F,SAAS,CAAC,KAAK,CAAAC,QAAA,cACtBzF,KAAA,SAAM8F,QAAQ,CAAEpD,cAAe,CAAC8C,SAAS,CAAC,WAAW,CAAAC,QAAA,eACjDzF,KAAA,QAAAyF,QAAA,eACI3F,IAAA,UAAOiG,OAAO,CAAC,uBAAuB,CAACP,SAAS,CAAC,gCAAgC,CAACE,KAAK,CAAE,CAAEC,KAAK,CAAE/F,MAAM,CAACiG,UAAW,CAAE,CAAAJ,QAAA,CAAC,gBAAc,CAAO,CAAC,cAC7I3F,IAAA,WAAQ2D,EAAE,CAAC,uBAAuB,CAACuC,KAAK,CAAEpF,qBAAsB,CAACqF,QAAQ,CAAGtD,CAAC,EAAK9B,wBAAwB,CAAC8B,CAAC,CAACuD,MAAM,CAACF,KAAK,CAAE,CAACR,SAAS,CAAC,8CAA8C,CAACE,KAAK,CAAE,CAAES,eAAe,CAAEvG,MAAM,CAACwG,eAAe,CAAET,KAAK,CAAE/F,MAAM,CAACiG,UAAW,CAAE,CAAAJ,QAAA,CAC7PrD,iBAAiB,CAACiE,GAAG,CAAC5D,WAAW,eAC9BzC,KAAA,WAA0BgG,KAAK,CAAEvD,WAAY,CAAAgD,QAAA,EAAEhD,WAAW,CAAC,UAAG,CAACtC,WAAW,CAACoC,QAAQ,CAACE,WAAW,CAAC,CAAC8B,OAAO,CAAC,CAAC,CAAC,CAAC,GAAC,GAAhG9B,WAAwG,CACxH,CAAC,CACE,CAAC,EACR,CAAC,cACN3C,IAAA,UAAOwG,IAAI,CAAC,MAAM,CAACC,WAAW,CAAC,mBAAmB,CAACP,KAAK,CAAEtF,eAAgB,CAACuF,QAAQ,CAAGtD,CAAC,EAAKhC,kBAAkB,CAACgC,CAAC,CAACuD,MAAM,CAACF,KAAK,CAAE,CAACR,SAAS,CAAC,8CAA8C,CAACE,KAAK,CAAE,CAAES,eAAe,CAAEvG,MAAM,CAACwG,eAAe,CAAET,KAAK,CAAE/F,MAAM,CAACiG,UAAW,CAAE,CAACW,QAAQ,MAAE,CAAC,cAClR1G,IAAA,UAAOwG,IAAI,CAAC,QAAQ,CAACC,WAAW,CAAC,QAAQ,CAACP,KAAK,CAAExF,cAAe,CAACyF,QAAQ,CAAGtD,CAAC,EAAKlC,iBAAiB,CAACkC,CAAC,CAACuD,MAAM,CAACF,KAAK,CAAE,CAACR,SAAS,CAAC,8CAA8C,CAACE,KAAK,CAAE,CAAES,eAAe,CAAEvG,MAAM,CAACwG,eAAe,CAAET,KAAK,CAAE/F,MAAM,CAACiG,UAAW,CAAE,CAACW,QAAQ,MAAE,CAAC,cACvQxG,KAAA,WAAQgG,KAAK,CAAElF,gBAAiB,CAACmF,QAAQ,CAAGtD,CAAC,EAAK5B,mBAAmB,CAAC4B,CAAC,CAACuD,MAAM,CAACF,KAAK,CAAE,CAACR,SAAS,CAAC,8CAA8C,CAACE,KAAK,CAAE,CAAES,eAAe,CAAEvG,MAAM,CAACwG,eAAe,CAAET,KAAK,CAAE/F,MAAM,CAACiG,UAAW,CAAE,CAAAJ,QAAA,eACzN3F,IAAA,WAAA2F,QAAA,CAAQ,KAAG,CAAQ,CAAC,cAAA3F,IAAA,WAAA2F,QAAA,CAAQ,KAAG,CAAQ,CAAC,cAAA3F,IAAA,WAAA2F,QAAA,CAAQ,KAAG,CAAQ,CAAC,EACxD,CAAC,cACT3F,IAAA,MAAG0F,SAAS,CAAC,8BAA8B,CAAAC,QAAA,CAAC,kEAAgE,CAAG,CAAC,cAChH3F,IAAA,WAAQwG,IAAI,CAAC,QAAQ,CAACd,SAAS,CAAC,uGAAuG,CAACE,KAAK,CAAE,CAAES,eAAe,CAAEvG,MAAM,CAACgG,aAAa,CAAED,KAAK,CAAE/F,MAAM,CAAC6G,UAAU,CAAEC,SAAS,CAAE,YAAY9G,MAAM,CAAC+G,WAAW,EAAG,CAAE,CAAAlB,QAAA,CAAC,mBAAiB,CAAQ,CAAC,EACzR,CAAC,CACA,CAAC,EACP,CAAC,cAGVzF,KAAA,YAASwF,SAAS,CAAC,OAAO,CAAAC,QAAA,eACtB3F,IAAA,OAAI0F,SAAS,CAAC,yBAAyB,CAACE,KAAK,CAAE,CAAEC,KAAK,CAAE/F,MAAM,CAACiG,UAAW,CAAE,CAAAJ,QAAA,CAAC,sBAAoB,CAAI,CAAC,cACtGzF,KAAA,QAAKwF,SAAS,CAAC,uCAAuC,CAAAC,QAAA,eAClDzF,KAAA,CAACL,SAAS,EAAC6F,SAAS,CAAC,KAAK,CAAAC,QAAA,eACtB3F,IAAA,OAAI0F,SAAS,CAAC,6BAA6B,CAACE,KAAK,CAAE,CAAEC,KAAK,CAAE/F,MAAM,CAACgG,aAAc,CAAE,CAAAH,QAAA,CAAC,gCAA8B,CAAI,CAAC,cACvHzF,KAAA,SAAM8F,QAAQ,CAAEnB,aAAc,CAACa,SAAS,CAAC,WAAW,CAAAC,QAAA,eAChD3F,IAAA,UAAOwG,IAAI,CAAC,QAAQ,CAACC,WAAW,CAAC,QAAQ,CAACP,KAAK,CAAEhF,aAAc,CAACiF,QAAQ,CAAGtD,CAAC,EAAK1B,gBAAgB,CAAC0B,CAAC,CAACuD,MAAM,CAACF,KAAK,CAAE,CAACR,SAAS,CAAC,mDAAmD,CAACE,KAAK,CAAE,CAAES,eAAe,CAAEvG,MAAM,CAACwG,eAAe,CAAET,KAAK,CAAE/F,MAAM,CAACiG,UAAW,CAAE,CAACW,QAAQ,MAAE,CAAC,cAC1Q1G,IAAA,UAAOwG,IAAI,CAAC,KAAK,CAACC,WAAW,CAAC,yCAAyC,CAACP,KAAK,CAAE9E,kBAAmB,CAAC+E,QAAQ,CAAGtD,CAAC,EAAKxB,qBAAqB,CAACwB,CAAC,CAACuD,MAAM,CAACF,KAAK,CAAE,CAACR,SAAS,CAAC,mDAAmD,CAACE,KAAK,CAAE,CAAES,eAAe,CAAEvG,MAAM,CAACwG,eAAe,CAAET,KAAK,CAAE/F,MAAM,CAACiG,UAAW,CAAE,CAACW,QAAQ,MAAE,CAAC,cAClT1G,IAAA,WAAQwG,IAAI,CAAC,QAAQ,CAACd,SAAS,CAAC,6EAA6E,CAACE,KAAK,CAAE,CAAES,eAAe,CAAEvG,MAAM,CAACgG,aAAa,CAAED,KAAK,CAAE/F,MAAM,CAAC6G,UAAU,CAAEC,SAAS,CAAE,YAAY9G,MAAM,CAAC+G,WAAW,EAAG,CAAE,CAAAlB,QAAA,CAAC,iBAAe,CAAQ,CAAC,EAC7P,CAAC,EACA,CAAC,cACZzF,KAAA,CAACL,SAAS,EAAC6F,SAAS,CAAC,KAAK,CAAAC,QAAA,eACtB3F,IAAA,OAAI0F,SAAS,CAAC,6BAA6B,CAACE,KAAK,CAAE,CAAEC,KAAK,CAAE/F,MAAM,CAACgG,aAAc,CAAE,CAAAH,QAAA,CAAC,iCAA+B,CAAI,CAAC,cACxHzF,KAAA,SAAM8F,QAAQ,CAAEb,gBAAiB,CAACO,SAAS,CAAC,WAAW,CAAAC,QAAA,eACnDzF,KAAA,QAAAyF,QAAA,eACI3F,IAAA,UAAOiG,OAAO,CAAC,yBAAyB,CAACP,SAAS,CAAC,gCAAgC,CAACE,KAAK,CAAE,CAAEC,KAAK,CAAE/F,MAAM,CAACiG,UAAW,CAAE,CAAAJ,QAAA,CAAC,gBAAc,CAAO,CAAC,cAC/I3F,IAAA,WAAQ2D,EAAE,CAAC,yBAAyB,CAACuC,KAAK,CAAE1E,uBAAwB,CAAC2E,QAAQ,CAAGtD,CAAC,EAAKpB,0BAA0B,CAACoB,CAAC,CAACuD,MAAM,CAACF,KAAK,CAAE,CAACR,SAAS,CAAC,8CAA8C,CAACE,KAAK,CAAE,CAAES,eAAe,CAAEvG,MAAM,CAACwG,eAAe,CAAET,KAAK,CAAE/F,MAAM,CAACiG,UAAW,CAAE,CAAAJ,QAAA,CACnQrD,iBAAiB,CAACiE,GAAG,CAAC5D,WAAW,eAC9BzC,KAAA,WAA0BgG,KAAK,CAAEvD,WAAY,CAAAgD,QAAA,EAAEhD,WAAW,CAAC,UAAG,CAACtC,WAAW,CAACoC,QAAQ,CAACE,WAAW,CAAC,CAAC8B,OAAO,CAAC,CAAC,CAAC,CAAC,GAAC,GAAhG9B,WAAwG,CACxH,CAAC,CACE,CAAC,EACR,CAAC,cACN3C,IAAA,UAAOwG,IAAI,CAAC,QAAQ,CAACC,WAAW,CAAC,QAAQ,CAACP,KAAK,CAAE5E,gBAAiB,CAAC6E,QAAQ,CAAGtD,CAAC,EAAKtB,mBAAmB,CAACsB,CAAC,CAACuD,MAAM,CAACF,KAAK,CAAE,CAACR,SAAS,CAAC,mDAAmD,CAACE,KAAK,CAAE,CAAES,eAAe,CAAEvG,MAAM,CAACwG,eAAe,CAAET,KAAK,CAAE/F,MAAM,CAACiG,UAAW,CAAE,CAACW,QAAQ,MAAE,CAAC,cAChR1G,IAAA,WAAQwG,IAAI,CAAC,QAAQ,CAACd,SAAS,CAAC,6EAA6E,CAACE,KAAK,CAAE,CAAES,eAAe,CAAEvG,MAAM,CAACgG,aAAa,CAAED,KAAK,CAAE/F,MAAM,CAAC6G,UAAU,CAAEC,SAAS,CAAE,YAAY9G,MAAM,CAAC+G,WAAW,EAAG,CAAE,CAAAlB,QAAA,CAAC,oBAAkB,CAAQ,CAAC,EAChQ,CAAC,EACA,CAAC,EACX,CAAC,EACD,CAAC,cAGVzF,KAAA,YAASwF,SAAS,CAAC,OAAO,CAAAC,QAAA,eACtB3F,IAAA,OAAI0F,SAAS,CAAC,yBAAyB,CAACE,KAAK,CAAE,CAAEC,KAAK,CAAE/F,MAAM,CAACiG,UAAW,CAAE,CAAAJ,QAAA,CAAC,mBAAiB,CAAI,CAAC,cACnG3F,IAAA,CAACH,SAAS,EAAC6F,SAAS,CAAC,KAAK,CAAAC,QAAA,cACtBzF,KAAA,SAAM8F,QAAQ,CAAEX,cAAe,CAACK,SAAS,CAAC,WAAW,CAAAC,QAAA,eACjD3F,IAAA,UAAOwG,IAAI,CAAC,QAAQ,CAACC,WAAW,CAAC,oBAAoB,CAACP,KAAK,CAAExE,cAAe,CAACyE,QAAQ,CAAGtD,CAAC,EAAKlB,iBAAiB,CAACkB,CAAC,CAACuD,MAAM,CAACF,KAAK,CAAE,CAACR,SAAS,CAAC,8CAA8C,CAACE,KAAK,CAAE,CAAES,eAAe,CAAEvG,MAAM,CAACwG,eAAe,CAAET,KAAK,CAAE/F,MAAM,CAACiG,UAAW,CAAE,CAACW,QAAQ,MAAE,CAAC,cACnRxG,KAAA,QAAKwF,SAAS,CAAC,wBAAwB,CAAAC,QAAA,eACnCzF,KAAA,WAAQgG,KAAK,CAAEtE,YAAa,CAACuE,QAAQ,CAAGtD,CAAC,EAAKhB,eAAe,CAACgB,CAAC,CAACuD,MAAM,CAACF,KAAK,CAAE,CAACR,SAAS,CAAC,8CAA8C,CAACE,KAAK,CAAE,CAAES,eAAe,CAAEvG,MAAM,CAACwG,eAAe,CAAET,KAAK,CAAE/F,MAAM,CAACiG,UAAW,CAAE,CAAAJ,QAAA,eACjN3F,IAAA,WAAA2F,QAAA,CAAQ,KAAG,CAAQ,CAAC,cAAA3F,IAAA,WAAA2F,QAAA,CAAQ,KAAG,CAAQ,CAAC,cAAA3F,IAAA,WAAA2F,QAAA,CAAQ,KAAG,CAAQ,CAAC,EACxD,CAAC,cACTzF,KAAA,WAAQgG,KAAK,CAAEpE,UAAW,CAACqE,QAAQ,CAAGtD,CAAC,EAAKd,aAAa,CAACc,CAAC,CAACuD,MAAM,CAACF,KAAK,CAAE,CAACR,SAAS,CAAC,8CAA8C,CAACE,KAAK,CAAE,CAAES,eAAe,CAAEvG,MAAM,CAACwG,eAAe,CAAET,KAAK,CAAE/F,MAAM,CAACiG,UAAW,CAAE,CAAAJ,QAAA,eAC7M3F,IAAA,WAAA2F,QAAA,CAAQ,KAAG,CAAQ,CAAC,cAAA3F,IAAA,WAAA2F,QAAA,CAAQ,KAAG,CAAQ,CAAC,cAAA3F,IAAA,WAAA2F,QAAA,CAAQ,KAAG,CAAQ,CAAC,EACxD,CAAC,EACR,CAAC,cACNzF,KAAA,MAAGwF,SAAS,CAAC,mCAAmC,CAACE,KAAK,CAAE,CAAEC,KAAK,CAAE/F,MAAM,CAACgG,aAAc,CAAE,CAAAH,QAAA,EAAC,UAAQ,CAAC3D,cAAc,CAACyC,OAAO,CAAC,CAAC,CAAC,CAAC,GAAC,CAAC3C,UAAU,EAAI,CAAC,cAC7I9B,IAAA,WAAQwG,IAAI,CAAC,QAAQ,CAACd,SAAS,CAAC,uGAAuG,CAACE,KAAK,CAAE,CAAES,eAAe,CAAEvG,MAAM,CAACgG,aAAa,CAAED,KAAK,CAAE/F,MAAM,CAAC6G,UAAU,CAAEC,SAAS,CAAE,YAAY9G,MAAM,CAAC+G,WAAW,EAAG,CAAE,CAAAlB,QAAA,CAAC,sBAAoB,CAAQ,CAAC,EAC5R,CAAC,CACA,CAAC,EACP,CAAC,EACT,CAAC,CAEd,CAAC,CAED,cAAe,CAAAxF,qBAAqB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}