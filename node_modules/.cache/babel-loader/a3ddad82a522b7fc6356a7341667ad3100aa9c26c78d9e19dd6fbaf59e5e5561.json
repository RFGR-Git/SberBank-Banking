{"ast":null,"code":"import React,{useState}from'react';import{doc,updateDoc,addDoc,collection}from'firebase/firestore';import GlassCard from'./common/GlassCard';import{COLORS}from'../constants';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const OpenSpecificAccountPage=_ref=>{let{type,userProfile,setUserProfile,setCurrentView,db,appId,auth}=_ref;const[formData,setFormData]=useState({initialDeposit:'',discordMessageLink:'',collateralLink:''});// Added collateralLink\nconst[loading,setLoading]=useState(false);// State for loading indicator\n// Helper function to generate random debit card details\nconst generateDebitCardDetails=()=>{const num=Array(4).fill(0).map(()=>Math.floor(1000+Math.random()*9000)).join(' ');// 16-digit number\nconst issueDate=new Date('2005-01-01');// Fixed issue date\nconst expiryDate=new Date(issueDate);expiryDate.setFullYear(issueDate.getFullYear()+7);// 7 years expiration\nconst expiryMonth=String(expiryDate.getMonth()+1).padStart(2,'0');const expiryYear=String(expiryDate.getFullYear()).slice(-2);// Last two digits of year\nconst cvv=String(Math.floor(100+Math.random()*900));// 3-digit CVV\nconst pin=String(Math.floor(1000+Math.random()*9000));// 4-digit PIN\nreturn{number:num,expiry:`${expiryMonth}/${expiryYear}`,cvv,pin,issueDate:issueDate.toISOString(),// Store as ISO string for date comparisons\nexpiryDate:expiryDate.toISOString()// Store as ISO string for date comparisons\n};};// Configuration for different account types\nconst accountDetails={Personal:{title:'Open Personal Account (Standard)',info:'The basic, default account for any citizen. Holds wages, transfers, and currency.',fields:[],// No additional fields needed, info collected during registration\nappliesTo:'All verified users',infoRequired:'Name, KYC ID, Initial Deposit, Discord Message Link',approval:'Admin approval',// Changed to Admin approval\nonOpen:async data=>{setLoading(true);const depositAmount=parseFloat(data.initialDeposit);if(isNaN(depositAmount)||depositAmount<=0){alert('Please enter a valid initial deposit amount.');setLoading(false);return false;}if(!data.discordMessageLink){alert('Please provide a Discord message link for fund verification.');setLoading(false);return false;}try{// Submit request for admin approval\nawait addDoc(collection(db,`artifacts/${appId}/public/data/accountRequests`),{userId:auth.currentUser.uid,userName:userProfile.name,accountType:'Personal',initialDeposit:depositAmount,discordMessageLink:data.discordMessageLink,status:'Pending',// Set status to pending\ntimestamp:new Date().toISOString()});alert('Personal Account application submitted successfully! Awaiting admin approval.');setCurrentView('dashboard');// Navigate back to dashboard\nreturn true;}catch(error){console.error(\"Error submitting personal account application:\",error);alert(`Failed to submit Personal Account application: ${error.message}`);return false;}finally{setLoading(false);}}},Savings:{title:'Open Savings Account',info:'Designed for long-term saving, interest accumulation, and stability.',fields:[{name:'accountLabel',label:'Account Label (e.g., \"My Holiday Savings\")',type:'text',required:true}],appliesTo:'Users w/ Personal Account',infoRequired:'Link to personal account, account label, Initial Deposit, Discord Message Link',approval:'Admin approval',// Changed to Admin approval\nonOpen:async data=>{setLoading(true);if(userProfile.accounts.Personal===0){alert('You must have a Personal Account to open a Savings Account.');setLoading(false);return false;}const depositAmount=parseFloat(data.initialDeposit);if(isNaN(depositAmount)||depositAmount<=0){alert('Please enter a valid initial deposit amount.');setLoading(false);return false;}if(!data.discordMessageLink){alert('Please provide a Discord message link for fund verification.');setLoading(false);return false;}try{// Submit request for admin approval\nawait addDoc(collection(db,`artifacts/${appId}/public/data/accountRequests`),{userId:auth.currentUser.uid,userName:userProfile.name,accountType:'Savings',initialDeposit:depositAmount,discordMessageLink:data.discordMessageLink,accountLabel:data.accountLabel,status:'Pending',// Set status to pending\ntimestamp:new Date().toISOString()});alert(`Savings Account application for \"${data.accountLabel}\" submitted successfully! Awaiting admin approval.`);setCurrentView('dashboard');return true;}catch(error){console.error(\"Error submitting savings account application:\",error);alert(`Failed to submit Savings Account application: ${error.message}`);return false;}finally{setLoading(false);}}},Business:{title:'Open Business Account',info:'For business owners or legal entities. Separate from personal account.',fields:[{name:'businessName',label:'Business Name',type:'text',required:true},{name:'licenseId',label:'Business License ID',type:'text',required:true},{name:'directorName',label:'Director Name',type:'text',required:true}],appliesTo:'Business owners or verified legal entities',infoRequired:'Business name, license ID, director name, Initial Deposit, Discord Message Link',approval:'Admin approval',// Requires admin approval\nonOpen:async data=>{setLoading(true);const depositAmount=parseFloat(data.initialDeposit);if(isNaN(depositAmount)||depositAmount<=0){alert('Please enter a valid initial deposit amount.');setLoading(false);return false;}if(!data.discordMessageLink){alert('Please provide a Discord message link for fund verification.');setLoading(false);return false;}try{// Add the request to a public collection for admin review\nawait addDoc(collection(db,`artifacts/${appId}/public/data/accountRequests`),{userId:auth.currentUser.uid,userName:userProfile.name,accountType:'Business',initialDeposit:depositAmount,discordMessageLink:data.discordMessageLink,businessName:data.businessName,licenseId:data.licenseId,directorName:data.directorName,status:'Pending',// Set status to pending\ntimestamp:new Date().toISOString()});alert(`Business Account application for \"${data.businessName}\" submitted. Awaiting admin approval. Initial deposit of ${depositAmount} RUB noted.`);setCurrentView('dashboard');return true;}catch(error){console.error(\"Error submitting business account application:\",error);alert(`Failed to submit Business Account application: ${error.message}`);return false;}finally{setLoading(false);}}},Government:{title:'Open Government Account',info:'Used by ministries, agencies, and state-owned enterprises. Receives treasury funds.',fields:[{name:'ministryName',label:'Ministry/Agency Name',type:'text',required:true},{name:'position',label:'Your Position',type:'text',required:true},{name:'internalCode',label:'Internal Code',type:'text',required:true}],appliesTo:'Government ministers, agencies, SOEs',infoRequired:'Ministry name, position, internal code, Initial Deposit, Discord Message Link',approval:'Admin-only',// Requires admin approval\nonOpen:async data=>{setLoading(true);const depositAmount=parseFloat(data.initialDeposit);if(isNaN(depositAmount)||depositAmount<=0){alert('Please enter a valid initial deposit amount.');setLoading(false);return false;}if(!data.discordMessageLink){alert('Please provide a Discord message link for fund verification.');setLoading(false);return false;}try{// Add the request to a public collection for admin review\nawait addDoc(collection(db,`artifacts/${appId}/public/data/accountRequests`),{userId:auth.currentUser.uid,userName:userProfile.name,accountType:'Government',initialDeposit:depositAmount,discordMessageLink:data.discordMessageLink,ministryName:data.ministryName,position:data.position,internalCode:data.internalCode,status:'Pending',timestamp:new Date().toISOString()});alert(`Government Account application for \"${data.ministryName}\" submitted. Awaiting admin approval. Initial deposit of ${depositAmount} RUB noted.`);setCurrentView('dashboard');return true;}catch(error){console.error(\"Error submitting government account application:\",error);alert(`Failed to submit Government Account application: ${error.message}`);return false;}finally{setLoading(false);}}},CreditCard:{title:'Apply for Credit Card Account',info:'A credit-based line account, not a physical wallet. Linked to credit score.',fields:[{name:'employmentInfo',label:'Employment Information',type:'text',required:true},{name:'creditAgreement',label:'Credit Agreement (Type \"AGREE\")',type:'text',required:true}],appliesTo:'Users w/ credit score ≥ 300',infoRequired:'Employment info (IC), credit agreement',approval:'Admin review or auto if score high',onOpen:async data=>{setLoading(true);if(data.creditAgreement.toUpperCase()!=='AGREE'){alert('You must type \"AGREE\" to accept the credit agreement.');setLoading(false);return false;}// Credit card doesn't take initial deposit as it's a line of credit\ntry{// Submit request for admin approval\nawait addDoc(collection(db,`artifacts/${appId}/public/data/creditCardRequests`),{// New collection for credit card requests\nuserId:auth.currentUser.uid,userName:userProfile.name,creditScore:userProfile.creditScore,employmentInfo:data.employmentInfo,creditAgreement:data.creditAgreement,status:'Pending',// Status will be updated by admin or automated check\ntimestamp:new Date().toISOString()});alert('Credit Card application submitted. Check your dashboard for status updates (may be auto-approved based on score).');setCurrentView('dashboard');return true;}catch(error){console.error(\"Error submitting credit card application:\",error);alert(`Failed to submit Credit Card application: ${error.message}`);return false;}finally{setLoading(false);}}},Investment:{title:'Open Investment Account (Coming Soon)',info:'For advanced users. Used for purchasing bonds, stocks, and tracking returns.',fields:[],appliesTo:'Verified, adult users',infoRequired:'Risk profile, bank link, investment interest, Initial Deposit, Discord Message Link',approval:'Auto-approved or flagged',onOpen:()=>{alert('Investment Account is coming soon! Please check back later.');setCurrentView('dashboard');return false;}},Shadow:{title:'Open Shadow Account',info:'Classified/Hidden account for espionage, secret state funding, or corrupt actors.',fields:[{name:'reason',label:'Reason for Shadow Account (Requires Admin Approval)',type:'textarea',required:true}],appliesTo:'Espionage, secret ops, or corruption RP',infoRequired:'None (admin backend only), Initial Deposit, Discord Message Link',approval:'Admin-only creation',// Admin-only creation\nonOpen:async data=>{setLoading(true);if(!userProfile.isVIP){alert('You are not authorized to open a Shadow Account. This account type is restricted to VIP customers only.');setLoading(false);return false;}const depositAmount=parseFloat(data.initialDeposit);if(isNaN(depositAmount)||depositAmount<=0){alert('Please enter a valid initial deposit amount.');setLoading(false);return false;}if(!data.discordMessageLink){alert('Please provide a Discord message link for fund verification.');setLoading(false);return false;}try{// Add the request to a public collection for admin review\nawait addDoc(collection(db,`artifacts/${appId}/public/data/accountRequests`),{userId:auth.currentUser.uid,userName:userProfile.name,accountType:'Shadow',initialDeposit:depositAmount,discordMessageLink:data.discordMessageLink,reason:data.reason,status:'Pending',timestamp:new Date().toISOString()});alert(`Shadow Account application submitted for review. Reason: ${data.reason}. Initial deposit of ${depositAmount} RUB noted.`);setCurrentView('dashboard');return true;}catch(error){console.error(\"Error submitting shadow account application:\",error);alert(`Failed to submit Shadow Account application: ${error.message}`);return false;}finally{setLoading(false);}}}};const currentAccount=accountDetails[type];// Get details for the current account type\n// Handle form field changes\nconst handleChange=e=>{setFormData({...formData,[e.target.name]:e.target.value});};// Handle form submission\nconst handleSubmit=async e=>{e.preventDefault();await currentAccount.onOpen(formData);// Call the specific onOpen function for the account type\n};// Render \"Coming Soon\" message if applicable\nif(currentAccount.comingSoon){return/*#__PURE__*/_jsxs(\"div\",{className:\"container mx-auto px-4 py-8 text-center\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-4xl font-extrabold mb-8 drop-shadow-sm\",style:{color:COLORS.primaryAccent},children:currentAccount.title}),/*#__PURE__*/_jsxs(GlassCard,{className:\"p-8\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"text-xl text-yellow-400 mb-4\",children:currentAccount.info}),/*#__PURE__*/_jsx(\"p\",{className:\"text-lg text-gray-400\",children:\"This feature is currently under development. Please check back later!\"})]})]});}return/*#__PURE__*/_jsxs(\"div\",{className:\"container mx-auto px-4 py-8\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-4xl font-extrabold mb-8 text-center drop-shadow-sm\",style:{color:COLORS.primaryAccent},children:currentAccount.title}),/*#__PURE__*/_jsxs(GlassCard,{className:\"p-8 max-w-2xl mx-auto\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"text-lg mb-6\",style:{color:COLORS.typography},children:currentAccount.info}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,className:\"space-y-4\",children:[currentAccount.fields.map(field=>/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:field.name,className:\"block text-lg font-medium mb-2\",style:{color:COLORS.typography},children:field.label}),field.type==='textarea'?/*#__PURE__*/_jsx(\"textarea\",{id:field.name,name:field.name,value:formData[field.name]||'',onChange:handleChange,placeholder:field.label,className:\"w-full p-3 border border-gray-600 rounded-lg\",style:{backgroundColor:COLORS.secondaryAccent,color:COLORS.typography},required:field.required,rows:\"4\"}):/*#__PURE__*/_jsx(\"input\",{type:field.type,id:field.name,name:field.name,value:formData[field.name]||'',onChange:handleChange,placeholder:field.label,className:\"w-full p-3 border border-gray-600 rounded-lg\",style:{backgroundColor:COLORS.secondaryAccent,color:COLORS.typography},required:field.required})]},field.name)),type!=='CreditCard'&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"initialDeposit\",className:\"block text-lg font-medium mb-2\",style:{color:COLORS.typography},children:\"Initial Deposit Amount (RUB)\"}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",id:\"initialDeposit\",name:\"initialDeposit\",value:formData.initialDeposit,onChange:handleChange,placeholder:\"e.g., 500.00\",step:\"0.01\",className:\"w-full p-3 border border-gray-600 rounded-lg\",style:{backgroundColor:COLORS.secondaryAccent,color:COLORS.typography},required:true})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"discordMessageLink\",className:\"block text-lg font-medium mb-2\",style:{color:COLORS.typography},children:\"Discord Message Link (Proof of Funds)\"}),/*#__PURE__*/_jsx(\"input\",{type:\"url\",id:\"discordMessageLink\",name:\"discordMessageLink\",value:formData.discordMessageLink,onChange:handleChange,placeholder:\"https://discord.com/channels/...\",className:\"w-full p-3 border border-gray-600 rounded-lg\",style:{backgroundColor:COLORS.secondaryAccent,color:COLORS.typography},required:true})]})]}),type==='Loan'&&/*#__PURE__*/// Assuming a 'Loan' type could be added here later\n_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"collateralLink\",className:\"block text-lg font-medium mb-2\",style:{color:COLORS.typography},children:\"Collateral Discord Message Link (Optional/Required)\"}),/*#__PURE__*/_jsx(\"input\",{type:\"url\",id:\"collateralLink\",name:\"collateralLink\",value:formData.collateralLink,onChange:handleChange,placeholder:\"https://discord.com/channels/...\",className:\"w-full p-3 border border-gray-600 rounded-lg\",style:{backgroundColor:COLORS.secondaryAccent,color:COLORS.typography}}),/*#__PURE__*/_jsx(\"p\",{className:\"text-sm text-gray-400 italic mt-1\",children:\"Required for certain loan amounts/credit scores. Link to proof of asset.\"})]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"w-full font-bold py-3 px-6 rounded-lg shadow-lg transform hover:scale-105 transition-all duration-300\",style:{backgroundColor:COLORS.primaryAccent,color:COLORS.background,boxShadow:`0 0 15px ${COLORS.buttonsGlow}`},disabled:loading// Disable button while loading\n,children:loading?'Submitting...':'Submit Application'})]}),/*#__PURE__*/_jsx(\"h3\",{className:\"text-2xl font-bold mt-8 mb-4\",style:{color:COLORS.primaryAccent},children:\"Application Details\"}),/*#__PURE__*/_jsx(\"div\",{className:\"overflow-x-auto\",children:/*#__PURE__*/_jsxs(\"table\",{className:\"min-w-full text-left text-sm\",children:[/*#__PURE__*/_jsx(\"thead\",{style:{color:COLORS.primaryAccent},children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{className:\"py-2 px-3\",children:\"Category\"}),/*#__PURE__*/_jsx(\"th\",{className:\"py-2 px-3\",children:\"Description\"})]})}),/*#__PURE__*/_jsxs(\"tbody\",{className:\"divide-y divide-gray-700\",children:[/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{className:\"py-2 px-3\",children:\"\\uD83D\\uDC64 Who Can Apply\"}),/*#__PURE__*/_jsx(\"td\",{className:\"py-2 px-3\",children:currentAccount.appliesTo})]}),/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{className:\"py-2 px-3\",children:\"\\uD83D\\uDCC4 Info Required\"}),/*#__PURE__*/_jsx(\"td\",{className:\"py-2 px-3\",children:currentAccount.infoRequired})]}),/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{className:\"py-2 px-3\",children:\"\\u2699\\uFE0F Approval Method\"}),/*#__PURE__*/_jsx(\"td\",{className:\"py-2 px-3\",children:currentAccount.approval})]})]})]})})]})]});};export default OpenSpecificAccountPage;","map":{"version":3,"names":["React","useState","doc","updateDoc","addDoc","collection","GlassCard","COLORS","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","OpenSpecificAccountPage","_ref","type","userProfile","setUserProfile","setCurrentView","db","appId","auth","formData","setFormData","initialDeposit","discordMessageLink","collateralLink","loading","setLoading","generateDebitCardDetails","num","Array","fill","map","Math","floor","random","join","issueDate","Date","expiryDate","setFullYear","getFullYear","expiryMonth","String","getMonth","padStart","expiryYear","slice","cvv","pin","number","expiry","toISOString","accountDetails","Personal","title","info","fields","appliesTo","infoRequired","approval","onOpen","data","depositAmount","parseFloat","isNaN","alert","userId","currentUser","uid","userName","name","accountType","status","timestamp","error","console","message","Savings","label","required","accounts","accountLabel","Business","businessName","licenseId","directorName","Government","ministryName","position","internalCode","CreditCard","creditAgreement","toUpperCase","creditScore","employmentInfo","Investment","Shadow","isVIP","reason","currentAccount","handleChange","e","target","value","handleSubmit","preventDefault","comingSoon","className","children","style","color","primaryAccent","typography","onSubmit","field","htmlFor","id","onChange","placeholder","backgroundColor","secondaryAccent","rows","step","background","boxShadow","buttonsGlow","disabled"],"sources":["C:/Users/trent/OneDrive/Desktop/SberBank Website/src/components/OpenSpecificAccountPage.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { doc, updateDoc, addDoc, collection } from 'firebase/firestore';\r\nimport GlassCard from './common/GlassCard';\r\nimport { COLORS } from '../constants';\r\n\r\nconst OpenSpecificAccountPage = ({ type, userProfile, setUserProfile, setCurrentView, db, appId, auth }) => {\r\n    const [formData, setFormData] = useState({ initialDeposit: '', discordMessageLink: '', collateralLink: '' }); // Added collateralLink\r\n    const [loading, setLoading] = useState(false); // State for loading indicator\r\n\r\n    // Helper function to generate random debit card details\r\n    const generateDebitCardDetails = () => {\r\n        const num = Array(4).fill(0).map(() => Math.floor(1000 + Math.random() * 9000)).join(' '); // 16-digit number\r\n        const issueDate = new Date('2005-01-01'); // Fixed issue date\r\n        const expiryDate = new Date(issueDate);\r\n        expiryDate.setFullYear(issueDate.getFullYear() + 7); // 7 years expiration\r\n        const expiryMonth = String(expiryDate.getMonth() + 1).padStart(2, '0');\r\n        const expiryYear = String(expiryDate.getFullYear()).slice(-2); // Last two digits of year\r\n        const cvv = String(Math.floor(100 + Math.random() * 900)); // 3-digit CVV\r\n        const pin = String(Math.floor(1000 + Math.random() * 9000)); // 4-digit PIN\r\n        return {\r\n            number: num,\r\n            expiry: `${expiryMonth}/${expiryYear}`,\r\n            cvv,\r\n            pin,\r\n            issueDate: issueDate.toISOString(), // Store as ISO string for date comparisons\r\n            expiryDate: expiryDate.toISOString(), // Store as ISO string for date comparisons\r\n        };\r\n    };\r\n\r\n    // Configuration for different account types\r\n    const accountDetails = {\r\n        Personal: {\r\n            title: 'Open Personal Account (Standard)',\r\n            info: 'The basic, default account for any citizen. Holds wages, transfers, and currency.',\r\n            fields: [], // No additional fields needed, info collected during registration\r\n            appliesTo: 'All verified users',\r\n            infoRequired: 'Name, KYC ID, Initial Deposit, Discord Message Link',\r\n            approval: 'Admin approval', // Changed to Admin approval\r\n            onOpen: async (data) => {\r\n                setLoading(true);\r\n                const depositAmount = parseFloat(data.initialDeposit);\r\n                if (isNaN(depositAmount) || depositAmount <= 0) {\r\n                    alert('Please enter a valid initial deposit amount.');\r\n                    setLoading(false);\r\n                    return false;\r\n                }\r\n                if (!data.discordMessageLink) {\r\n                    alert('Please provide a Discord message link for fund verification.');\r\n                    setLoading(false);\r\n                    return false;\r\n                }\r\n\r\n                try {\r\n                    // Submit request for admin approval\r\n                    await addDoc(collection(db, `artifacts/${appId}/public/data/accountRequests`), {\r\n                        userId: auth.currentUser.uid,\r\n                        userName: userProfile.name,\r\n                        accountType: 'Personal',\r\n                        initialDeposit: depositAmount,\r\n                        discordMessageLink: data.discordMessageLink,\r\n                        status: 'Pending', // Set status to pending\r\n                        timestamp: new Date().toISOString()\r\n                    });\r\n                    alert('Personal Account application submitted successfully! Awaiting admin approval.');\r\n                    setCurrentView('dashboard'); // Navigate back to dashboard\r\n                    return true;\r\n                } catch (error) {\r\n                    console.error(\"Error submitting personal account application:\", error);\r\n                    alert(`Failed to submit Personal Account application: ${error.message}`);\r\n                    return false;\r\n                } finally {\r\n                    setLoading(false);\r\n                }\r\n            }\r\n        },\r\n        Savings: {\r\n            title: 'Open Savings Account',\r\n            info: 'Designed for long-term saving, interest accumulation, and stability.',\r\n            fields: [{ name: 'accountLabel', label: 'Account Label (e.g., \"My Holiday Savings\")', type: 'text', required: true }],\r\n            appliesTo: 'Users w/ Personal Account',\r\n            infoRequired: 'Link to personal account, account label, Initial Deposit, Discord Message Link',\r\n            approval: 'Admin approval', // Changed to Admin approval\r\n            onOpen: async (data) => {\r\n                setLoading(true);\r\n                if (userProfile.accounts.Personal === 0) {\r\n                    alert('You must have a Personal Account to open a Savings Account.');\r\n                    setLoading(false);\r\n                    return false;\r\n                }\r\n                const depositAmount = parseFloat(data.initialDeposit);\r\n                if (isNaN(depositAmount) || depositAmount <= 0) {\r\n                    alert('Please enter a valid initial deposit amount.');\r\n                    setLoading(false);\r\n                    return false;\r\n                }\r\n                if (!data.discordMessageLink) {\r\n                    alert('Please provide a Discord message link for fund verification.');\r\n                    setLoading(false);\r\n                    return false;\r\n                }\r\n\r\n                try {\r\n                    // Submit request for admin approval\r\n                    await addDoc(collection(db, `artifacts/${appId}/public/data/accountRequests`), {\r\n                        userId: auth.currentUser.uid,\r\n                        userName: userProfile.name,\r\n                        accountType: 'Savings',\r\n                        initialDeposit: depositAmount,\r\n                        discordMessageLink: data.discordMessageLink,\r\n                        accountLabel: data.accountLabel,\r\n                        status: 'Pending', // Set status to pending\r\n                        timestamp: new Date().toISOString()\r\n                    });\r\n                    alert(`Savings Account application for \"${data.accountLabel}\" submitted successfully! Awaiting admin approval.`);\r\n                    setCurrentView('dashboard');\r\n                    return true;\r\n                } catch (error) {\r\n                    console.error(\"Error submitting savings account application:\", error);\r\n                    alert(`Failed to submit Savings Account application: ${error.message}`);\r\n                    return false;\r\n                } finally {\r\n                    setLoading(false);\r\n                }\r\n            }\r\n        },\r\n        Business: {\r\n            title: 'Open Business Account',\r\n            info: 'For business owners or legal entities. Separate from personal account.',\r\n            fields: [\r\n                { name: 'businessName', label: 'Business Name', type: 'text', required: true },\r\n                { name: 'licenseId', label: 'Business License ID', type: 'text', required: true },\r\n                { name: 'directorName', label: 'Director Name', type: 'text', required: true },\r\n            ],\r\n            appliesTo: 'Business owners or verified legal entities',\r\n            infoRequired: 'Business name, license ID, director name, Initial Deposit, Discord Message Link',\r\n            approval: 'Admin approval', // Requires admin approval\r\n            onOpen: async (data) => {\r\n                setLoading(true);\r\n                const depositAmount = parseFloat(data.initialDeposit);\r\n                if (isNaN(depositAmount) || depositAmount <= 0) {\r\n                    alert('Please enter a valid initial deposit amount.');\r\n                    setLoading(false);\r\n                    return false;\r\n                }\r\n                if (!data.discordMessageLink) {\r\n                    alert('Please provide a Discord message link for fund verification.');\r\n                    setLoading(false);\r\n                    return false;\r\n                }\r\n\r\n                try {\r\n                    // Add the request to a public collection for admin review\r\n                    await addDoc(collection(db, `artifacts/${appId}/public/data/accountRequests`), {\r\n                        userId: auth.currentUser.uid,\r\n                        userName: userProfile.name,\r\n                        accountType: 'Business',\r\n                        initialDeposit: depositAmount,\r\n                        discordMessageLink: data.discordMessageLink,\r\n                        businessName: data.businessName,\r\n                        licenseId: data.licenseId,\r\n                        directorName: data.directorName,\r\n                        status: 'Pending', // Set status to pending\r\n                        timestamp: new Date().toISOString()\r\n                    });\r\n                    alert(`Business Account application for \"${data.businessName}\" submitted. Awaiting admin approval. Initial deposit of ${depositAmount} RUB noted.`);\r\n                    setCurrentView('dashboard');\r\n                    return true;\r\n                } catch (error) {\r\n                    console.error(\"Error submitting business account application:\", error);\r\n                    alert(`Failed to submit Business Account application: ${error.message}`);\r\n                    return false;\r\n                } finally {\r\n                    setLoading(false);\r\n                }\r\n            }\r\n        },\r\n        Government: {\r\n            title: 'Open Government Account',\r\n            info: 'Used by ministries, agencies, and state-owned enterprises. Receives treasury funds.',\r\n            fields: [\r\n                { name: 'ministryName', label: 'Ministry/Agency Name', type: 'text', required: true },\r\n                { name: 'position', label: 'Your Position', type: 'text', required: true },\r\n                { name: 'internalCode', label: 'Internal Code', type: 'text', required: true },\r\n            ],\r\n            appliesTo: 'Government ministers, agencies, SOEs',\r\n            infoRequired: 'Ministry name, position, internal code, Initial Deposit, Discord Message Link',\r\n            approval: 'Admin-only', // Requires admin approval\r\n            onOpen: async (data) => {\r\n                setLoading(true);\r\n                const depositAmount = parseFloat(data.initialDeposit);\r\n                if (isNaN(depositAmount) || depositAmount <= 0) {\r\n                    alert('Please enter a valid initial deposit amount.');\r\n                    setLoading(false);\r\n                    return false;\r\n                }\r\n                if (!data.discordMessageLink) {\r\n                    alert('Please provide a Discord message link for fund verification.');\r\n                    setLoading(false);\r\n                    return false;\r\n                }\r\n\r\n                try {\r\n                    // Add the request to a public collection for admin review\r\n                    await addDoc(collection(db, `artifacts/${appId}/public/data/accountRequests`), {\r\n                        userId: auth.currentUser.uid,\r\n                        userName: userProfile.name,\r\n                        accountType: 'Government',\r\n                        initialDeposit: depositAmount,\r\n                        discordMessageLink: data.discordMessageLink,\r\n                        ministryName: data.ministryName,\r\n                        position: data.position,\r\n                        internalCode: data.internalCode,\r\n                        status: 'Pending',\r\n                        timestamp: new Date().toISOString()\r\n                    });\r\n                    alert(`Government Account application for \"${data.ministryName}\" submitted. Awaiting admin approval. Initial deposit of ${depositAmount} RUB noted.`);\r\n                    setCurrentView('dashboard');\r\n                    return true;\r\n                } catch (error) {\r\n                    console.error(\"Error submitting government account application:\", error);\r\n                    alert(`Failed to submit Government Account application: ${error.message}`);\r\n                    return false;\r\n                } finally {\r\n                    setLoading(false);\r\n                }\r\n            }\r\n        },\r\n        CreditCard: {\r\n            title: 'Apply for Credit Card Account',\r\n            info: 'A credit-based line account, not a physical wallet. Linked to credit score.',\r\n            fields: [\r\n                { name: 'employmentInfo', label: 'Employment Information', type: 'text', required: true },\r\n                { name: 'creditAgreement', label: 'Credit Agreement (Type \"AGREE\")', type: 'text', required: true },\r\n            ],\r\n            appliesTo: 'Users w/ credit score ≥ 300',\r\n            infoRequired: 'Employment info (IC), credit agreement',\r\n            approval: 'Admin review or auto if score high',\r\n            onOpen: async (data) => {\r\n                setLoading(true);\r\n                if (data.creditAgreement.toUpperCase() !== 'AGREE') {\r\n                    alert('You must type \"AGREE\" to accept the credit agreement.');\r\n                    setLoading(false);\r\n                    return false;\r\n                }\r\n\r\n                // Credit card doesn't take initial deposit as it's a line of credit\r\n                try {\r\n                    // Submit request for admin approval\r\n                    await addDoc(collection(db, `artifacts/${appId}/public/data/creditCardRequests`), { // New collection for credit card requests\r\n                        userId: auth.currentUser.uid,\r\n                        userName: userProfile.name,\r\n                        creditScore: userProfile.creditScore,\r\n                        employmentInfo: data.employmentInfo,\r\n                        creditAgreement: data.creditAgreement,\r\n                        status: 'Pending', // Status will be updated by admin or automated check\r\n                        timestamp: new Date().toISOString()\r\n                    });\r\n\r\n                    alert('Credit Card application submitted. Check your dashboard for status updates (may be auto-approved based on score).');\r\n                    setCurrentView('dashboard');\r\n                    return true;\r\n                } catch (error) {\r\n                    console.error(\"Error submitting credit card application:\", error);\r\n                    alert(`Failed to submit Credit Card application: ${error.message}`);\r\n                    return false;\r\n                } finally {\r\n                    setLoading(false);\r\n                }\r\n            }\r\n        },\r\n        Investment: {\r\n            title: 'Open Investment Account (Coming Soon)',\r\n            info: 'For advanced users. Used for purchasing bonds, stocks, and tracking returns.',\r\n            fields: [],\r\n            appliesTo: 'Verified, adult users',\r\n            infoRequired: 'Risk profile, bank link, investment interest, Initial Deposit, Discord Message Link',\r\n            approval: 'Auto-approved or flagged',\r\n            onOpen: () => {\r\n                alert('Investment Account is coming soon! Please check back later.');\r\n                setCurrentView('dashboard');\r\n                return false;\r\n            }\r\n        },\r\n        Shadow: {\r\n            title: 'Open Shadow Account',\r\n            info: 'Classified/Hidden account for espionage, secret state funding, or corrupt actors.',\r\n            fields: [{ name: 'reason', label: 'Reason for Shadow Account (Requires Admin Approval)', type: 'textarea', required: true }],\r\n            appliesTo: 'Espionage, secret ops, or corruption RP',\r\n            infoRequired: 'None (admin backend only), Initial Deposit, Discord Message Link',\r\n            approval: 'Admin-only creation', // Admin-only creation\r\n            onOpen: async (data) => {\r\n                setLoading(true);\r\n                if (!userProfile.isVIP) {\r\n                    alert('You are not authorized to open a Shadow Account. This account type is restricted to VIP customers only.');\r\n                    setLoading(false);\r\n                    return false;\r\n                }\r\n                const depositAmount = parseFloat(data.initialDeposit);\r\n                if (isNaN(depositAmount) || depositAmount <= 0) {\r\n                    alert('Please enter a valid initial deposit amount.');\r\n                    setLoading(false);\r\n                    return false;\r\n                }\r\n                if (!data.discordMessageLink) {\r\n                    alert('Please provide a Discord message link for fund verification.');\r\n                    setLoading(false);\r\n                    return false;\r\n                }\r\n\r\n                try {\r\n                    // Add the request to a public collection for admin review\r\n                    await addDoc(collection(db, `artifacts/${appId}/public/data/accountRequests`), {\r\n                        userId: auth.currentUser.uid,\r\n                        userName: userProfile.name,\r\n                        accountType: 'Shadow',\r\n                        initialDeposit: depositAmount,\r\n                        discordMessageLink: data.discordMessageLink,\r\n                        reason: data.reason,\r\n                        status: 'Pending',\r\n                        timestamp: new Date().toISOString()\r\n                    });\r\n                    alert(`Shadow Account application submitted for review. Reason: ${data.reason}. Initial deposit of ${depositAmount} RUB noted.`);\r\n                    setCurrentView('dashboard');\r\n                    return true;\r\n                } catch (error) {\r\n                    console.error(\"Error submitting shadow account application:\", error);\r\n                    alert(`Failed to submit Shadow Account application: ${error.message}`);\r\n                    return false;\r\n                } finally {\r\n                    setLoading(false);\r\n                }\r\n            }\r\n        },\r\n    };\r\n\r\n    const currentAccount = accountDetails[type]; // Get details for the current account type\r\n\r\n    // Handle form field changes\r\n    const handleChange = (e) => {\r\n        setFormData({ ...formData, [e.target.name]: e.target.value });\r\n    };\r\n\r\n    // Handle form submission\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        await currentAccount.onOpen(formData); // Call the specific onOpen function for the account type\r\n    };\r\n\r\n    // Render \"Coming Soon\" message if applicable\r\n    if (currentAccount.comingSoon) {\r\n        return (\r\n            <div className=\"container mx-auto px-4 py-8 text-center\">\r\n                <h2 className=\"text-4xl font-extrabold mb-8 drop-shadow-sm\" style={{ color: COLORS.primaryAccent }}>{currentAccount.title}</h2>\r\n                <GlassCard className=\"p-8\">\r\n                    <p className=\"text-xl text-yellow-400 mb-4\">{currentAccount.info}</p>\r\n                    <p className=\"text-lg text-gray-400\">This feature is currently under development. Please check back later!</p>\r\n                </GlassCard>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className=\"container mx-auto px-4 py-8\">\r\n            <h2 className=\"text-4xl font-extrabold mb-8 text-center drop-shadow-sm\" style={{ color: COLORS.primaryAccent }}>{currentAccount.title}</h2>\r\n            <GlassCard className=\"p-8 max-w-2xl mx-auto\">\r\n                <p className=\"text-lg mb-6\" style={{ color: COLORS.typography }}>{currentAccount.info}</p>\r\n                <form onSubmit={handleSubmit} className=\"space-y-4\">\r\n                    {/* Render dynamic fields based on account type */}\r\n                    {currentAccount.fields.map(field => (\r\n                        <div key={field.name}>\r\n                            <label htmlFor={field.name} className=\"block text-lg font-medium mb-2\" style={{ color: COLORS.typography }}>{field.label}</label>\r\n                            {field.type === 'textarea' ? (\r\n                                <textarea id={field.name} name={field.name} value={formData[field.name] || ''} onChange={handleChange} placeholder={field.label} className=\"w-full p-3 border border-gray-600 rounded-lg\" style={{ backgroundColor: COLORS.secondaryAccent, color: COLORS.typography }} required={field.required} rows=\"4\"></textarea>\r\n                            ) : (\r\n                                <input type={field.type} id={field.name} name={field.name} value={formData[field.name] || ''} onChange={handleChange} placeholder={field.label} className=\"w-full p-3 border border-gray-600 rounded-lg\" style={{ backgroundColor: COLORS.secondaryAccent, color: COLORS.typography }} required={field.required} />\r\n                            )}\r\n                        </div>\r\n                    ))}\r\n                    {/* Initial Deposit and Discord Link fields (not required for Credit Card) */}\r\n                    {type !== 'CreditCard' && (\r\n                        <>\r\n                            <div>\r\n                                <label htmlFor=\"initialDeposit\" className=\"block text-lg font-medium mb-2\" style={{ color: COLORS.typography }}>Initial Deposit Amount (RUB)</label>\r\n                                <input type=\"number\" id=\"initialDeposit\" name=\"initialDeposit\" value={formData.initialDeposit} onChange={handleChange} placeholder=\"e.g., 500.00\" step=\"0.01\" className=\"w-full p-3 border border-gray-600 rounded-lg\" style={{ backgroundColor: COLORS.secondaryAccent, color: COLORS.typography }} required />\r\n                            </div>\r\n                            <div>\r\n                                <label htmlFor=\"discordMessageLink\" className=\"block text-lg font-medium mb-2\" style={{ color: COLORS.typography }}>Discord Message Link (Proof of Funds)</label>\r\n                                <input type=\"url\" id=\"discordMessageLink\" name=\"discordMessageLink\" value={formData.discordMessageLink} onChange={handleChange} placeholder=\"https://discord.com/channels/...\" className=\"w-full p-3 border border-gray-600 rounded-lg\" style={{ backgroundColor: COLORS.secondaryAccent, color: COLORS.typography }} required />\r\n                            </div>\r\n                        </>\r\n                    )}\r\n                    {/* Collateral Link for Loans (Conceptual for this page, actual loan application is in LoanCreditSystemLayout) */}\r\n                    {type === 'Loan' && ( // Assuming a 'Loan' type could be added here later\r\n                        <div>\r\n                            <label htmlFor=\"collateralLink\" className=\"block text-lg font-medium mb-2\" style={{ color: COLORS.typography }}>Collateral Discord Message Link (Optional/Required)</label>\r\n                            <input type=\"url\" id=\"collateralLink\" name=\"collateralLink\" value={formData.collateralLink} onChange={handleChange} placeholder=\"https://discord.com/channels/...\" className=\"w-full p-3 border border-gray-600 rounded-lg\" style={{ backgroundColor: COLORS.secondaryAccent, color: COLORS.typography }} />\r\n                            <p className=\"text-sm text-gray-400 italic mt-1\">Required for certain loan amounts/credit scores. Link to proof of asset.</p>\r\n                        </div>\r\n                    )}\r\n                    <button\r\n                        type=\"submit\"\r\n                        className=\"w-full font-bold py-3 px-6 rounded-lg shadow-lg transform hover:scale-105 transition-all duration-300\"\r\n                        style={{ backgroundColor: COLORS.primaryAccent, color: COLORS.background, boxShadow: `0 0 15px ${COLORS.buttonsGlow}` }}\r\n                        disabled={loading} // Disable button while loading\r\n                    >\r\n                        {loading ? 'Submitting...' : 'Submit Application'}\r\n                    </button>\r\n                </form>\r\n\r\n                {/* Application Details Table */}\r\n                <h3 className=\"text-2xl font-bold mt-8 mb-4\" style={{ color: COLORS.primaryAccent }}>Application Details</h3>\r\n                <div className=\"overflow-x-auto\">\r\n                    <table className=\"min-w-full text-left text-sm\">\r\n                        <thead style={{ color: COLORS.primaryAccent }}>\r\n                            <tr>\r\n                                <th className=\"py-2 px-3\">Category</th>\r\n                                <th className=\"py-2 px-3\">Description</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody className=\"divide-y divide-gray-700\">\r\n                            <tr><td className=\"py-2 px-3\">👤 Who Can Apply</td><td className=\"py-2 px-3\">{currentAccount.appliesTo}</td></tr>\r\n                            <tr><td className=\"py-2 px-3\">📄 Info Required</td><td className=\"py-2 px-3\">{currentAccount.infoRequired}</td></tr>\r\n                            <tr><td className=\"py-2 px-3\">⚙️ Approval Method</td><td className=\"py-2 px-3\">{currentAccount.approval}</td></tr>\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </GlassCard>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default OpenSpecificAccountPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}