{"ast":null,"code":"import React,{useState}from'react';import{doc,updateDoc,getDoc}from'firebase/firestore';import GlassCard from'./common/GlassCard';import{COLORS}from'../constants';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const BusinessBankingLayout=_ref=>{let{userProfile,db,appId,auth}=_ref;// Check if the user has a business account opened (balance > 0)\nconst isBusinessAccount=userProfile.accounts.Business>0;const[employeeName,setEmployeeName]=useState('');const[employeeRole,setEmployeeRole]=useState('');const[employeeSalary,setEmployeeSalary]=useState('');// Handle adding a fictional employee (for UI demonstration)\nconst handleAddEmployee=async e=>{e.preventDefault();// In a real application, this would involve adding employee data to a sub-collection\n// under the user's business account document in Firestore.\nalert(`Employee ${employeeName} (${employeeRole}) with salary ${employeeSalary} RUB added.`);setEmployeeName('');setEmployeeRole('');setEmployeeSalary('');};// Handle running payroll simulation\nconst handleRunPayroll=async()=>{const payrollAmount=5000;// Example fixed payroll amount for simulation\n// Check if business account has sufficient funds\nif(userProfile.accounts.Business<payrollAmount){alert('Insufficient funds in Business Account for payroll.');return;}try{const userDocRef=doc(db,`artifacts/${appId}/users`,auth.currentUser.uid);// Deduct payroll amount from business account and overall balance, record transaction\nawait updateDoc(userDocRef,{'accounts.Business':userProfile.accounts.Business-payrollAmount,balance:userProfile.balance-payrollAmount,transactions:[...userProfile.transactions,{date:new Date().toLocaleDateString('en-US'),description:'Payroll Run',amount:-payrollAmount,// Negative for outflow\nstatus:'Complete'}]});alert(`Payroll of ${payrollAmount.toFixed(2)} RUB debited from Business Account.`);}catch(error){console.error(\"Error running payroll:\",error);alert(`Payroll failed: ${error.message}`);}};// Handle receiving invoice payment simulation\nconst handleReceiveInvoicePayment=async()=>{const invoiceAmount=10000;// Example fixed invoice amount\ntry{const userDocRef=doc(db,`artifacts/${appId}/users`,auth.currentUser.uid);// Add invoice amount to business account and overall balance, record transaction\nawait updateDoc(userDocRef,{'accounts.Business':userProfile.accounts.Business+invoiceAmount,balance:userProfile.balance+invoiceAmount,transactions:[...userProfile.transactions,{date:new Date().toLocaleDateString('en-US'),description:'Invoice Payment Received',amount:invoiceAmount,// Positive for inflow\nstatus:'Complete'}]});alert(`Received invoice payment of ${invoiceAmount.toFixed(2)} RUB to Business Account.`);}catch(error){console.error(\"Error receiving invoice payment:\",error);alert(`Failed to receive invoice payment: ${error.message}`);}};return/*#__PURE__*/_jsxs(\"div\",{className:\"container mx-auto px-4 py-8\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-4xl font-extrabold mb-8 text-center drop-shadow-sm\",style:{color:COLORS.primaryAccent},children:\"\\uD83C\\uDFE6 Banking for Businesses\"}),!isBusinessAccount&&/*#__PURE__*/_jsxs(GlassCard,{className:\"p-8 text-center mb-12\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"text-xl text-red-500 font-bold\",children:\"Access Denied:\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-lg text-gray-400 mt-2\",children:\"This section is only available for Business Accounts. Please open a Business Account to access these features.\"})]}),isBusinessAccount&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"section\",{className:\"mb-12\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-3xl font-bold mb-6\",style:{color:COLORS.typography},children:\"Corporate Account Management\"}),/*#__PURE__*/_jsx(GlassCard,{className:\"p-8\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-4\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"text-xl font-semibold\",style:{color:COLORS.primaryAccent},children:\"Business Name: SberTech Solutions\"}),/*#__PURE__*/_jsxs(\"p\",{className:\"text-gray-400\",children:[\"Corporate Account Balance: \",/*#__PURE__*/_jsxs(\"span\",{className:\"font-bold text-2xl\",style:{color:COLORS.primaryAccent},children:[userProfile.accounts.Business.toFixed(2),\" RUB\"]})]}),/*#__PURE__*/_jsx(\"button\",{onClick:handleReceiveInvoicePayment,className:\"w-full font-bold py-3 px-6 rounded-lg shadow-lg transform hover:scale-105 transition-all duration-300\",style:{backgroundColor:COLORS.primaryAccent,color:COLORS.background,boxShadow:`0 0 15px ${COLORS.buttonsGlow}`},children:\"Receive Invoice Payment\"})]})})]}),/*#__PURE__*/_jsxs(\"section\",{className:\"mb-12\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-3xl font-bold mb-6\",style:{color:COLORS.typography},children:\"Payroll System\"}),/*#__PURE__*/_jsxs(GlassCard,{className:\"p-8\",children:[/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleAddEmployee,className:\"space-y-4\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Employee Name\",value:employeeName,onChange:e=>setEmployeeName(e.target.value),className:\"w-full p-3 border border-gray-600 rounded-lg\",style:{backgroundColor:COLORS.secondaryAccent,color:COLORS.typography},required:true}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Employee Role\",value:employeeRole,onChange:e=>setEmployeeRole(e.target.value),className:\"w-full p-3 border border-gray-600 rounded-lg\",style:{backgroundColor:COLORS.secondaryAccent,color:COLORS.typography},required:true}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",placeholder:\"Salary (RUB)\",value:employeeSalary,onChange:e=>setEmployeeSalary(e.target.value),className:\"w-full p-3 border border-gray-600 rounded-lg\",style:{backgroundColor:COLORS.secondaryAccent,color:COLORS.typography},required:true}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"w-full font-bold py-3 px-6 rounded-lg shadow-lg transform hover:scale-105 transition-all duration-300\",style:{backgroundColor:COLORS.primaryAccent,color:COLORS.background,boxShadow:`0 0 15px ${COLORS.buttonsGlow}`},children:\"Add Employee\"})]}),/*#__PURE__*/_jsx(\"button\",{onClick:handleRunPayroll,className:\"w-full font-bold py-3 px-6 rounded-lg shadow-lg transform hover:scale-105 transition-all duration-300 mt-4\",style:{backgroundColor:COLORS.primaryAccent,color:COLORS.background,boxShadow:`0 0 15px ${COLORS.buttonsGlow}`},children:\"Run Payroll\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-sm text-gray-400 italic mt-4\",children:\"Auto-pay cycles and tax withholding would be configured here.\"})]})]}),/*#__PURE__*/_jsxs(\"section\",{className:\"mb-12\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-3xl font-bold mb-6\",style:{color:COLORS.typography},children:\"Investment Products (Placeholder)\"}),/*#__PURE__*/_jsx(GlassCard,{className:\"p-8 text-center\",children:/*#__PURE__*/_jsx(\"p\",{className:\"text-gray-400\",children:\"Investment products for businesses would be displayed here. (Currently removed for this draft phase).\"})})]})]})]});};export default BusinessBankingLayout;","map":{"version":3,"names":["React","useState","doc","updateDoc","getDoc","GlassCard","COLORS","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","BusinessBankingLayout","_ref","userProfile","db","appId","auth","isBusinessAccount","accounts","Business","employeeName","setEmployeeName","employeeRole","setEmployeeRole","employeeSalary","setEmployeeSalary","handleAddEmployee","e","preventDefault","alert","handleRunPayroll","payrollAmount","userDocRef","currentUser","uid","balance","transactions","date","Date","toLocaleDateString","description","amount","status","toFixed","error","console","message","handleReceiveInvoicePayment","invoiceAmount","className","children","style","color","primaryAccent","typography","onClick","backgroundColor","background","boxShadow","buttonsGlow","onSubmit","type","placeholder","value","onChange","target","secondaryAccent","required"],"sources":["C:/Users/trent/OneDrive/Desktop/SberBank Website/src/components/BusinessBankingLayout.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { doc, updateDoc, getDoc } from 'firebase/firestore';\r\nimport GlassCard from './common/GlassCard';\r\nimport { COLORS } from '../constants';\r\n\r\nconst BusinessBankingLayout = ({ userProfile, db, appId, auth }) => {\r\n    // Check if the user has a business account opened (balance > 0)\r\n    const isBusinessAccount = userProfile.accounts.Business > 0;\r\n    const [employeeName, setEmployeeName] = useState('');\r\n    const [employeeRole, setEmployeeRole] = useState('');\r\n    const [employeeSalary, setEmployeeSalary] = useState('');\r\n\r\n    // Handle adding a fictional employee (for UI demonstration)\r\n    const handleAddEmployee = async (e) => {\r\n        e.preventDefault();\r\n        // In a real application, this would involve adding employee data to a sub-collection\r\n        // under the user's business account document in Firestore.\r\n        alert(`Employee ${employeeName} (${employeeRole}) with salary ${employeeSalary} RUB added.`);\r\n        setEmployeeName('');\r\n        setEmployeeRole('');\r\n        setEmployeeSalary('');\r\n    };\r\n\r\n    // Handle running payroll simulation\r\n    const handleRunPayroll = async () => {\r\n        const payrollAmount = 5000; // Example fixed payroll amount for simulation\r\n        // Check if business account has sufficient funds\r\n        if (userProfile.accounts.Business < payrollAmount) {\r\n            alert('Insufficient funds in Business Account for payroll.');\r\n            return;\r\n        }\r\n        try {\r\n            const userDocRef = doc(db, `artifacts/${appId}/users`, auth.currentUser.uid);\r\n            // Deduct payroll amount from business account and overall balance, record transaction\r\n            await updateDoc(userDocRef, {\r\n                'accounts.Business': userProfile.accounts.Business - payrollAmount,\r\n                balance: userProfile.balance - payrollAmount,\r\n                transactions: [...userProfile.transactions, {\r\n                    date: new Date().toLocaleDateString('en-US'),\r\n                    description: 'Payroll Run',\r\n                    amount: -payrollAmount, // Negative for outflow\r\n                    status: 'Complete'\r\n                }]\r\n            });\r\n            alert(`Payroll of ${payrollAmount.toFixed(2)} RUB debited from Business Account.`);\r\n        } catch (error) {\r\n            console.error(\"Error running payroll:\", error);\r\n            alert(`Payroll failed: ${error.message}`);\r\n        }\r\n    };\r\n\r\n    // Handle receiving invoice payment simulation\r\n    const handleReceiveInvoicePayment = async () => {\r\n        const invoiceAmount = 10000; // Example fixed invoice amount\r\n        try {\r\n            const userDocRef = doc(db, `artifacts/${appId}/users`, auth.currentUser.uid);\r\n            // Add invoice amount to business account and overall balance, record transaction\r\n            await updateDoc(userDocRef, {\r\n                'accounts.Business': userProfile.accounts.Business + invoiceAmount,\r\n                balance: userProfile.balance + invoiceAmount,\r\n                transactions: [...userProfile.transactions, {\r\n                    date: new Date().toLocaleDateString('en-US'),\r\n                    description: 'Invoice Payment Received',\r\n                    amount: invoiceAmount, // Positive for inflow\r\n                    status: 'Complete'\r\n                }]\r\n            });\r\n            alert(`Received invoice payment of ${invoiceAmount.toFixed(2)} RUB to Business Account.`);\r\n        } catch (error) {\r\n            console.error(\"Error receiving invoice payment:\", error);\r\n            alert(`Failed to receive invoice payment: ${error.message}`);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"container mx-auto px-4 py-8\">\r\n            <h2 className=\"text-4xl font-extrabold mb-8 text-center drop-shadow-sm\" style={{ color: COLORS.primaryAccent }}>🏦 Banking for Businesses</h2>\r\n\r\n            {/* Message if user does not have a business account */}\r\n            {!isBusinessAccount && (\r\n                <GlassCard className=\"p-8 text-center mb-12\">\r\n                    <p className=\"text-xl text-red-500 font-bold\">Access Denied:</p>\r\n                    <p className=\"text-lg text-gray-400 mt-2\">This section is only available for Business Accounts. Please open a Business Account to access these features.</p>\r\n                </GlassCard>\r\n            )}\r\n\r\n            {/* Business Banking features (only visible if user has a business account) */}\r\n            {isBusinessAccount && (\r\n                <>\r\n                    {/* Corporate Account Management Section */}\r\n                    <section className=\"mb-12\">\r\n                        <h3 className=\"text-3xl font-bold mb-6\" style={{ color: COLORS.typography }}>Corporate Account Management</h3>\r\n                        <GlassCard className=\"p-8\">\r\n                            <div className=\"space-y-4\">\r\n                                <p className=\"text-xl font-semibold\" style={{ color: COLORS.primaryAccent }}>Business Name: SberTech Solutions</p>\r\n                                <p className=\"text-gray-400\">Corporate Account Balance: <span className=\"font-bold text-2xl\" style={{ color: COLORS.primaryAccent }}>{userProfile.accounts.Business.toFixed(2)} RUB</span></p>\r\n                                <button onClick={handleReceiveInvoicePayment} className=\"w-full font-bold py-3 px-6 rounded-lg shadow-lg transform hover:scale-105 transition-all duration-300\" style={{ backgroundColor: COLORS.primaryAccent, color: COLORS.background, boxShadow: `0 0 15px ${COLORS.buttonsGlow}` }}>Receive Invoice Payment</button>\r\n                            </div>\r\n                        </GlassCard>\r\n                    </section>\r\n\r\n                    {/* Payroll System Section */}\r\n                    <section className=\"mb-12\">\r\n                        <h3 className=\"text-3xl font-bold mb-6\" style={{ color: COLORS.typography }}>Payroll System</h3>\r\n                        <GlassCard className=\"p-8\">\r\n                            <form onSubmit={handleAddEmployee} className=\"space-y-4\">\r\n                                <input type=\"text\" placeholder=\"Employee Name\" value={employeeName} onChange={(e) => setEmployeeName(e.target.value)} className=\"w-full p-3 border border-gray-600 rounded-lg\" style={{ backgroundColor: COLORS.secondaryAccent, color: COLORS.typography }} required />\r\n                                <input type=\"text\" placeholder=\"Employee Role\" value={employeeRole} onChange={(e) => setEmployeeRole(e.target.value)} className=\"w-full p-3 border border-gray-600 rounded-lg\" style={{ backgroundColor: COLORS.secondaryAccent, color: COLORS.typography }} required />\r\n                                <input type=\"number\" placeholder=\"Salary (RUB)\" value={employeeSalary} onChange={(e) => setEmployeeSalary(e.target.value)} className=\"w-full p-3 border border-gray-600 rounded-lg\" style={{ backgroundColor: COLORS.secondaryAccent, color: COLORS.typography }} required />\r\n                                <button type=\"submit\" className=\"w-full font-bold py-3 px-6 rounded-lg shadow-lg transform hover:scale-105 transition-all duration-300\" style={{ backgroundColor: COLORS.primaryAccent, color: COLORS.background, boxShadow: `0 0 15px ${COLORS.buttonsGlow}` }}>Add Employee</button>\r\n                            </form>\r\n                            <button onClick={handleRunPayroll} className=\"w-full font-bold py-3 px-6 rounded-lg shadow-lg transform hover:scale-105 transition-all duration-300 mt-4\" style={{ backgroundColor: COLORS.primaryAccent, color: COLORS.background, boxShadow: `0 0 15px ${COLORS.buttonsGlow}` }}>Run Payroll</button>\r\n                            <p className=\"text-sm text-gray-400 italic mt-4\">Auto-pay cycles and tax withholding would be configured here.</p>\r\n                        </GlassCard>\r\n                    </section>\r\n\r\n                    {/* Investment Products (Placeholder) - Removed from previous versions but kept as a section header for clarity */}\r\n                    <section className=\"mb-12\">\r\n                        <h3 className=\"text-3xl font-bold mb-6\" style={{ color: COLORS.typography }}>Investment Products (Placeholder)</h3>\r\n                        <GlassCard className=\"p-8 text-center\">\r\n                            <p className=\"text-gray-400\">Investment products for businesses would be displayed here. (Currently removed for this draft phase).</p>\r\n                        </GlassCard>\r\n                    </section>\r\n                </>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default BusinessBankingLayout;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}